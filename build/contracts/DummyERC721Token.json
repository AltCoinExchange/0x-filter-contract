{
  "contractName": "DummyERC721Token",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_approved",
          "type": "address"
        },
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_operator",
          "type": "address"
        },
        {
          "name": "_approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        },
        {
          "name": "_operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "_name",
          "type": "string"
        },
        {
          "name": "_symbol",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_to",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_approved",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_operator",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "_approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        },
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "0x60806040523480156200001157600080fd5b5060405162002115380380620021158339810180604052810190808051820192919060200180518201929190505050336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550816005908051906020019062000098929190620000ba565b508060069080519060200190620000b1929190620000ba565b50505062000169565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620000fd57805160ff19168380011785556200012e565b828001600101855582156200012e579182015b828111156200012d57825182559160200191906001019062000110565b5b5090506200013d919062000141565b5090565b6200016691905b808211156200016257600081600090555060010162000148565b5090565b90565b611f9c80620001796000396000f3006080604052600436106100db576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806306fdde03146100e0578063081812fc14610170578063095ea7b3146101dd57806323b872dd1461022a57806340c10f191461029757806342842e0e146102e45780636352211e1461035157806370a08231146103be5780638da5cb5b1461041557806395d89b411461046c5780639dc29fac146104fc578063a22cb46514610549578063b88d4fde14610598578063e985e9c51461061d578063f2fde38b14610698575b600080fd5b3480156100ec57600080fd5b506100f56106db565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561013557808201518184015260208101905061011a565b50505050905090810190601f1680156101625780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561017c57600080fd5b5061019b60048036038101908080359060200190929190505050610779565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156101e957600080fd5b50610228600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506107b6565b005b34801561023657600080fd5b50610295600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610929565b005b3480156102a357600080fd5b506102e2600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610dd1565b005b3480156102f057600080fd5b5061034f600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610ddf565b005b34801561035d57600080fd5b5061037c6004803603810190808035906020019092919050505061103a565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156103ca57600080fd5b506103ff600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611121565b6040518082815260200191505060405180910390f35b34801561042157600080fd5b5061042a61120e565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561047857600080fd5b50610481611233565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156104c15780820151818401526020810190506104a6565b50505050905090810190601f1680156104ee5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561050857600080fd5b50610547600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506112d1565b005b34801561055557600080fd5b50610596600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035151590602001909291905050506113a3565b005b3480156105a457600080fd5b5061061b600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291908035906020019082018035906020019190919293919293905050506114a4565b005b34801561062957600080fd5b5061067e600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061170f565b604051808215151515815260200191505060405180910390f35b3480156106a457600080fd5b506106d9600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506117a3565b005b60058054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156107715780601f1061074657610100808354040283529160200191610771565b820191906000526020600020905b81548152906001019060200180831161075457829003601f168201915b505050505081565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60006107c18261103a565b90508073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614806108035750610802813361170f565b5b1515610877576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f4552433732315f494e56414c49445f53454e444552000000000000000000000081525060200191505060405180910390fd5b826002600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050565b60008060008073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16141515156109d2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f4552433732315f5a45524f5f544f5f414444524553530000000000000000000081525060200191505060405180910390fd5b6109db8461103a565b92508273ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff16141515610a80576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f4552433732315f4f574e45525f4d49534d41544348000000000000000000000081525060200191505060405180910390fd5b339150610a8c84610779565b90508273ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161480610ace5750610acd838361170f565b5b80610b0457508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16145b1515610b78576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f4552433732315f494e56414c49445f5350454e4445520000000000000000000081525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515610c025760006002600086815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b846001600086815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610c9e600360008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205460016118e1565b600360008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610d2b600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546001611966565b600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550838573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050505050565b610ddb82826119f0565b5050565b600080610ded858585610929565b833b91506000821115611033578373ffffffffffffffffffffffffffffffffffffffff1663150b7a023387866040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200180602001828103825260008152602001602001945050505050602060405180830381600087803b158015610ee557600080fd5b505af1158015610ef9573d6000803e3d6000fd5b505050506040513d6020811015610f0f57600080fd5b8101908080519060200190929190505050905060405180807f6f6e455243373231526563656976656428616464726573732c6164647265737381526020017f2c75696e743235362c6279746573290000000000000000000000000000000000815250602f01905060405180910390207bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916141515611032576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f4552433732315f494e56414c49445f53454c4543544f5200000000000000000081525060200191505060405180910390fd5b5b5050505050565b6000806001600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515611118576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f4552433732315f5a45524f5f4f574e455200000000000000000000000000000081525060200191505060405180910390fd5b80915050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141515156111c7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f4552433732315f5a45524f5f4f574e455200000000000000000000000000000081525060200191505060405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60068054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156112c95780601f1061129e576101008083540402835291602001916112c9565b820191906000526020600020905b8154815290600101906020018083116112ac57829003601f168201915b505050505081565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611395576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f4f4e4c595f434f4e54524143545f4f574e45520000000000000000000000000081525060200191505060405180910390fd5b61139f8282611cb0565b5050565b80600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051808215151515815260200191505060405180910390a35050565b6000806114b2878787610929565b853b91506000821115611706578573ffffffffffffffffffffffffffffffffffffffff1663150b7a0233898888886040518663ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200184815260200180602001828103825284848281815260200192508082843782019150509650505050505050602060405180830381600087803b1580156115b857600080fd5b505af11580156115cc573d6000803e3d6000fd5b505050506040513d60208110156115e257600080fd5b8101908080519060200190929190505050905060405180807f6f6e455243373231526563656976656428616464726573732c6164647265737381526020017f2c75696e743235362c6279746573290000000000000000000000000000000000815250602f01905060405180910390207bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916141515611705576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f4552433732315f494e56414c49445f53454c4543544f5200000000000000000081525060200191505060405180910390fd5b5b50505050505050565b6000600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611867576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f4f4e4c595f434f4e54524143545f4f574e45520000000000000000000000000081525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415156118de57806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b600082821115151561195b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f55494e543235365f554e444552464c4f5700000000000000000000000000000081525060200191505060405180910390fd5b818303905092915050565b60008082840190508381101515156119e6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f55494e543235365f4f564552464c4f570000000000000000000000000000000081525060200191505060405180910390fd5b8091505092915050565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614151515611a96576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f4552433732315f5a45524f5f544f5f414444524553530000000000000000000081525060200191505060405180910390fd5b6001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515611b70576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f4552433732315f4f574e45525f414c52454144595f455849535453000000000081525060200191505060405180910390fd5b826001600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611c0c600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546001611966565b600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550818373ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614151515611d56576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f4552433732315f5a45524f5f4f574e45525f414444524553530000000000000081525060200191505060405180910390fd5b6001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515611e2f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f4552433732315f4f574e45525f4d49534d41544348000000000000000000000081525060200191505060405180910390fd5b60006001600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611ecc600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205460016118e1565b600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555081600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050505600a165627a7a72305820df74948a132720c52f54b0a78f3ee9a91c408490dcba6028d8838745a86229c10029",
  "deployedBytecode": "",
  "sourceMap": "765:1013:87:-;;;888:139;8:9:-1;5:2;;;30:1;27;20:12;5:2;888:139:87;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;171:10:107;163:5;;:18;;;;;;;;;;;;;;;;;;989:5:87;982:4;:12;;;;;;;;;;;;:::i;:::-;;1013:7;1004:6;:16;;;;;;;;;;;;:::i;:::-;;888:139;;765:1013;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "765:1013:87:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;837:18;;8:9:-1;5:2;;;30:1;27;20:12;5:2;837:18:87;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;837:18:87;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8411:140:93;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8411:140:93;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4401:400;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4401:400:93;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6647:974;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6647:974:93;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1285:103:87;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1285:103:87;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3349:682:93;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3349:682:93;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7883:257;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7883:257:93;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5806:229;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5806:229:93;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;92:20:107;;8:9:-1;5:2;;;30:1;27;20:12;5:2;92:20:107;;;;;;;;;;;;;;;;;;;;;;;;;;;861::87;;8:9:-1;5:2;;;30:1;27;20:12;5:2;861:20:87;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;861:20:87;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1649:127;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1649:127:87;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5207:261:93;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5207:261:93;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2280:706;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2280:706:93;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8852:176;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8852:176:93;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;334:167:107;;8:9:-1;5:2;;;30:1;27;20:12;5:2;334:167:107;;;;;;;;;;;;;;;;;;;;;;;;;;;;837:18:87;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;8411:140:93:-;8495:7;8525:9;:19;8535:8;8525:19;;;;;;;;;;;;;;;;;;;;;8518:26;;8411:140;;;:::o;4401:400::-;4486:13;4502:17;4510:8;4502:7;:17::i;:::-;4486:33;;4564:5;4550:19;;:10;:19;;;:58;;;;4573:35;4590:5;4597:10;4573:16;:35::i;:::-;4550:58;4529:126;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4688:9;4666;:19;4676:8;4666:19;;;;;;;;;;;;:31;;;;;;;;;;;;;;;;;;4776:8;4753:9;4712:82;;4734:5;4712:82;;;;;;;;;;;;4401:400;;;:::o;6647:974::-;6871:13;7007:15;7045:23;6810:1;6795:17;;:3;:17;;;;6774:86;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6887:17;6895:8;6887:7;:17::i;:::-;6871:33;;6944:5;6935:14;;:5;:14;;;6914:82;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7025:10;7007:28;;7071:21;7083:8;7071:11;:21::i;:::-;7045:47;;7134:5;7123:16;;:7;:16;;;:64;;;;7155:32;7172:5;7179:7;7155:16;:32::i;:::-;7123:64;:106;;;;7222:7;7203:26;;:15;:26;;;7123:106;7102:175;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7319:1;7292:29;;:15;:29;;;;7288:92;;;7367:1;7337:9;:19;7347:8;7337:19;;;;;;;;;;;;:32;;;;;;;;;;;;;;;;;;7288:92;7409:3;7390:6;:16;7397:8;7390:16;;;;;;;;;;;;:22;;;;;;;;;;;;;;;;;;7440:27;7448:8;:15;7457:5;7448:15;;;;;;;;;;;;;;;;7465:1;7440:7;:27::i;:::-;7422:8;:15;7431:5;7422:15;;;;;;;;;;;;;;;:45;;;;7493:25;7501:8;:13;7510:3;7501:13;;;;;;;;;;;;;;;;7516:1;7493:7;:25::i;:::-;7477:8;:13;7486:3;7477:13;;;;;;;;;;;;;;;:41;;;;7596:8;7579:3;7538:76;;7560:5;7538:76;;;;;;;;;;;;6647:974;;;;;;:::o;1285:103:87:-;1361:20;1367:3;1372:8;1361:5;:20::i;:::-;1285:103;;:::o;3349:682:93:-;3573:24;3725:15;3482:80;3508:5;3527:3;3544:8;3482:12;:80::i;:::-;3662:3;3650:16;3630:36;;3708:1;3689:16;:20;3685:340;;;3759:3;3743:37;;;3798:10;3826:5;3849:8;3743:148;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3743:148:93;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3743:148:93;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3743:148:93;;;;;;;;;;;;;;;;3725:166;;925:60;;;;;;;;;;;;;;;;;;;;;;;;3930:27;;;:8;:27;;;;3905:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3685:340;3349:682;;;;;:::o;7883:257::-;7963:7;7986:13;8002:6;:16;8009:8;8002:16;;;;;;;;;;;;;;;;;;;;;7986:32;;8066:1;8049:19;;:5;:19;;;;8028:83;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8128:5;8121:12;;7883:257;;;;:::o;5806:229::-;5888:7;5950:1;5932:20;;:6;:20;;;;5911:84;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6012:8;:16;6021:6;6012:16;;;;;;;;;;;;;;;;6005:23;;5806:229;;;:::o;92:20:107:-;;;;;;;;;;;;;:::o;861::87:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1649:127::-;260:5:107;;;;;;;;;;;246:19;;:10;:19;;;225:85;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1746:23:87;1752:6;1760:8;1746:5;:23::i;:::-;1649:127;;:::o;5207:261:93:-;5343:9;5300:17;:29;5318:10;5300:29;;;;;;;;;;;;;;;:40;5330:9;5300:40;;;;;;;;;;;;;;;;:52;;;;;;;;;;;;;;;;;;5419:9;5367:94;;5395:10;5367:94;;;5442:9;5367:94;;;;;;;;;;;;;;;;;;;;;;5207:261;;:::o;2280:706::-;2525:24;2677:15;2434:80;2460:5;2479:3;2496:8;2434:12;:80::i;:::-;2614:3;2602:16;2582:36;;2660:1;2641:16;:20;2637:343;;;2711:3;2695:37;;;2750:10;2778:5;2801:8;2827:5;;2695:151;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2695:151:93;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2695:151:93;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2695:151:93;;;;;;;;;;;;;;;;2677:169;;925:60;;;;;;;;;;;;;;;;;;;;;;;;2885:27;;;:8;:27;;;;2860:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2637:343;2280:706;;;;;;;:::o;8852:176::-;8958:4;8985:17;:25;9003:6;8985:25;;;;;;;;;;;;;;;:36;9011:9;8985:36;;;;;;;;;;;;;;;;;;;;;;;;;8978:43;;8852:176;;;;:::o;334:167:107:-;260:5;;;;;;;;;;;246:19;;:10;:19;;;225:85;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;450:1;430:22;;:8;:22;;;;426:69;;;476:8;468:5;;:16;;;;;;;;;;;;;;;;;;426:69;334:167;:::o;503:208:109:-;589:7;638:1;633;:6;;612:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;703:1;699;:5;692:12;;503:208;;;;:::o;717:230::-;803:7;826:9;842:1;838;:5;826:17;;879:1;874;:6;;853:69;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;939:1;932:8;;717:230;;;;;:::o;942:497:96:-;1116:13;1055:1;1040:17;;:3;:17;;;;1019:86;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1132:6;:16;1139:8;1132:16;;;;;;;;;;;;;;;;;;;;;1116:32;;1196:1;1179:19;;:5;:19;;;1158:93;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1281:3;1262:6;:16;1269:8;1262:16;;;;;;;;;;;;:22;;;;;;;;;;;;;;;;;;1310:25;1318:8;:13;1327:3;1318:13;;;;;;;;;;;;;;;;1333:1;1310:7;:25::i;:::-;1294:8;:13;1303:3;1294:13;;;;;;;;;;;;;;;:41;;;;1414:8;1397:3;1351:81;;1381:1;1351:81;;;;;;;;;;;;942:497;;;:::o;1668:512::-;1851:13;1787:1;1769:20;;:6;:20;;;;1748:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1867:6;:16;1874:8;1867:16;;;;;;;;;;;;;;;;;;;;;1851:32;;1923:6;1914:15;;:5;:15;;;1893:83;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2014:1;1987:6;:16;1994:8;1987:16;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;2045:28;2053:8;:16;2062:6;2053:16;;;;;;;;;;;;;;;;2071:1;2045:7;:28::i;:::-;2026:8;:16;2035:6;2026:16;;;;;;;;;;;;;;;:47;;;;2155:8;2139:1;2089:84;;2111:6;2089:84;;;;;;;;;;;;1668:512;;;:::o",
  "source": "/*\n\n  Copyright 2018 ZeroEx Intl.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n\n*/\n\npragma solidity 0.4.24;\n\nimport \"../../tokens/ERC721Token/MintableERC721Token.sol\";\nimport \"../../../../utils/contracts/utils/Ownable/Ownable.sol\";\n\n\n// solhint-disable no-empty-blocks\ncontract DummyERC721Token is\n    Ownable,\n    MintableERC721Token\n{\n    string public name;\n    string public symbol;\n\n    constructor (\n        string _name,\n        string _symbol\n    )\n        public\n    {\n        name = _name;\n        symbol = _symbol;\n    }\n\n    /// @dev Function to mint a new token\n    ///      Reverts if the given token ID already exists\n    /// @param _to Address of the beneficiary that will own the minted token\n    /// @param _tokenId ID of the token to be minted by the msg.sender    \n    function mint(address _to, uint256 _tokenId)\n        external\n    {\n        _mint(_to, _tokenId);\n    }\n\n    /// @dev Function to burn a token\n    ///      Reverts if the given token ID doesn't exist or not called by contract owner\n    /// @param _owner Owner of token with given token ID\n    /// @param _tokenId ID of the token to be burned by the msg.sender\n    function burn(address _owner, uint256 _tokenId)\n        external\n        onlyOwner\n    {\n        _burn(_owner, _tokenId);\n    }\n}\n",
  "sourcePath": "/Users/lawrenceballou/Desktop/BlockNerds/Clients/AltcoinIo/filter-contract/contracts/tokens/contracts/test/DummyERC721Token/DummyERC721Token.sol",
  "ast": {
    "absolutePath": "/Users/lawrenceballou/Desktop/BlockNerds/Clients/AltcoinIo/filter-contract/contracts/tokens/contracts/test/DummyERC721Token/DummyERC721Token.sol",
    "exportedSymbols": {
      "DummyERC721Token": [
        10499
      ]
    },
    "id": 10500,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 10444,
        "literals": [
          "solidity",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "580:23:87"
      },
      {
        "absolutePath": "/Users/lawrenceballou/Desktop/BlockNerds/Clients/AltcoinIo/filter-contract/contracts/tokens/contracts/tokens/ERC721Token/MintableERC721Token.sol",
        "file": "../../tokens/ERC721Token/MintableERC721Token.sol",
        "id": 10445,
        "nodeType": "ImportDirective",
        "scope": 10500,
        "sourceUnit": 11907,
        "src": "605:58:87",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/lawrenceballou/Desktop/BlockNerds/Clients/AltcoinIo/filter-contract/contracts/utils/contracts/utils/Ownable/Ownable.sol",
        "file": "../../../../utils/contracts/utils/Ownable/Ownable.sol",
        "id": 10446,
        "nodeType": "ImportDirective",
        "scope": 10500,
        "sourceUnit": 13524,
        "src": "664:63:87",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 10447,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 13523,
              "src": "798:7:87",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$13523",
                "typeString": "contract Ownable"
              }
            },
            "id": 10448,
            "nodeType": "InheritanceSpecifier",
            "src": "798:7:87"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 10449,
              "name": "MintableERC721Token",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 11906,
              "src": "811:19:87",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MintableERC721Token_$11906",
                "typeString": "contract MintableERC721Token"
              }
            },
            "id": 10450,
            "nodeType": "InheritanceSpecifier",
            "src": "811:19:87"
          }
        ],
        "contractDependencies": [
          11670,
          11786,
          11906,
          13475,
          13523,
          13716
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 10499,
        "linearizedBaseContracts": [
          10499,
          11906,
          11670,
          13716,
          11786,
          13523,
          13475
        ],
        "name": "DummyERC721Token",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 10452,
            "name": "name",
            "nodeType": "VariableDeclaration",
            "scope": 10499,
            "src": "837:18:87",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 10451,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "837:6:87",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 10454,
            "name": "symbol",
            "nodeType": "VariableDeclaration",
            "scope": 10499,
            "src": "861:20:87",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 10453,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "861:6:87",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 10469,
              "nodeType": "Block",
              "src": "972:55:87",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 10463,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 10461,
                      "name": "name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10452,
                      "src": "982:4:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 10462,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10456,
                      "src": "989:5:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "982:12:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 10464,
                  "nodeType": "ExpressionStatement",
                  "src": "982:12:87"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 10467,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 10465,
                      "name": "symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10454,
                      "src": "1004:6:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 10466,
                      "name": "_symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10458,
                      "src": "1013:7:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1004:16:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 10468,
                  "nodeType": "ExpressionStatement",
                  "src": "1004:16:87"
                }
              ]
            },
            "documentation": null,
            "id": 10470,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10459,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10456,
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "scope": 10470,
                  "src": "910:12:87",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 10455,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "910:6:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10458,
                  "name": "_symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 10470,
                  "src": "932:14:87",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 10457,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "932:6:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "900:52:87"
            },
            "payable": false,
            "returnParameters": {
              "id": 10460,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "972:0:87"
            },
            "scope": 10499,
            "src": "888:139:87",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 10482,
              "nodeType": "Block",
              "src": "1351:37:87",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 10478,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10472,
                        "src": "1367:3:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 10479,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10474,
                        "src": "1372:8:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 10477,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11848,
                      "src": "1361:5:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 10480,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1361:20:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10481,
                  "nodeType": "ExpressionStatement",
                  "src": "1361:20:87"
                }
              ]
            },
            "documentation": "@dev Function to mint a new token\n      Reverts if the given token ID already exists\n @param _to Address of the beneficiary that will own the minted token\n @param _tokenId ID of the token to be minted by the msg.sender    ",
            "id": 10483,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10475,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10472,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 10483,
                  "src": "1299:11:87",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10471,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1299:7:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10474,
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 10483,
                  "src": "1312:16:87",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10473,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1312:7:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1298:31:87"
            },
            "payable": false,
            "returnParameters": {
              "id": 10476,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1351:0:87"
            },
            "scope": 10499,
            "src": "1285:103:87",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 10497,
              "nodeType": "Block",
              "src": "1736:40:87",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 10493,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10485,
                        "src": "1752:6:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 10494,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10487,
                        "src": "1760:8:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 10492,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11905,
                      "src": "1746:5:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 10495,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1746:23:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10496,
                  "nodeType": "ExpressionStatement",
                  "src": "1746:23:87"
                }
              ]
            },
            "documentation": "@dev Function to burn a token\n      Reverts if the given token ID doesn't exist or not called by contract owner\n @param _owner Owner of token with given token ID\n @param _tokenId ID of the token to be burned by the msg.sender",
            "id": 10498,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 10490,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 10489,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 13503,
                  "src": "1722:9:87",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1722:9:87"
              }
            ],
            "name": "burn",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10488,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10485,
                  "name": "_owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 10498,
                  "src": "1663:14:87",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10484,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1663:7:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10487,
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 10498,
                  "src": "1679:16:87",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10486,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1679:7:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1662:34:87"
            },
            "payable": false,
            "returnParameters": {
              "id": 10491,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1736:0:87"
            },
            "scope": 10499,
            "src": "1649:127:87",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 10500,
        "src": "765:1013:87"
      }
    ],
    "src": "580:1199:87"
  },
  "legacyAST": {
    "absolutePath": "/Users/lawrenceballou/Desktop/BlockNerds/Clients/AltcoinIo/filter-contract/contracts/tokens/contracts/test/DummyERC721Token/DummyERC721Token.sol",
    "exportedSymbols": {
      "DummyERC721Token": [
        10499
      ]
    },
    "id": 10500,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 10444,
        "literals": [
          "solidity",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "580:23:87"
      },
      {
        "absolutePath": "/Users/lawrenceballou/Desktop/BlockNerds/Clients/AltcoinIo/filter-contract/contracts/tokens/contracts/tokens/ERC721Token/MintableERC721Token.sol",
        "file": "../../tokens/ERC721Token/MintableERC721Token.sol",
        "id": 10445,
        "nodeType": "ImportDirective",
        "scope": 10500,
        "sourceUnit": 11907,
        "src": "605:58:87",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/lawrenceballou/Desktop/BlockNerds/Clients/AltcoinIo/filter-contract/contracts/utils/contracts/utils/Ownable/Ownable.sol",
        "file": "../../../../utils/contracts/utils/Ownable/Ownable.sol",
        "id": 10446,
        "nodeType": "ImportDirective",
        "scope": 10500,
        "sourceUnit": 13524,
        "src": "664:63:87",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 10447,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 13523,
              "src": "798:7:87",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$13523",
                "typeString": "contract Ownable"
              }
            },
            "id": 10448,
            "nodeType": "InheritanceSpecifier",
            "src": "798:7:87"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 10449,
              "name": "MintableERC721Token",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 11906,
              "src": "811:19:87",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MintableERC721Token_$11906",
                "typeString": "contract MintableERC721Token"
              }
            },
            "id": 10450,
            "nodeType": "InheritanceSpecifier",
            "src": "811:19:87"
          }
        ],
        "contractDependencies": [
          11670,
          11786,
          11906,
          13475,
          13523,
          13716
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 10499,
        "linearizedBaseContracts": [
          10499,
          11906,
          11670,
          13716,
          11786,
          13523,
          13475
        ],
        "name": "DummyERC721Token",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 10452,
            "name": "name",
            "nodeType": "VariableDeclaration",
            "scope": 10499,
            "src": "837:18:87",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 10451,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "837:6:87",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 10454,
            "name": "symbol",
            "nodeType": "VariableDeclaration",
            "scope": 10499,
            "src": "861:20:87",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 10453,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "861:6:87",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 10469,
              "nodeType": "Block",
              "src": "972:55:87",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 10463,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 10461,
                      "name": "name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10452,
                      "src": "982:4:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 10462,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10456,
                      "src": "989:5:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "982:12:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 10464,
                  "nodeType": "ExpressionStatement",
                  "src": "982:12:87"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 10467,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 10465,
                      "name": "symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10454,
                      "src": "1004:6:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 10466,
                      "name": "_symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10458,
                      "src": "1013:7:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1004:16:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 10468,
                  "nodeType": "ExpressionStatement",
                  "src": "1004:16:87"
                }
              ]
            },
            "documentation": null,
            "id": 10470,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10459,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10456,
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "scope": 10470,
                  "src": "910:12:87",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 10455,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "910:6:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10458,
                  "name": "_symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 10470,
                  "src": "932:14:87",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 10457,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "932:6:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "900:52:87"
            },
            "payable": false,
            "returnParameters": {
              "id": 10460,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "972:0:87"
            },
            "scope": 10499,
            "src": "888:139:87",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 10482,
              "nodeType": "Block",
              "src": "1351:37:87",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 10478,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10472,
                        "src": "1367:3:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 10479,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10474,
                        "src": "1372:8:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 10477,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11848,
                      "src": "1361:5:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 10480,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1361:20:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10481,
                  "nodeType": "ExpressionStatement",
                  "src": "1361:20:87"
                }
              ]
            },
            "documentation": "@dev Function to mint a new token\n      Reverts if the given token ID already exists\n @param _to Address of the beneficiary that will own the minted token\n @param _tokenId ID of the token to be minted by the msg.sender    ",
            "id": 10483,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10475,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10472,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 10483,
                  "src": "1299:11:87",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10471,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1299:7:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10474,
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 10483,
                  "src": "1312:16:87",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10473,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1312:7:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1298:31:87"
            },
            "payable": false,
            "returnParameters": {
              "id": 10476,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1351:0:87"
            },
            "scope": 10499,
            "src": "1285:103:87",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 10497,
              "nodeType": "Block",
              "src": "1736:40:87",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 10493,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10485,
                        "src": "1752:6:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 10494,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10487,
                        "src": "1760:8:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 10492,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11905,
                      "src": "1746:5:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 10495,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1746:23:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10496,
                  "nodeType": "ExpressionStatement",
                  "src": "1746:23:87"
                }
              ]
            },
            "documentation": "@dev Function to burn a token\n      Reverts if the given token ID doesn't exist or not called by contract owner\n @param _owner Owner of token with given token ID\n @param _tokenId ID of the token to be burned by the msg.sender",
            "id": 10498,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 10490,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 10489,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 13503,
                  "src": "1722:9:87",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1722:9:87"
              }
            ],
            "name": "burn",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10488,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10485,
                  "name": "_owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 10498,
                  "src": "1663:14:87",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10484,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1663:7:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10487,
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 10498,
                  "src": "1679:16:87",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10486,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1679:7:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1662:34:87"
            },
            "payable": false,
            "returnParameters": {
              "id": 10491,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1736:0:87"
            },
            "scope": 10499,
            "src": "1649:127:87",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 10500,
        "src": "765:1013:87"
      }
    ],
    "src": "580:1199:87"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.24+commit.e67f0147.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.0",
  "updatedAt": "2018-12-28T17:39:10.988Z",
  "devdoc": {
    "methods": {
      "approve(address,uint256)": {
        "details": "The zero address indicates there is no approved address.      Throws unless `msg.sender` is the current NFT owner, or an authorized      operator of the current owner.",
        "params": {
          "_approved": "The new approved NFT controller",
          "_tokenId": "The NFT to approve"
        }
      },
      "balanceOf(address)": {
        "details": "NFTs assigned to the zero address are considered invalid, and this      function throws for queries about the zero address.",
        "params": {
          "_owner": "An address for whom to query the balance"
        },
        "return": "The number of NFTs owned by `_owner`, possibly zero"
      },
      "burn(address,uint256)": {
        "details": "Function to burn a token      Reverts if the given token ID doesn't exist or not called by contract owner",
        "params": {
          "_owner": "Owner of token with given token ID",
          "_tokenId": "ID of the token to be burned by the msg.sender"
        }
      },
      "getApproved(uint256)": {
        "details": "Throws if `_tokenId` is not a valid NFT.",
        "params": {
          "_tokenId": "The NFT to find the approved address for"
        },
        "return": "The approved address for this NFT, or the zero address if there is none"
      },
      "isApprovedForAll(address,address)": {
        "params": {
          "_operator": "The address that acts on behalf of the owner",
          "_owner": "The address that owns the NFTs"
        },
        "return": "True if `_operator` is an approved operator for `_owner`, false otherwise"
      },
      "mint(address,uint256)": {
        "details": "Function to mint a new token      Reverts if the given token ID already exists",
        "params": {
          "_to": "Address of the beneficiary that will own the minted token",
          "_tokenId": "ID of the token to be minted by the msg.sender    "
        }
      },
      "ownerOf(uint256)": {
        "details": "NFTs assigned to zero address are considered invalid, and queries      about them do throw.",
        "params": {
          "_tokenId": "The identifier for an NFT"
        },
        "return": "The address of the owner of the NFT"
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "This works identically to the other function with an extra data parameter,      except this function just sets data to \"\".",
        "params": {
          "_from": "The current owner of the NFT",
          "_to": "The new owner",
          "_tokenId": "The NFT to transfer"
        }
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "Throws unless `msg.sender` is the current owner, an authorized      operator, or the approved address for this NFT. Throws if `_from` is      not the current owner. Throws if `_to` is the zero address. Throws if      `_tokenId` is not a valid NFT. When transfer is complete, this function      checks if `_to` is a smart contract (code size > 0). If so, it calls      `onERC721Received` on `_to` and throws if the return value is not      `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`.",
        "params": {
          "_data": "Additional data with no specified format, sent in call to `_to`",
          "_from": "The current owner of the NFT",
          "_to": "The new owner",
          "_tokenId": "The NFT to transfer"
        }
      },
      "setApprovalForAll(address,bool)": {
        "details": "Emits the ApprovalForAll event. The contract MUST allow      multiple operators per owner.",
        "params": {
          "_approved": "True if the operator is approved, false to revoke approval",
          "_operator": "Address to add to the set of authorized operators"
        }
      },
      "transferFrom(address,address,uint256)": {
        "details": "Throws unless `msg.sender` is the current owner, an authorized      operator, or the approved address for this NFT. Throws if `_from` is      not the current owner. Throws if `_to` is the zero address. Throws if      `_tokenId` is not a valid NFT.",
        "params": {
          "_from": "The current owner of the NFT",
          "_to": "The new owner",
          "_tokenId": "The NFT to transfer"
        }
      }
    }
  },
  "userdoc": {
    "methods": {
      "approve(address,uint256)": {
        "notice": "Change or reaffirm the approved address for an NFT"
      },
      "balanceOf(address)": {
        "notice": "Count all NFTs assigned to an owner"
      },
      "getApproved(uint256)": {
        "notice": "Get the approved address for a single NFT"
      },
      "isApprovedForAll(address,address)": {
        "notice": "Query if an address is an authorized operator for another address"
      },
      "ownerOf(uint256)": {
        "notice": "Find the owner of an NFT"
      },
      "safeTransferFrom(address,address,uint256)": {
        "notice": "Transfers the ownership of an NFT from one address to another address"
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "notice": "Transfers the ownership of an NFT from one address to another address"
      },
      "setApprovalForAll(address,bool)": {
        "notice": "Enable or disable approval for a third party (\"operator\") to manage         all of `msg.sender`'s assets"
      },
      "transferFrom(address,address,uint256)": {
        "notice": "Transfer ownership of an NFT -- THE CALLER IS RESPONSIBLE         TO CONFIRM THAT `_to` IS CAPABLE OF RECEIVING NFTS OR ELSE         THEY MAY BE PERMANENTLY LOST"
      }
    }
  }
}