{
  "contractName": "TestExchangeInternals",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "filled",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "components": [
            {
              "name": "makerAddress",
              "type": "address"
            },
            {
              "name": "takerAddress",
              "type": "address"
            },
            {
              "name": "feeRecipientAddress",
              "type": "address"
            },
            {
              "name": "senderAddress",
              "type": "address"
            },
            {
              "name": "makerAssetAmount",
              "type": "uint256"
            },
            {
              "name": "takerAssetAmount",
              "type": "uint256"
            },
            {
              "name": "makerFee",
              "type": "uint256"
            },
            {
              "name": "takerFee",
              "type": "uint256"
            },
            {
              "name": "expirationTimeSeconds",
              "type": "uint256"
            },
            {
              "name": "salt",
              "type": "uint256"
            },
            {
              "name": "makerAssetData",
              "type": "bytes"
            },
            {
              "name": "takerAssetData",
              "type": "bytes"
            }
          ],
          "name": "orders",
          "type": "tuple[]"
        },
        {
          "name": "takerAssetFillAmounts",
          "type": "uint256[]"
        },
        {
          "name": "signatures",
          "type": "bytes[]"
        }
      ],
      "name": "batchFillOrders",
      "outputs": [
        {
          "components": [
            {
              "name": "makerAssetFilledAmount",
              "type": "uint256"
            },
            {
              "name": "takerAssetFilledAmount",
              "type": "uint256"
            },
            {
              "name": "makerFeePaid",
              "type": "uint256"
            },
            {
              "name": "takerFeePaid",
              "type": "uint256"
            }
          ],
          "name": "totalFillResults",
          "type": "tuple"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "cancelled",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "hash",
          "type": "bytes32"
        },
        {
          "name": "signerAddress",
          "type": "address"
        },
        {
          "name": "signature",
          "type": "bytes"
        }
      ],
      "name": "preSign",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "components": [
            {
              "name": "makerAddress",
              "type": "address"
            },
            {
              "name": "takerAddress",
              "type": "address"
            },
            {
              "name": "feeRecipientAddress",
              "type": "address"
            },
            {
              "name": "senderAddress",
              "type": "address"
            },
            {
              "name": "makerAssetAmount",
              "type": "uint256"
            },
            {
              "name": "takerAssetAmount",
              "type": "uint256"
            },
            {
              "name": "makerFee",
              "type": "uint256"
            },
            {
              "name": "takerFee",
              "type": "uint256"
            },
            {
              "name": "expirationTimeSeconds",
              "type": "uint256"
            },
            {
              "name": "salt",
              "type": "uint256"
            },
            {
              "name": "makerAssetData",
              "type": "bytes"
            },
            {
              "name": "takerAssetData",
              "type": "bytes"
            }
          ],
          "name": "leftOrder",
          "type": "tuple"
        },
        {
          "components": [
            {
              "name": "makerAddress",
              "type": "address"
            },
            {
              "name": "takerAddress",
              "type": "address"
            },
            {
              "name": "feeRecipientAddress",
              "type": "address"
            },
            {
              "name": "senderAddress",
              "type": "address"
            },
            {
              "name": "makerAssetAmount",
              "type": "uint256"
            },
            {
              "name": "takerAssetAmount",
              "type": "uint256"
            },
            {
              "name": "makerFee",
              "type": "uint256"
            },
            {
              "name": "takerFee",
              "type": "uint256"
            },
            {
              "name": "expirationTimeSeconds",
              "type": "uint256"
            },
            {
              "name": "salt",
              "type": "uint256"
            },
            {
              "name": "makerAssetData",
              "type": "bytes"
            },
            {
              "name": "takerAssetData",
              "type": "bytes"
            }
          ],
          "name": "rightOrder",
          "type": "tuple"
        },
        {
          "name": "leftSignature",
          "type": "bytes"
        },
        {
          "name": "rightSignature",
          "type": "bytes"
        }
      ],
      "name": "matchOrders",
      "outputs": [
        {
          "components": [
            {
              "components": [
                {
                  "name": "makerAssetFilledAmount",
                  "type": "uint256"
                },
                {
                  "name": "takerAssetFilledAmount",
                  "type": "uint256"
                },
                {
                  "name": "makerFeePaid",
                  "type": "uint256"
                },
                {
                  "name": "takerFeePaid",
                  "type": "uint256"
                }
              ],
              "name": "left",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "name": "makerAssetFilledAmount",
                  "type": "uint256"
                },
                {
                  "name": "takerAssetFilledAmount",
                  "type": "uint256"
                },
                {
                  "name": "makerFeePaid",
                  "type": "uint256"
                },
                {
                  "name": "takerFeePaid",
                  "type": "uint256"
                }
              ],
              "name": "right",
              "type": "tuple"
            },
            {
              "name": "leftMakerAssetSpreadAmount",
              "type": "uint256"
            }
          ],
          "name": "matchedFillResults",
          "type": "tuple"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "components": [
            {
              "name": "makerAddress",
              "type": "address"
            },
            {
              "name": "takerAddress",
              "type": "address"
            },
            {
              "name": "feeRecipientAddress",
              "type": "address"
            },
            {
              "name": "senderAddress",
              "type": "address"
            },
            {
              "name": "makerAssetAmount",
              "type": "uint256"
            },
            {
              "name": "takerAssetAmount",
              "type": "uint256"
            },
            {
              "name": "makerFee",
              "type": "uint256"
            },
            {
              "name": "takerFee",
              "type": "uint256"
            },
            {
              "name": "expirationTimeSeconds",
              "type": "uint256"
            },
            {
              "name": "salt",
              "type": "uint256"
            },
            {
              "name": "makerAssetData",
              "type": "bytes"
            },
            {
              "name": "takerAssetData",
              "type": "bytes"
            }
          ],
          "name": "order",
          "type": "tuple"
        },
        {
          "name": "takerAssetFillAmount",
          "type": "uint256"
        },
        {
          "name": "signature",
          "type": "bytes"
        }
      ],
      "name": "fillOrderNoThrow",
      "outputs": [
        {
          "components": [
            {
              "name": "makerAssetFilledAmount",
              "type": "uint256"
            },
            {
              "name": "takerAssetFilledAmount",
              "type": "uint256"
            },
            {
              "name": "makerFeePaid",
              "type": "uint256"
            },
            {
              "name": "takerFeePaid",
              "type": "uint256"
            }
          ],
          "name": "fillResults",
          "type": "tuple"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "bytes4"
        }
      ],
      "name": "assetProxies",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "components": [
            {
              "name": "makerAddress",
              "type": "address"
            },
            {
              "name": "takerAddress",
              "type": "address"
            },
            {
              "name": "feeRecipientAddress",
              "type": "address"
            },
            {
              "name": "senderAddress",
              "type": "address"
            },
            {
              "name": "makerAssetAmount",
              "type": "uint256"
            },
            {
              "name": "takerAssetAmount",
              "type": "uint256"
            },
            {
              "name": "makerFee",
              "type": "uint256"
            },
            {
              "name": "takerFee",
              "type": "uint256"
            },
            {
              "name": "expirationTimeSeconds",
              "type": "uint256"
            },
            {
              "name": "salt",
              "type": "uint256"
            },
            {
              "name": "makerAssetData",
              "type": "bytes"
            },
            {
              "name": "takerAssetData",
              "type": "bytes"
            }
          ],
          "name": "orders",
          "type": "tuple[]"
        }
      ],
      "name": "batchCancelOrders",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "components": [
            {
              "name": "makerAddress",
              "type": "address"
            },
            {
              "name": "takerAddress",
              "type": "address"
            },
            {
              "name": "feeRecipientAddress",
              "type": "address"
            },
            {
              "name": "senderAddress",
              "type": "address"
            },
            {
              "name": "makerAssetAmount",
              "type": "uint256"
            },
            {
              "name": "takerAssetAmount",
              "type": "uint256"
            },
            {
              "name": "makerFee",
              "type": "uint256"
            },
            {
              "name": "takerFee",
              "type": "uint256"
            },
            {
              "name": "expirationTimeSeconds",
              "type": "uint256"
            },
            {
              "name": "salt",
              "type": "uint256"
            },
            {
              "name": "makerAssetData",
              "type": "bytes"
            },
            {
              "name": "takerAssetData",
              "type": "bytes"
            }
          ],
          "name": "orders",
          "type": "tuple[]"
        },
        {
          "name": "takerAssetFillAmounts",
          "type": "uint256[]"
        },
        {
          "name": "signatures",
          "type": "bytes[]"
        }
      ],
      "name": "batchFillOrKillOrders",
      "outputs": [
        {
          "components": [
            {
              "name": "makerAssetFilledAmount",
              "type": "uint256"
            },
            {
              "name": "takerAssetFilledAmount",
              "type": "uint256"
            },
            {
              "name": "makerFeePaid",
              "type": "uint256"
            },
            {
              "name": "takerFeePaid",
              "type": "uint256"
            }
          ],
          "name": "totalFillResults",
          "type": "tuple"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "targetOrderEpoch",
          "type": "uint256"
        }
      ],
      "name": "cancelOrdersUpTo",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "components": [
            {
              "name": "makerAddress",
              "type": "address"
            },
            {
              "name": "takerAddress",
              "type": "address"
            },
            {
              "name": "feeRecipientAddress",
              "type": "address"
            },
            {
              "name": "senderAddress",
              "type": "address"
            },
            {
              "name": "makerAssetAmount",
              "type": "uint256"
            },
            {
              "name": "takerAssetAmount",
              "type": "uint256"
            },
            {
              "name": "makerFee",
              "type": "uint256"
            },
            {
              "name": "takerFee",
              "type": "uint256"
            },
            {
              "name": "expirationTimeSeconds",
              "type": "uint256"
            },
            {
              "name": "salt",
              "type": "uint256"
            },
            {
              "name": "makerAssetData",
              "type": "bytes"
            },
            {
              "name": "takerAssetData",
              "type": "bytes"
            }
          ],
          "name": "orders",
          "type": "tuple[]"
        },
        {
          "name": "takerAssetFillAmounts",
          "type": "uint256[]"
        },
        {
          "name": "signatures",
          "type": "bytes[]"
        }
      ],
      "name": "batchFillOrdersNoThrow",
      "outputs": [
        {
          "components": [
            {
              "name": "makerAssetFilledAmount",
              "type": "uint256"
            },
            {
              "name": "takerAssetFilledAmount",
              "type": "uint256"
            },
            {
              "name": "makerFeePaid",
              "type": "uint256"
            },
            {
              "name": "takerFeePaid",
              "type": "uint256"
            }
          ],
          "name": "totalFillResults",
          "type": "tuple"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "assetProxyId",
          "type": "bytes4"
        }
      ],
      "name": "getAssetProxy",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "transactions",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "components": [
            {
              "name": "makerAddress",
              "type": "address"
            },
            {
              "name": "takerAddress",
              "type": "address"
            },
            {
              "name": "feeRecipientAddress",
              "type": "address"
            },
            {
              "name": "senderAddress",
              "type": "address"
            },
            {
              "name": "makerAssetAmount",
              "type": "uint256"
            },
            {
              "name": "takerAssetAmount",
              "type": "uint256"
            },
            {
              "name": "makerFee",
              "type": "uint256"
            },
            {
              "name": "takerFee",
              "type": "uint256"
            },
            {
              "name": "expirationTimeSeconds",
              "type": "uint256"
            },
            {
              "name": "salt",
              "type": "uint256"
            },
            {
              "name": "makerAssetData",
              "type": "bytes"
            },
            {
              "name": "takerAssetData",
              "type": "bytes"
            }
          ],
          "name": "order",
          "type": "tuple"
        },
        {
          "name": "takerAssetFillAmount",
          "type": "uint256"
        },
        {
          "name": "signature",
          "type": "bytes"
        }
      ],
      "name": "fillOrKillOrder",
      "outputs": [
        {
          "components": [
            {
              "name": "makerAssetFilledAmount",
              "type": "uint256"
            },
            {
              "name": "takerAssetFilledAmount",
              "type": "uint256"
            },
            {
              "name": "makerFeePaid",
              "type": "uint256"
            },
            {
              "name": "takerFeePaid",
              "type": "uint256"
            }
          ],
          "name": "fillResults",
          "type": "tuple"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "validatorAddress",
          "type": "address"
        },
        {
          "name": "approval",
          "type": "bool"
        }
      ],
      "name": "setSignatureValidatorApproval",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        },
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "allowedValidators",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "components": [
            {
              "name": "makerAddress",
              "type": "address"
            },
            {
              "name": "takerAddress",
              "type": "address"
            },
            {
              "name": "feeRecipientAddress",
              "type": "address"
            },
            {
              "name": "senderAddress",
              "type": "address"
            },
            {
              "name": "makerAssetAmount",
              "type": "uint256"
            },
            {
              "name": "takerAssetAmount",
              "type": "uint256"
            },
            {
              "name": "makerFee",
              "type": "uint256"
            },
            {
              "name": "takerFee",
              "type": "uint256"
            },
            {
              "name": "expirationTimeSeconds",
              "type": "uint256"
            },
            {
              "name": "salt",
              "type": "uint256"
            },
            {
              "name": "makerAssetData",
              "type": "bytes"
            },
            {
              "name": "takerAssetData",
              "type": "bytes"
            }
          ],
          "name": "orders",
          "type": "tuple[]"
        },
        {
          "name": "takerAssetFillAmount",
          "type": "uint256"
        },
        {
          "name": "signatures",
          "type": "bytes[]"
        }
      ],
      "name": "marketSellOrders",
      "outputs": [
        {
          "components": [
            {
              "name": "makerAssetFilledAmount",
              "type": "uint256"
            },
            {
              "name": "takerAssetFilledAmount",
              "type": "uint256"
            },
            {
              "name": "makerFeePaid",
              "type": "uint256"
            },
            {
              "name": "takerFeePaid",
              "type": "uint256"
            }
          ],
          "name": "totalFillResults",
          "type": "tuple"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "components": [
            {
              "name": "makerAddress",
              "type": "address"
            },
            {
              "name": "takerAddress",
              "type": "address"
            },
            {
              "name": "feeRecipientAddress",
              "type": "address"
            },
            {
              "name": "senderAddress",
              "type": "address"
            },
            {
              "name": "makerAssetAmount",
              "type": "uint256"
            },
            {
              "name": "takerAssetAmount",
              "type": "uint256"
            },
            {
              "name": "makerFee",
              "type": "uint256"
            },
            {
              "name": "takerFee",
              "type": "uint256"
            },
            {
              "name": "expirationTimeSeconds",
              "type": "uint256"
            },
            {
              "name": "salt",
              "type": "uint256"
            },
            {
              "name": "makerAssetData",
              "type": "bytes"
            },
            {
              "name": "takerAssetData",
              "type": "bytes"
            }
          ],
          "name": "orders",
          "type": "tuple[]"
        }
      ],
      "name": "getOrdersInfo",
      "outputs": [
        {
          "components": [
            {
              "name": "orderStatus",
              "type": "uint8"
            },
            {
              "name": "orderHash",
              "type": "bytes32"
            },
            {
              "name": "orderTakerAssetFilledAmount",
              "type": "uint256"
            }
          ],
          "name": "",
          "type": "tuple[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "bytes32"
        },
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "preSigned",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "hash",
          "type": "bytes32"
        },
        {
          "name": "signerAddress",
          "type": "address"
        },
        {
          "name": "signature",
          "type": "bytes"
        }
      ],
      "name": "isValidSignature",
      "outputs": [
        {
          "name": "isValid",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "components": [
            {
              "name": "makerAddress",
              "type": "address"
            },
            {
              "name": "takerAddress",
              "type": "address"
            },
            {
              "name": "feeRecipientAddress",
              "type": "address"
            },
            {
              "name": "senderAddress",
              "type": "address"
            },
            {
              "name": "makerAssetAmount",
              "type": "uint256"
            },
            {
              "name": "takerAssetAmount",
              "type": "uint256"
            },
            {
              "name": "makerFee",
              "type": "uint256"
            },
            {
              "name": "takerFee",
              "type": "uint256"
            },
            {
              "name": "expirationTimeSeconds",
              "type": "uint256"
            },
            {
              "name": "salt",
              "type": "uint256"
            },
            {
              "name": "makerAssetData",
              "type": "bytes"
            },
            {
              "name": "takerAssetData",
              "type": "bytes"
            }
          ],
          "name": "orders",
          "type": "tuple[]"
        },
        {
          "name": "makerAssetFillAmount",
          "type": "uint256"
        },
        {
          "name": "signatures",
          "type": "bytes[]"
        }
      ],
      "name": "marketBuyOrdersNoThrow",
      "outputs": [
        {
          "components": [
            {
              "name": "makerAssetFilledAmount",
              "type": "uint256"
            },
            {
              "name": "takerAssetFilledAmount",
              "type": "uint256"
            },
            {
              "name": "makerFeePaid",
              "type": "uint256"
            },
            {
              "name": "takerFeePaid",
              "type": "uint256"
            }
          ],
          "name": "totalFillResults",
          "type": "tuple"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "components": [
            {
              "name": "makerAddress",
              "type": "address"
            },
            {
              "name": "takerAddress",
              "type": "address"
            },
            {
              "name": "feeRecipientAddress",
              "type": "address"
            },
            {
              "name": "senderAddress",
              "type": "address"
            },
            {
              "name": "makerAssetAmount",
              "type": "uint256"
            },
            {
              "name": "takerAssetAmount",
              "type": "uint256"
            },
            {
              "name": "makerFee",
              "type": "uint256"
            },
            {
              "name": "takerFee",
              "type": "uint256"
            },
            {
              "name": "expirationTimeSeconds",
              "type": "uint256"
            },
            {
              "name": "salt",
              "type": "uint256"
            },
            {
              "name": "makerAssetData",
              "type": "bytes"
            },
            {
              "name": "takerAssetData",
              "type": "bytes"
            }
          ],
          "name": "order",
          "type": "tuple"
        },
        {
          "name": "takerAssetFillAmount",
          "type": "uint256"
        },
        {
          "name": "signature",
          "type": "bytes"
        }
      ],
      "name": "fillOrder",
      "outputs": [
        {
          "components": [
            {
              "name": "makerAssetFilledAmount",
              "type": "uint256"
            },
            {
              "name": "takerAssetFilledAmount",
              "type": "uint256"
            },
            {
              "name": "makerFeePaid",
              "type": "uint256"
            },
            {
              "name": "takerFeePaid",
              "type": "uint256"
            }
          ],
          "name": "fillResults",
          "type": "tuple"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "salt",
          "type": "uint256"
        },
        {
          "name": "signerAddress",
          "type": "address"
        },
        {
          "name": "data",
          "type": "bytes"
        },
        {
          "name": "signature",
          "type": "bytes"
        }
      ],
      "name": "executeTransaction",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "assetProxy",
          "type": "address"
        }
      ],
      "name": "registerAssetProxy",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "components": [
            {
              "name": "makerAddress",
              "type": "address"
            },
            {
              "name": "takerAddress",
              "type": "address"
            },
            {
              "name": "feeRecipientAddress",
              "type": "address"
            },
            {
              "name": "senderAddress",
              "type": "address"
            },
            {
              "name": "makerAssetAmount",
              "type": "uint256"
            },
            {
              "name": "takerAssetAmount",
              "type": "uint256"
            },
            {
              "name": "makerFee",
              "type": "uint256"
            },
            {
              "name": "takerFee",
              "type": "uint256"
            },
            {
              "name": "expirationTimeSeconds",
              "type": "uint256"
            },
            {
              "name": "salt",
              "type": "uint256"
            },
            {
              "name": "makerAssetData",
              "type": "bytes"
            },
            {
              "name": "takerAssetData",
              "type": "bytes"
            }
          ],
          "name": "order",
          "type": "tuple"
        }
      ],
      "name": "getOrderInfo",
      "outputs": [
        {
          "components": [
            {
              "name": "orderStatus",
              "type": "uint8"
            },
            {
              "name": "orderHash",
              "type": "bytes32"
            },
            {
              "name": "orderTakerAssetFilledAmount",
              "type": "uint256"
            }
          ],
          "name": "orderInfo",
          "type": "tuple"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "components": [
            {
              "name": "makerAddress",
              "type": "address"
            },
            {
              "name": "takerAddress",
              "type": "address"
            },
            {
              "name": "feeRecipientAddress",
              "type": "address"
            },
            {
              "name": "senderAddress",
              "type": "address"
            },
            {
              "name": "makerAssetAmount",
              "type": "uint256"
            },
            {
              "name": "takerAssetAmount",
              "type": "uint256"
            },
            {
              "name": "makerFee",
              "type": "uint256"
            },
            {
              "name": "takerFee",
              "type": "uint256"
            },
            {
              "name": "expirationTimeSeconds",
              "type": "uint256"
            },
            {
              "name": "salt",
              "type": "uint256"
            },
            {
              "name": "makerAssetData",
              "type": "bytes"
            },
            {
              "name": "takerAssetData",
              "type": "bytes"
            }
          ],
          "name": "order",
          "type": "tuple"
        }
      ],
      "name": "cancelOrder",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        },
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "orderEpoch",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "ZRX_ASSET_DATA",
      "outputs": [
        {
          "name": "",
          "type": "bytes"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "components": [
            {
              "name": "makerAddress",
              "type": "address"
            },
            {
              "name": "takerAddress",
              "type": "address"
            },
            {
              "name": "feeRecipientAddress",
              "type": "address"
            },
            {
              "name": "senderAddress",
              "type": "address"
            },
            {
              "name": "makerAssetAmount",
              "type": "uint256"
            },
            {
              "name": "takerAssetAmount",
              "type": "uint256"
            },
            {
              "name": "makerFee",
              "type": "uint256"
            },
            {
              "name": "takerFee",
              "type": "uint256"
            },
            {
              "name": "expirationTimeSeconds",
              "type": "uint256"
            },
            {
              "name": "salt",
              "type": "uint256"
            },
            {
              "name": "makerAssetData",
              "type": "bytes"
            },
            {
              "name": "takerAssetData",
              "type": "bytes"
            }
          ],
          "name": "orders",
          "type": "tuple[]"
        },
        {
          "name": "takerAssetFillAmount",
          "type": "uint256"
        },
        {
          "name": "signatures",
          "type": "bytes[]"
        }
      ],
      "name": "marketSellOrdersNoThrow",
      "outputs": [
        {
          "components": [
            {
              "name": "makerAssetFilledAmount",
              "type": "uint256"
            },
            {
              "name": "takerAssetFilledAmount",
              "type": "uint256"
            },
            {
              "name": "makerFeePaid",
              "type": "uint256"
            },
            {
              "name": "takerFeePaid",
              "type": "uint256"
            }
          ],
          "name": "totalFillResults",
          "type": "tuple"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "EIP712_DOMAIN_HASH",
      "outputs": [
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "components": [
            {
              "name": "makerAddress",
              "type": "address"
            },
            {
              "name": "takerAddress",
              "type": "address"
            },
            {
              "name": "feeRecipientAddress",
              "type": "address"
            },
            {
              "name": "senderAddress",
              "type": "address"
            },
            {
              "name": "makerAssetAmount",
              "type": "uint256"
            },
            {
              "name": "takerAssetAmount",
              "type": "uint256"
            },
            {
              "name": "makerFee",
              "type": "uint256"
            },
            {
              "name": "takerFee",
              "type": "uint256"
            },
            {
              "name": "expirationTimeSeconds",
              "type": "uint256"
            },
            {
              "name": "salt",
              "type": "uint256"
            },
            {
              "name": "makerAssetData",
              "type": "bytes"
            },
            {
              "name": "takerAssetData",
              "type": "bytes"
            }
          ],
          "name": "orders",
          "type": "tuple[]"
        },
        {
          "name": "makerAssetFillAmount",
          "type": "uint256"
        },
        {
          "name": "signatures",
          "type": "bytes[]"
        }
      ],
      "name": "marketBuyOrders",
      "outputs": [
        {
          "components": [
            {
              "name": "makerAssetFilledAmount",
              "type": "uint256"
            },
            {
              "name": "takerAssetFilledAmount",
              "type": "uint256"
            },
            {
              "name": "makerFeePaid",
              "type": "uint256"
            },
            {
              "name": "takerFeePaid",
              "type": "uint256"
            }
          ],
          "name": "totalFillResults",
          "type": "tuple"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "currentContextAddress",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "VERSION",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "signerAddress",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "validatorAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "SignatureValidatorApproval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "makerAddress",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "feeRecipientAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "takerAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "senderAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "makerAssetFilledAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "takerAssetFilledAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "makerFeePaid",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "takerFeePaid",
          "type": "uint256"
        },
        {
          "indexed": true,
          "name": "orderHash",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "name": "makerAssetData",
          "type": "bytes"
        },
        {
          "indexed": false,
          "name": "takerAssetData",
          "type": "bytes"
        }
      ],
      "name": "Fill",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "makerAddress",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "feeRecipientAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "senderAddress",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "orderHash",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "name": "makerAssetData",
          "type": "bytes"
        },
        {
          "indexed": false,
          "name": "takerAssetData",
          "type": "bytes"
        }
      ],
      "name": "Cancel",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "makerAddress",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "senderAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "orderEpoch",
          "type": "uint256"
        }
      ],
      "name": "CancelUpTo",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "id",
          "type": "bytes4"
        },
        {
          "indexed": false,
          "name": "assetProxy",
          "type": "address"
        }
      ],
      "name": "AssetProxyRegistered",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [
        {
          "components": [
            {
              "name": "makerAssetFilledAmount",
              "type": "uint256"
            },
            {
              "name": "takerAssetFilledAmount",
              "type": "uint256"
            },
            {
              "name": "makerFeePaid",
              "type": "uint256"
            },
            {
              "name": "takerFeePaid",
              "type": "uint256"
            }
          ],
          "name": "totalFillResults",
          "type": "tuple"
        },
        {
          "components": [
            {
              "name": "makerAssetFilledAmount",
              "type": "uint256"
            },
            {
              "name": "takerAssetFilledAmount",
              "type": "uint256"
            },
            {
              "name": "makerFeePaid",
              "type": "uint256"
            },
            {
              "name": "takerFeePaid",
              "type": "uint256"
            }
          ],
          "name": "singleFillResults",
          "type": "tuple"
        }
      ],
      "name": "publicAddFillResults",
      "outputs": [
        {
          "components": [
            {
              "name": "makerAssetFilledAmount",
              "type": "uint256"
            },
            {
              "name": "takerAssetFilledAmount",
              "type": "uint256"
            },
            {
              "name": "makerFeePaid",
              "type": "uint256"
            },
            {
              "name": "takerFeePaid",
              "type": "uint256"
            }
          ],
          "name": "",
          "type": "tuple"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "components": [
            {
              "name": "makerAddress",
              "type": "address"
            },
            {
              "name": "takerAddress",
              "type": "address"
            },
            {
              "name": "feeRecipientAddress",
              "type": "address"
            },
            {
              "name": "senderAddress",
              "type": "address"
            },
            {
              "name": "makerAssetAmount",
              "type": "uint256"
            },
            {
              "name": "takerAssetAmount",
              "type": "uint256"
            },
            {
              "name": "makerFee",
              "type": "uint256"
            },
            {
              "name": "takerFee",
              "type": "uint256"
            },
            {
              "name": "expirationTimeSeconds",
              "type": "uint256"
            },
            {
              "name": "salt",
              "type": "uint256"
            },
            {
              "name": "makerAssetData",
              "type": "bytes"
            },
            {
              "name": "takerAssetData",
              "type": "bytes"
            }
          ],
          "name": "order",
          "type": "tuple"
        },
        {
          "name": "takerAssetFilledAmount",
          "type": "uint256"
        }
      ],
      "name": "publicCalculateFillResults",
      "outputs": [
        {
          "components": [
            {
              "name": "makerAssetFilledAmount",
              "type": "uint256"
            },
            {
              "name": "takerAssetFilledAmount",
              "type": "uint256"
            },
            {
              "name": "makerFeePaid",
              "type": "uint256"
            },
            {
              "name": "takerFeePaid",
              "type": "uint256"
            }
          ],
          "name": "fillResults",
          "type": "tuple"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "numerator",
          "type": "uint256"
        },
        {
          "name": "denominator",
          "type": "uint256"
        },
        {
          "name": "target",
          "type": "uint256"
        }
      ],
      "name": "publicSafeGetPartialAmountFloor",
      "outputs": [
        {
          "name": "partialAmount",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "numerator",
          "type": "uint256"
        },
        {
          "name": "denominator",
          "type": "uint256"
        },
        {
          "name": "target",
          "type": "uint256"
        }
      ],
      "name": "publicSafeGetPartialAmountCeil",
      "outputs": [
        {
          "name": "partialAmount",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "numerator",
          "type": "uint256"
        },
        {
          "name": "denominator",
          "type": "uint256"
        },
        {
          "name": "target",
          "type": "uint256"
        }
      ],
      "name": "publicGetPartialAmountFloor",
      "outputs": [
        {
          "name": "partialAmount",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "numerator",
          "type": "uint256"
        },
        {
          "name": "denominator",
          "type": "uint256"
        },
        {
          "name": "target",
          "type": "uint256"
        }
      ],
      "name": "publicGetPartialAmountCeil",
      "outputs": [
        {
          "name": "partialAmount",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "numerator",
          "type": "uint256"
        },
        {
          "name": "denominator",
          "type": "uint256"
        },
        {
          "name": "target",
          "type": "uint256"
        }
      ],
      "name": "publicIsRoundingErrorFloor",
      "outputs": [
        {
          "name": "isError",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "numerator",
          "type": "uint256"
        },
        {
          "name": "denominator",
          "type": "uint256"
        },
        {
          "name": "target",
          "type": "uint256"
        }
      ],
      "name": "publicIsRoundingErrorCeil",
      "outputs": [
        {
          "name": "isError",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "components": [
            {
              "name": "makerAddress",
              "type": "address"
            },
            {
              "name": "takerAddress",
              "type": "address"
            },
            {
              "name": "feeRecipientAddress",
              "type": "address"
            },
            {
              "name": "senderAddress",
              "type": "address"
            },
            {
              "name": "makerAssetAmount",
              "type": "uint256"
            },
            {
              "name": "takerAssetAmount",
              "type": "uint256"
            },
            {
              "name": "makerFee",
              "type": "uint256"
            },
            {
              "name": "takerFee",
              "type": "uint256"
            },
            {
              "name": "expirationTimeSeconds",
              "type": "uint256"
            },
            {
              "name": "salt",
              "type": "uint256"
            },
            {
              "name": "makerAssetData",
              "type": "bytes"
            },
            {
              "name": "takerAssetData",
              "type": "bytes"
            }
          ],
          "name": "order",
          "type": "tuple"
        },
        {
          "name": "takerAddress",
          "type": "address"
        },
        {
          "name": "orderHash",
          "type": "bytes32"
        },
        {
          "name": "orderTakerAssetFilledAmount",
          "type": "uint256"
        },
        {
          "components": [
            {
              "name": "makerAssetFilledAmount",
              "type": "uint256"
            },
            {
              "name": "takerAssetFilledAmount",
              "type": "uint256"
            },
            {
              "name": "makerFeePaid",
              "type": "uint256"
            },
            {
              "name": "takerFeePaid",
              "type": "uint256"
            }
          ],
          "name": "fillResults",
          "type": "tuple"
        }
      ],
      "name": "publicUpdateFilledState",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "",
  "deployedBytecode": "",
  "sourceMap": "723:5376:79:-;;;690:5:108;668:27;;;;;;;;;;;;;;;;;;;;776:57:79;8:9:-1;5:2;;;30:1;27;20:12;5:2;776:57:79;1253:316:64;;;;;;;;;;;;;1330:13;1937:12:47;1920:14;:29;;;;;;;;;;;;:::i;:::-;;1851:105;1046:148:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1046:148:48;;;1036:159;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;1036:159:48;;;;;;;;;;;;;;;;1512:18;;;;;;;;;;;;;;;;;;1496:36;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;1496:36:48;;;;;;;;;;;;;;;;1562:21;;;;;;;;;;;;;;;;;;1546:39;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;1546:39:48;;;;;;;;;;;;;;;;1615:4;1599:22;;;;1417:214;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1417:214:48;;;1407:225;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;1407:225:48;;;;;;;;;;;;;;;;1386:18;:246;;;;;;;171:10:107;163:5;;:18;;;;;;;;;;;;;;;;;;1253:316:64;723:5376:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "723:5376:79:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4610:261;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4610:261:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5691:406;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5691:406:79;;;;;;;;;;;;;;;;;;;4100:270;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4100:270:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1400:42:66;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1400:42:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4256:647:70;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4256:647:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1490:42:66;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1490:42:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1693:445:68;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1693:445:68;;;;;;;;;;;;;;;;;;;1993:2891:67;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1993:2891:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2262:1515:70;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2262:1515:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;948:51:65;;8:9:-1;5:2;;;30:1;27;20:12;5:2;948:51:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15870:260:70;;8:9:-1;5:2;;;30:1;27;20:12;5:2;15870:260:70;;;;;;;;;;;;;;;;;;;5383:659;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5383:659:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2141:1079:66;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2141:1079:66;;;;;;;;;;;;;;;;;;;6601:632:70;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6601:632:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2064:154:65;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2064:154:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1018:45:69;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1018:45:69;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1480:395:70;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1480:395:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1362:275:79;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1362:275:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5111:259;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5111:259:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2375:412:68;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2375:412:68;;;;;;;;;;;;;;;;;;;1287:71;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1287:71:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7621:1507:70;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7621:1507:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16324:419;;8:9:-1;5:2;;;30:1;27;20:12;5:2;16324:419:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1167:63:68;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1167:63:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;92:20:107;;8:9:-1;5:2;;;30:1;27;20:12;5:2;92:20:107;;;;;;;;;;;;;;;;;;;;3159:4848:68;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3159:4848:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13836:1899:70;;8:9:-1;5:2;;;30:1;27;20:12;5:2;13836:1899:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3537:374:66;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3537:374:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3579:272:79;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3579:272:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1477:1456:69;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1477:1456:69;;;;;;;;;;;;;;;;;;;1208:666:65;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1208:666:65;;;;;;;;;;;;;;;;;;;4540:2261:66;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4540:2261:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4142:124;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4142:124:66;;;;;;;;;;;;;;;;;;;1750:67;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1750:67:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1780:27:47;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1780:27:47;;;;;;;;;;;;;;;;;;;;9585:1488:70;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9585:1488:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2473:280:79;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2473:280:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3052:278;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3052:278:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1908:266;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1908:266:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1302:33:48;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1302:33:48;;;;;;;;;;;;;;;;;;;;11461:1914:70;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11461:1914:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1115:36:69;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1115:36:69;;;;;;;;;;;;;;;;;;;;334:167:107;;8:9:-1;5:2;;;30:1;27;20:12;5:2;334:167:107;;;;;;;;;;;;;;;;;;;1137:46:64;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1137:46:64;;;;;;;;;;;;;;;;;;;;4610:261:79;4777:12;4812:52;4833:9;4844:11;4857:6;4812:20;:52::i;:::-;4805:59;;4610:261;;;;;:::o;5691:406::-;5929:161;5960:5;5979:12;6005:9;6028:27;6069:11;5929:17;:161::i;:::-;5691:406;;;;;:::o;4100:270::-;4267:21;4311:52;4332:9;4343:11;4356:6;4311:20;:52::i;:::-;4304:59;;4100:270;;;;;:::o;1400:42:66:-;;;;;;;;;;;;;;;;;:::o;4256:647:70:-;4463:35;;:::i;:::-;4514:20;4565:9;4618:36;;:::i;:::-;940:6:108;;;;;;;;;;;939:7;918:72;;;;;;;;;;;;;;;;;;;;;;;;1053:4;1044:6;;:13;;;;;;;;;;;;;;;;;;4537:6:70;:13;4514:36;;4577:1;4565:13;;4560:304;4585:12;4580:1;:17;;4560:304;;;4657:131;4692:6;4699:1;4692:9;;;;;;;;;;;;;;;;;;4719:21;4741:1;4719:24;;;;;;;;;;;;;;;;;;4761:10;4772:1;4761:13;;;;;;;;;;;;;;;;;;4657:17;:131::i;:::-;4618:170;;4802:51;4817:16;4835:17;4802:14;:51::i;:::-;4599:3;;;;;;;4560:304;;;4880:16;4873:23;;1166:5:108;1157:6;;:14;;;;;;;;;;;;;;;;;;4256:647:70;;;;;;;;:::o;1490:42:66:-;;;;;;;;;;;;;;;;;;;;;;:::o;1693:445:68:-;1846:10;1829:27;;:13;:27;;;;1825:260;;;1897:126;1935:4;1961:13;1996:9;;1897:126;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:16;:126::i;:::-;1872:202;;;;;;;;;;;;;;;;;;;;;;;;1825:260;2127:4;2094:9;:15;2104:4;2094:15;;;;;;;;;;;;;;;;;:30;2110:13;2094:30;;;;;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;1693:445;;;;:::o;1993:2891:67:-;2229:59;;:::i;:::-;2694:39;;:::i;:::-;2769:40;;:::i;:::-;2878:20;940:6:108;;;;;;;;;;;939:7;918:72;;;;;;;;;;;;;;;;;;;;;;;;1053:4;1044:6;;:13;;;;;;;;;;;;;;;;;;2558:9:67;:24;;;2530:10;:25;;:52;;;;2620:9;:24;;;2592:10;:25;;:52;;;;2736:23;2749:9;2736:12;:23::i;:::-;2694:65;;2812:24;2825:10;2812:12;:24::i;:::-;2769:67;;2901:26;:24;:26::i;:::-;2878:49;;2998:132;3031:9;3054:13;3081:12;3107:13;2998:19;:132::i;:::-;3140:135;3173:10;3197:14;3225:12;3251:14;3140:19;:135::i;:::-;3285:39;3302:9;3313:10;3285:16;:39::i;:::-;3401:195;3442:9;3465:10;3489:13;:41;;;3544:14;:42;;;3401:27;:195::i;:::-;3380:216;;3641:255;3670:9;3693:13;3720:18;:23;;;:46;;;3780:18;:23;;;:46;;;3840:18;:23;;;:46;;;3641:15;:255::i;:::-;3906:260;3935:10;3959:14;3987:18;:24;;;:47;;;4048:18;:24;;;:47;;;4109:18;:24;;;:47;;;3906:15;:260::i;:::-;4218:205;4249:9;4272:12;4298:13;:23;;;4335:13;:41;;;4390:18;:23;;;4218:17;:205::i;:::-;4433:209;4464:10;4488:12;4514:14;:24;;;4552:14;:42;;;4608:18;:24;;;4433:17;:209::i;:::-;4707:134;4740:9;4763:10;4787:12;4813:18;4707:19;:134::i;:::-;4859:18;4852:25;;1166:5:108;1157:6;;:14;;;;;;;;;;;;;;;;;;1993:2891:67;;;;;;;;;:::o;2262:1515:70:-;2433:30;;:::i;:::-;2526;2559:104;2591:5;2610:20;2644:9;2559:18;:104::i;:::-;2526:137;;3239:3;3160:17;3095;3089:24;2993:2;2974:17;2970:26;2885:7;2814:3;2784:532;3332:7;3329:2;;;3384:17;3378:24;3365:11;3358:45;3478:2;3459:17;3455:26;3449:33;3444:2;3431:11;3427:20;3420:63;3558:2;3539:17;3535:26;3529:33;3524:2;3511:11;3507:20;3500:63;3638:2;3619:17;3615:26;3609:33;3604:2;3591:11;3587:20;3580:63;3329:2;2755:912;3759:11;3752:18;;2262:1515;;;;;;:::o;948:51:65:-;;;;;;;;;;;;;;;;;;;;;;:::o;15870:260:70:-;15979:20;16030:9;940:6:108;;;;;;;;;;;939:7;918:72;;;;;;;;;;;;;;;;;;;;;;;;1053:4;1044:6;;:13;;;;;;;;;;;;;;;;;;16002:6:70;:13;15979:36;;16042:1;16030:13;;16025:99;16050:12;16045:1;:17;;16025:99;;;16083:30;16103:6;16110:1;16103:9;;;;;;;;;;;;;;;;;;16083:19;:30::i;:::-;16064:3;;;;;;;16025:99;;;1166:5:108;1157:6;;:14;;;;;;;;;;;;;;;;;;15870:260:70;;;:::o;5383:659::-;5596:35;;:::i;:::-;5647:20;5698:9;5751:36;;:::i;:::-;940:6:108;;;;;;;;;;;939:7;918:72;;;;;;;;;;;;;;;;;;;;;;;;1053:4;1044:6;;:13;;;;;;;;;;;;;;;;;;5670:6:70;:13;5647:36;;5710:1;5698:13;;5693:310;5718:12;5713:1;:17;;5693:310;;;5790:137;5831:6;5838:1;5831:9;;;;;;;;;;;;;;;;;;5858:21;5880:1;5858:24;;;;;;;;;;;;;;;;;;5900:10;5911:1;5900:13;;;;;;;;;;;;;;;;;;5790:23;:137::i;:::-;5751:176;;5941:51;5956:16;5974:17;5941:14;:51::i;:::-;5732:3;;;;;;;5693:310;;;6019:16;6012:23;;1166:5:108;1157:6;;:14;;;;;;;;;;;;;;;;;;5383:659:70;;;;;;;;:::o;2141:1079:66:-;2245:20;2552:21;2716;2772;940:6:108;;;;;;;;;;;939:7;918:72;;;;;;;;;;;;;;;;;;;;;;;;1053:4;1044:6;;:13;;;;;;;;;;;;;;;;;;2268:26:66;:24;:26::i;:::-;2245:49;;2592:10;2576:26;;:12;:26;;;:52;;2618:10;2576:52;;;2613:1;2576:52;2552:76;;2759:1;2740:16;:20;2716:44;;2796:10;:24;2807:12;2796:24;;;;;;;;;;;;;;;:39;2821:13;2796:39;;;;;;;;;;;;;;;;2772:63;;2940:13;2924;:29;2903:100;;;;;;;;;;;;;;;;;;;;;;;;3085:13;3043:10;:24;3054:12;3043:24;;;;;;;;;;;;;;;:39;3068:13;3043:39;;;;;;;;;;;;;;;:55;;;;3163:13;3113:100;;3137:12;3113:100;;;3190:13;3113:100;;;;;;;;;;;;;;;1166:5:108;1157:6;;:14;;;;;;;;;;;;;;;;;;2141:1079:66;;;;;:::o;6601:632:70:-;6794:35;;:::i;:::-;6845:20;6896:9;6949:36;;:::i;:::-;6868:6;:13;6845:36;;6908:1;6896:13;;6891:303;6916:12;6911:1;:17;;6891:303;;;6988:130;7022:6;7029:1;7022:9;;;;;;;;;;;;;;;;;;7049:21;7071:1;7049:24;;;;;;;;;;;;;;;;;;7091:10;7102:1;7091:13;;;;;;;;;;;;;;;;;;6988:16;:130::i;:::-;6949:169;;7132:51;7147:16;7165:17;7132:14;:51::i;:::-;6930:3;;;;;;;6891:303;;;7210:16;7203:23;;6601:632;;;;;;;;:::o;2064:154:65:-;2155:7;2185:12;:26;2198:12;2185:26;;;;;;;;;;;;;;;;;;;;;;;;;;;2178:33;;2064:154;;;:::o;1018:45:69:-;;;;;;;;;;;;;;;;;;;;;;:::o;1480:395:70:-;1671:30;;:::i;:::-;940:6:108;;;;;;;;;;;939:7;918:72;;;;;;;;;;;;;;;;;;;;;;;;1053:4;1044:6;;:13;;;;;;;;;;;;;;;;;;1731:109:70;1768:5;1787:20;1821:9;1731:23;:109::i;:::-;1717:123;;1857:11;1850:18;;1166:5:108;1157:6;;:14;;;;;;;;;;;;;;;;;;1480:395:70;;;;;:::o;1362:275:79:-;1512:11;;:::i;:::-;1546:51;1561:16;1579:17;1546:14;:51::i;:::-;1614:16;1607:23;;1362:275;;;;:::o;5111:259::-;5277:12;5312:51;5332:9;5343:11;5356:6;5312:19;:51::i;:::-;5305:58;;5111:259;;;;;:::o;2375:412:68:-;2529:21;940:6:108;;;;;;;;;;;939:7;918:72;;;;;;;;;;;;;;;;;;;;;;;;1053:4;1044:6;;:13;;;;;;;;;;;;;;;;;;2553:26:68;:24;:26::i;:::-;2529:50;;2642:8;2589:17;:32;2607:13;2589:32;;;;;;;;;;;;;;;:50;2622:16;2589:50;;;;;;;;;;;;;;;;:61;;;;;;;;;;;;;;;;;;2732:16;2665:115;;2705:13;2665:115;;;2762:8;2665:115;;;;;;;;;;;;;;;1166:5:108;1157:6;;:14;;;;;;;;;;;;;;;;;;2375:412:68;;;:::o;1287:71::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;7621:1507:70:-;7819:35;;:::i;:::-;7870:27;7939:20;7990:9;8376:37;8567:36;;:::i;:::-;940:6:108;;;;;;;;;;;939:7;918:72;;;;;;;;;;;;;;;;;;;;;;;;1053:4;1044:6;;:13;;;;;;;;;;;;;;;;;;7900:6:70;7907:1;7900:9;;;;;;;;;;;;;;;;;;:24;;;7870:54;;7962:6;:13;7939:36;;8002:1;7990:13;;7985:1104;8010:12;8005:1;:17;;7985:1104;;;8279:14;8252:6;8259:1;8252:9;;;;;;;;;;;;;;;;;;:24;;:41;;;;8416:70;8424:20;8446:16;:39;;;8416:7;:70::i;:::-;8376:110;;8606:136;8641:6;8648:1;8641:9;;;;;;;;;;;;;;;;;;8668:29;8715:10;8726:1;8715:13;;;;;;;;;;;;;;;;;;8606:17;:136::i;:::-;8567:175;;8827:51;8842:16;8860:17;8827:14;:51::i;:::-;9019:20;8976:16;:39;;;:63;;8972:107;;;9059:5;;8972:107;8024:3;;;;;;;7985:1104;;;9105:16;9098:23;;1166:5:108;1157:6;;:14;;;;;;;;;;;;;;;;;;7621:1507:70;;;;;;;;;;:::o;16324:419::-;16424:20;16467;16513:38;16607:9;16490:6;:13;16467:36;;16579:12;16554:38;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;16513:79;;16619:1;16607:13;;16602:108;16627:12;16622:1;:17;;16602:108;;;16676:23;16689:6;16696:1;16689:9;;;;;;;;;;;;;;;;;;16676:12;:23::i;:::-;16660:10;16671:1;16660:13;;;;;;;;;;;;;;;;;:39;;;;16641:3;;;;;;;16602:108;;;16726:10;16719:17;;16324:419;;;;;;:::o;1167:63:68:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;92:20:107:-;;;;;;;;;;;;;:::o;3159:4848:68:-;3321:12;3511:22;3752:27;3873:7;3890:9;3909;3928:17;6992:24;3389:1;3370:9;:16;:20;3349:97;;;;;;;;;;;;;;;;;;;;;;;;3542:23;:9;:21;:23::i;:::-;3536:30;;;3511:55;;3664:29;3658:36;;;;;;;;3639:55;;:16;:55;;;3618:123;;;;;;;;;;;;;;;;;;;;;;;;3796:16;3782:31;;;;;;;;;;3752:61;;4295:21;4278:38;;;;;;;;:13;:38;;;;;;;;;4274:3383;;;4332:27;;;;;;;;;;;;;;;;;;;4274:3383;4641:21;4624:38;;;;;;;;:13;:38;;;;;;;;;4620:3037;;;4723:1;4703:9;:16;:21;4678:97;;;;;;;;;;;;;;;;;;;;;;;;4799:5;4789:15;;4825:7;4818:14;;;;4620:3037;4905:20;4888:37;;;;;;;;:13;:37;;;;;;;;;4884:2773;;;4986:2;4966:9;:16;:22;4941:99;;;;;;;;;;;;;;;;;;;;;;;;5064:9;5074:1;5064:12;;;;;;;;;;;;;;;;;;;;5058:19;;;5054:23;;5095:24;5117:1;5095:9;:21;;:24;;;;:::i;:::-;5091:28;;5137:25;5159:2;5137:9;:21;;:25;;;;:::i;:::-;5133:29;;5188:102;5215:4;5237:1;5256;5275;5188:102;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5188:102:68;;;;;;;;5176:114;;5331:9;5314:26;;:13;:26;;;5304:36;;5361:7;5354:14;;;;4884:2773;5445:21;5428:38;;;;;;;;:13;:38;;;;;;;;;5424:2233;;;5527:2;5507:9;:16;:22;5482:99;;;;;;;;;;;;;;;;;;;;;;;;5605:9;5615:1;5605:12;;;;;;;;;;;;;;;;;;;;5599:19;;;5595:23;;5636:24;5658:1;5636:9;:21;;:24;;;;:::i;:::-;5632:28;;5678:25;5700:2;5678:9;:21;;:25;;;;:::i;:::-;5674:29;;5729:225;5860:4;5766:116;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;5766:116:68;;;5756:127;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;5756:127:68;;;;;;;;;;;;;;;;5901:1;5920;5939;5729:225;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5729:225:68;;;;;;;;5717:237;;5995:9;5978:26;;:13;:26;;;5968:36;;6025:7;6018:14;;;;5424:2233;6202:20;6185:37;;;;;;;;:13;:37;;;;;;;;;6181:1476;;;6248:116;6288:4;6310:13;6341:9;6248:22;:116::i;:::-;6238:126;;6385:7;6378:14;;;;6181:1476;6891:23;6874:40;;;;;;;;:13;:40;;;;;;;;;6870:787;;;7019:26;:9;:24;:26::i;:::-;6992:53;;7130:17;:32;7148:13;7130:32;;;;;;;;;;;;;;;:50;7163:16;7130:50;;;;;;;;;;;;;;;;;;;;;;;;;7129:51;7125:102;;;7207:5;7200:12;;;;7125:102;7250:153;7293:16;7327:4;7349:13;7380:9;7250:25;:153::i;:::-;7240:163;;7424:7;7417:14;;;;6870:787;7539:23;7522:40;;;;;;;;:13;:40;;;;;;;;;7518:139;;;7588:9;:15;7598:4;7588:15;;;;;;;;;;;;;;;;;:30;7604:13;7588:30;;;;;;;;;;;;;;;;;;;;;;;;;7578:40;;7639:7;7632:14;;;;7518:139;7969:31;;;;;;;;;;;;;;;;;;;3159:4848;;;;;;;;;;;;;:::o;13836:1899:70:-;14019:35;;:::i;:::-;14070:27;14135:20;14186:9;14576:37;14882;15173:36;;:::i;:::-;14100:6;14107:1;14100:9;;;;;;;;;;;;;;;;;;:24;;;14070:54;;14158:6;:13;14135:36;;14198:1;14186:13;;14181:1515;14206:12;14201:1;:17;;14181:1515;;;14480:14;14453:6;14460:1;14453:9;;;;;;;;;;;;;;;;;;:24;;:41;;;;14616:70;14624:20;14646:16;:39;;;14616:7;:70::i;:::-;14576:110;;14922:170;14961:6;14968:1;14961:9;;;;;;;;;;;;;;;;;;:26;;;15005:6;15012:1;15005:9;;;;;;;;;;;;;;;;;;:26;;;15049:29;14922:21;:170::i;:::-;14882:210;;15212:135;15246:6;15253:1;15246:9;;;;;;;;;;;;;;;;;;15273:29;15320:10;15331:1;15320:13;;;;;;;;;;;;;;;;;;15212:16;:135::i;:::-;15173:174;;15432:51;15447:16;15465:17;15432:14;:51::i;:::-;15626:20;15583:16;:39;;;:63;;15579:107;;;15666:5;;15579:107;14220:3;;;;;;;14181:1515;;;15712:16;15705:23;;13836:1899;;;;;;;;;;;:::o;3537:374:66:-;3713:30;;:::i;:::-;940:6:108;;;;;;;;;;;939:7;918:72;;;;;;;;;;;;;;;;;;;;;;;;1053:4;1044:6;;:13;;;;;;;;;;;;;;;;;;3773:103:66;3804:5;3823:20;3857:9;3773:17;:103::i;:::-;3759:117;;3893:11;3886:18;;1166:5:108;1157:6;;:14;;;;;;;;;;;;;;;;;;3537:374:66;;;;;:::o;3579:272:79:-;3747:21;3791:53;3813:9;3824:11;3837:6;3791:21;:53::i;:::-;3784:60;;3579:272;;;;;:::o;1477:1456:69:-;1781:23;1724:1;1691:35;;:21;;;;;;;;;;;:35;;;1670:100;;;;;;;;;;;;;;;;;;;;;;;;1807:113;1825:94;1860:4;1878:13;1905:4;;1825:94;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:21;:94::i;:::-;1807:17;:113::i;:::-;1781:139;;2007:12;:29;2020:15;2007:29;;;;;;;;;;;;;;;;;;;;;;;;;;;2006:30;1985:92;;;;;;;;;;;;;;;;;;;;;;;;2180:10;2163:27;;:13;:27;;;;2159:410;;;2265:137;2303:15;2340:13;2375:9;;2265:137;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:16;:137::i;:::-;2240:216;;;;;;;;;;;;;;;;;;;;;;;;2545:13;2521:21;;:37;;;;;;;;;;;;;;;;;;2159:410;2642:4;2610:12;:29;2623:15;2610:29;;;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;2685:4;2677:26;;2704:4;;2677:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2656:95;;;;;;;;;;;;;;;;;;;;;;;;2856:10;2839:27;;:13;:27;;;;2835:92;;;2914:1;2882:21;;:34;;;;;;;;;;;;;;;;;;2835:92;1477:1456;;;;;;;:::o;1208:666:65:-;1305:30;1434:19;1497:25;260:5:107;;;;;;;;;;;246:19;;:10;:19;;;225:85;;;;;;;;;;;;;;;;;;;;;;;;1350:10:65;1305:56;;1456:18;:29;;;:31;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1456:31:65;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1456:31:65;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;1456:31:65;;;;;;;;;1434:53;;1525:12;:26;1538:12;1525:26;;;;;;;;;;;;;;;;;;;;;;;;;;;1497:54;;1611:1;1582:31;;:17;:31;;;1561:104;;;;;;;;;;;;;;;;;;;;;;;;1754:18;1725:12;:26;1738:12;1725:26;;;;;;;;;;;;;;;;;;:47;;;;;;;;;;;;;;;;;;1787:80;1821:12;1847:10;1787:80;;;;;;;;;;;;;;;;1208:666;;;;:::o;4540:2261:66:-;4627:26;;:::i;:::-;4725:19;4738:5;4725:12;:19::i;:::-;4703:9;:19;;:41;;;;;;;;;;;;;4826:6;:27;4833:9;:19;;;4826:27;;;;;;;;;;;;;;;;;;4786:9;:37;;:67;;;;;5181:1;5155:5;:22;;;:27;5151:157;;;5228:38;5222:45;;;;;;;;5198:9;:21;;:69;;;;;;;;;;;5288:9;5281:16;;;;5151:157;5647:1;5621:5;:22;;;:27;5617:157;;;5694:38;5688:45;;;;;;;;5664:9;:21;;:69;;;;;;;;;;;5754:9;5747:16;;;;5617:157;5868:5;:22;;;5827:9;:37;;;:63;;5823:179;;;5936:24;5930:31;;;;;;;;5906:9;:21;;:55;;;;;;;;;;;5982:9;5975:16;;;;5823:179;6126:5;:27;;;6107:15;:46;;6103:157;;;6199:19;6193:26;;;;;;;;6169:9;:21;;:50;;;;;;;;;;;6240:9;6233:16;;;;6103:157;6319:9;:30;6329:9;:19;;;6319:30;;;;;;;;;;;;;;;;;;;;;;;;;;;6315:143;;;6395:21;6389:28;;;;;;;;6365:9;:21;;:52;;;;;;;;;;;6438:9;6431:16;;;;6315:143;6525:5;:10;;;6471;:30;6482:5;:18;;;6471:30;;;;;;;;;;;;;;;:51;6502:5;:19;;;6471:51;;;;;;;;;;;;;;;;:64;6467:177;;;6581:21;6575:28;;;;;;;;6551:9;:21;;:52;;;;;;;;;;;6624:9;6617:16;;;;6467:177;6747:20;6741:27;;;;;;;;6717:9;:21;;:51;;;;;;;;;;;6785:9;6778:16;;4540:2261;;;;:::o;4142:124::-;940:6:108;;;;;;;;;;;939:7;918:72;;;;;;;;;;;;;;;;;;;;;;;;1053:4;1044:6;;:13;;;;;;;;;;;;;;;;;;4233:26:66;4253:5;4233:19;:26::i;:::-;1166:5:108;1157:6;;:14;;;;;;;;;;;;;;;;;;4142:124:66;:::o;1750:67::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1780:27:47:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;9585:1488:70:-;9769:35;;:::i;:::-;9820:27;9885:20;9936:9;10322:37;10513:36;;:::i;:::-;9850:6;9857:1;9850:9;;;;;;;;;;;;;;;;;;:24;;;9820:54;;9908:6;:13;9885:36;;9948:1;9936:13;;9931:1103;9956:12;9951:1;:17;;9931:1103;;;10225:14;10198:6;10205:1;10198:9;;;;;;;;;;;;;;;;;;:24;;:41;;;;10362:70;10370:20;10392:16;:39;;;10362:7;:70::i;:::-;10322:110;;10552:135;10586:6;10593:1;10586:9;;;;;;;;;;;;;;;;;;10613:29;10660:10;10671:1;10660:13;;;;;;;;;;;;;;;;;;10552:16;:135::i;:::-;10513:174;;10772:51;10787:16;10805:17;10772:14;:51::i;:::-;10964:20;10921:16;:39;;;:63;;10917:107;;;11004:5;;10917:107;9970:3;;;;;;;9931:1103;;;11050:16;11043:23;;9585:1488;;;;;;;;;;:::o;2473:280:79:-;2645:21;2689:57;2715:9;2726:11;2739:6;2689:25;:57::i;:::-;2682:64;;2473:280;;;;;:::o;3052:278::-;3223:21;3267:56;3292:9;3303:11;3316:6;3267:24;:56::i;:::-;3260:63;;3052:278;;;;;:::o;1908:266::-;2063:30;;:::i;:::-;2116:51;2137:5;2144:22;2116:20;:51::i;:::-;2109:58;;1908:266;;;;:::o;1302:33:48:-;;;;:::o;11461:1914:70:-;11658:35;;:::i;:::-;11709:27;11774:20;11825:9;12215:37;12521;12812:36;;:::i;:::-;940:6:108;;;;;;;;;;;939:7;918:72;;;;;;;;;;;;;;;;;;;;;;;;1053:4;1044:6;;:13;;;;;;;;;;;;;;;;;;11739:6:70;11746:1;11739:9;;;;;;;;;;;;;;;;;;:24;;;11709:54;;11797:6;:13;11774:36;;11837:1;11825:13;;11820:1516;11845:12;11840:1;:17;;11820:1516;;;12119:14;12092:6;12099:1;12092:9;;;;;;;;;;;;;;;;;;:24;;:41;;;;12255:70;12263:20;12285:16;:39;;;12255:7;:70::i;:::-;12215:110;;12561:170;12600:6;12607:1;12600:9;;;;;;;;;;;;;;;;;;:26;;;12644:6;12651:1;12644:9;;;;;;;;;;;;;;;;;;:26;;;12688:29;12561:21;:170::i;:::-;12521:210;;12851:136;12886:6;12893:1;12886:9;;;;;;;;;;;;;;;;;;12913:29;12960:10;12971:1;12960:13;;;;;;;;;;;;;;;;;;12851:17;:136::i;:::-;12812:175;;13072:51;13087:16;13105:17;13072:14;:51::i;:::-;13266:20;13223:16;:39;;;:63;;13219:107;;;13306:5;;13219:107;11859:3;;;;;;;11820:1516;;;13352:16;13345:23;;1166:5:108;1157:6;;:14;;;;;;;;;;;;;;;;;;11461:1914:70;;;;;;;;;;;:::o;1115:36:69:-;;;;;;;;;;;;;:::o;334:167:107:-;260:5;;;;;;;;;;;246:19;;:10;:19;;;225:85;;;;;;;;;;;;;;;;;;;;;;;;450:1;430:22;;:8;:22;;;;426:69;;;476:8;468:5;;:16;;;;;;;;;;;;;;;;;;426:69;334:167;:::o;1137:46:64:-;;;;;;;;;;;;;;;;;;;;:::o;4796:1869:52:-;4959:12;6456:17;5022:1;5008:11;:15;4987:78;;;;;;;;;;;;;;;;;;;;;;;;5895:1;5885:6;:11;:29;;;;5913:1;5900:9;:14;5885:29;5881:72;;;5937:5;5930:12;;;;5881:72;6539:11;6476:84;;;;;;;6516:9;6496:6;6476:84;6456:104;;6608:26;6616:9;6627:6;6608:7;:26::i;:::-;6580:24;6588:4;6594:9;6580:7;:24::i;:::-;:54;;6570:64;;6651:7;6644:14;;4796:1869;;;;;;;:::o;9507:792:66:-;9785:72;9793:27;9822:11;:34;;;9785:7;:72::i;:::-;9765:6;:17;9772:9;9765:17;;;;;;;;;;;;;;;;;:92;;;;10205:9;9894:398;;;9944:5;:25;;;9894:398;;9912:5;:18;;;9894:398;;;9983:12;10009:10;10033:11;:34;;;10081:11;:34;;;10129:11;:24;;;10167:11;:24;;;10228:5;:20;;;10262:5;:20;;;9894:398;;;;;;;;;;;;;;;;;;;;;;9507:792;;;;;:::o;3842:691:52:-;4005:21;4077:1;4063:11;:15;4042:78;;;;;;;;;;;;;;;;;;;;;;;;4334:162;4355:106;4380:26;4388:9;4399:6;4380:7;:26::i;:::-;4424:23;4432:11;4445:1;4424:7;:23::i;:::-;4355:7;:106::i;:::-;4475:11;4334:7;:162::i;:::-;4318:178;;4513:13;4506:20;;3842:691;;;;;:::o;7118:1583:66:-;7283:30;;:::i;:::-;7357:26;;:::i;:::-;7447:20;7752:33;7868:30;7386:19;7399:5;7386:12;:19::i;:::-;7357:48;;7470:26;:24;:26::i;:::-;7447:49;;7569:120;7602:5;7621:9;7644:12;7670:9;7569:19;:120::i;:::-;7788:70;7796:5;:22;;;7820:9;:37;;;7788:7;:70::i;:::-;7752:106;;7901:55;7908:20;7930:25;7901:6;:55::i;:::-;7868:88;;7995:185;8024:5;8043:9;8066:20;8100:22;8136:11;:34;;;7995:15;:185::i;:::-;8250:51;8271:5;8278:22;8250:20;:51::i;:::-;8236:65;;8354:181;8385:5;8404:12;8430:9;:19;;;8463:9;:37;;;8514:11;8354:17;:181::i;:::-;8574:91;8599:5;8618:12;8644:11;8574;:91::i;:::-;8683:11;8676:18;;7118:1583;;;;;;;;;:::o;1788:648:51:-;1973:90;1981:16;:39;;;2022:17;:40;;;1973:7;:90::i;:::-;1931:16;:39;;:132;;;;;2115:90;2123:16;:39;;;2164:17;:40;;;2115:7;:90::i;:::-;2073:16;:39;;:132;;;;;2247:70;2255:16;:29;;;2286:17;:30;;;2247:7;:70::i;:::-;2215:16;:29;;:102;;;;;2359:70;2367:16;:29;;;2398:17;:30;;;2359:7;:70::i;:::-;2327:16;:29;;:102;;;;;1788:648;;:::o;4892:307:69:-;4975:7;4998:30;5062:22;5031:21;;;;;;;;;;;4998:54;;5121:1;5087:36;;:22;:36;;;:74;;5139:22;5087:74;;;5126:10;5087:74;5062:99;;5178:14;5171:21;;4892:307;;;:::o;11344:1268:66:-;11667:20;11661:27;;;;;;;;11636:52;;:9;:21;;;:52;;;11615:115;;;;;;;;;;;;;;;;;;;;;;;;11841:1;11810:33;;:5;:19;;;:33;;;;11806:170;;;11907:10;11884:33;;:5;:19;;;:33;;;11859:106;;;;;;;;;;;;;;;;;;;;;;;;11806:170;12084:1;12054:32;;:5;:18;;;:32;;;;12050:169;;;12149:12;12127:34;;:5;:18;;;:34;;;12102:106;;;;;;;;;;;;;;;;;;;;;;;;12050:169;12350:1;12309:9;:37;;;:42;12305:301;;;12392:146;12430:9;:19;;;12471:5;:18;;;12511:9;12392:16;:146::i;:::-;12367:228;;;;;;;;;;;;;;;;;;;;;;;;12305:301;11344:1268;;;;:::o;5054:1075:67:-;6008:64;6016:9;:26;;;6044:10;:27;;;6008:7;:64::i;:::-;5928;5936:9;:26;;;5964:10;:27;;;5928:7;:64::i;:::-;:144;;5907:215;;;;;;;;;;;;;;;;;;;;;;;;5054:1075;;:::o;6865:4784::-;7137:59;;:::i;:::-;7308:37;7426;7634:38;7755;7348:68;7356:9;:26;;;7384:31;7348:7;:68::i;:::-;7308:108;;7466:158;7505:9;:26;;;7545:9;:26;;;7585:29;7466:25;:158::i;:::-;7426:198;;7675:70;7683:10;:27;;;7712:32;7675:7;:70::i;:::-;7634:111;;7796:161;7835:10;:27;;;7876:10;:27;;;7917:30;7796:25;:161::i;:::-;7755:202;;8748:30;8715:29;:63;;8711:1672;;;8895:30;8845:18;:24;;;:47;;:80;;;;;8989:30;8939:18;:24;;;:47;;:80;;;;;9082:18;:24;;;:47;;;9033:18;:23;;;:46;;:96;;;;;9379:191;9422:9;:26;;;9466:9;:26;;;9510:18;:23;;;:46;;;9379:25;:191::i;:::-;9330:18;:23;;;:46;;:240;;;;;8711:1672;;;9700:29;9651:18;:23;;;:46;;:78;;;;;9792:29;9743:18;:23;;;:46;;:78;;;;;9885:18;:23;;;:46;;;9835:18;:24;;;:47;;:96;;;;;10179:193;10221:10;:27;;;10266:10;:27;;;10311:18;:24;;;:47;;;10179:24;:193::i;:::-;10129:18;:24;;;:47;;:243;;;;;8711:1672;10484:138;10505:18;:23;;;:46;;;10565:18;:24;;;:47;;;10484:7;:138::i;:::-;10436:18;:45;;:186;;;;;10711:167;10750:18;:23;;;:46;;;10810:9;:26;;;10850:9;:18;;;10711:25;:167::i;:::-;10672:18;:23;;;:36;;:206;;;;;10927:167;10966:18;:23;;;:46;;;11026:9;:26;;;11066:9;:18;;;10927:25;:167::i;:::-;10888:18;:23;;;:36;;:206;;;;;11185:170;11224:18;:24;;;:47;;;11285:10;:27;;;11326:10;:19;;;11185:25;:170::i;:::-;11145:18;:24;;;:37;;:210;;;;;11405:170;11444:18;:24;;;:47;;;11505:10;:27;;;11546:10;:19;;;11405:25;:170::i;:::-;11365:18;:24;;;:37;;:210;;;;;11624:18;11617:25;;6865:4784;;;;;;;;;;:::o;13050:2440:66:-;13469:1;13445:20;:25;;13424:92;;;;;;;;;;;;;;;;;;;;;;;;13770:20;13744:22;:46;;13723:106;;;;;;;;;;;;;;;;;;;;;;;;14111:5;:22;;;14037:70;14045:9;:37;;;14084:22;14037:7;:70::i;:::-;:96;;14016:157;;;;;;;;;;;;;;;;;;;;;;;;15384:55;15392:5;:22;;;15416;15384:7;:55::i;:::-;15300;15308:22;15332:5;:22;;;15300:7;:55::i;:::-;:139;;15279:204;;;;;;;;;;;;;;;;;;;;;;;;13050:2440;;;;;:::o;12095:2233:67:-;12342:25;12370:14;12342:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12428:202;12462:9;:24;;;12500:9;:22;;;12536:10;:23;;;12573:18;:24;;;:47;;;12428:20;:202::i;:::-;12640;12674:10;:25;;;12713:10;:23;;;12750:9;:22;;;12786:18;:23;;;:46;;;12640:20;:202::i;:::-;12852:189;12886:9;:24;;;12924:9;:22;;;12960:12;12986:18;:45;;;12852:20;:189::i;:::-;13074:185;13108:12;13134:9;:22;;;13170:9;:29;;;13213:18;:23;;;:36;;;13074:20;:185::i;:::-;13269:188;13303:12;13329:10;:23;;;13366:10;:30;;;13410:18;:24;;;:37;;;13269:20;:188::i;:::-;13527:10;:30;;;13494:63;;:9;:29;;;:63;;;13490:832;;;13573:301;13611:12;13641;13671:9;:29;;;13718:142;13747:18;:23;;;:36;;;13805:18;:24;;;:37;;;13718:7;:142::i;:::-;13573:20;:301::i;:::-;13490:832;;;13905:195;13943:12;13973;14003:9;:29;;;14050:18;:23;;;:36;;;13905:20;:195::i;:::-;14114:197;14152:12;14182;14212:10;:30;;;14260:18;:24;;;:37;;;14114:20;:197::i;:::-;13490:832;12095:2233;;;;;:::o;1012:10099:44:-;1200:30;5032:4;5026:11;5005:32;;5322:66;5315:4;5296:17;5292:28;5285:104;5446:4;5427:17;5423:28;5690:13;5758:4;5741:15;5737:26;5800:15;5894:13;5939;6048:5;6191:1;6226;6487:15;6474:11;6470:33;6452:16;6445:59;6559:4;6541:16;6537:27;6517:47;;6777:12;6771:19;6758:11;6751:40;6902:4;6888:12;6884:23;6878:30;6871:4;6858:11;6854:22;6847:62;6998:4;6984:12;6980:23;6974:30;6967:4;6954:11;6950:22;6943:62;7101:4;7087:12;7083:23;7077:30;7070:4;7057:11;7053:22;7046:62;7198:4;7184:12;7180:23;7174:30;7167:4;7154:11;7150:22;7143:62;7298:4;7284:12;7280:23;7274:30;7267:4;7254:11;7250:22;7243:62;7398:4;7384:12;7380:23;7374:30;7367:4;7354:11;7350:22;7343:62;7496:4;7482:12;7478:23;7472:30;7465:4;7452:11;7448:22;7441:62;7595:5;7581:12;7577:24;7571:31;7563:5;7550:11;7546:23;7539:64;7700:5;7686:12;7682:24;7676:31;7668:5;7655:11;7651:23;7644:64;7788:5;7774:12;7770:24;7764:31;7756:5;7743:11;7739:23;7732:64;7896:5;7882:12;7878:24;7872:31;7864:5;7851:11;7847:23;7840:64;7980:5;7967:11;7963:23;7948:38;;8033:5;8019:12;8015:24;7999:40;;8166:13;8153:11;8149:31;8141:4;8137:2;8133:13;8118;8114:33;8107:74;8286:5;8279;8275:17;8269:24;8253:40;;8347:12;8341:19;8324:36;;8407:4;8393:12;8389:23;8373:39;;8472:4;8465;8450:13;8446:24;8442:35;8425:52;;8565:13;8552:11;8545:34;8624:4;8611:11;8607:22;8592:37;;8713:1;8699:237;8722:13;8719:1;8716:20;8699:237;;;8798:12;8792:19;8779:11;8772:40;8861:4;8848:11;8844:22;8829:37;;8917:4;8903:12;8899:23;8883:39;;8750:1;8747;8743:9;8738:14;;8699:237;;;8703:12;9063:13;9050:11;9046:31;9038:4;9034:2;9030:13;9015;9011:33;9004:74;9183:5;9176;9172:17;9166:24;9150:40;;9244:12;9238:19;9221:36;;9304:4;9290:12;9286:23;9270:39;;9369:4;9362;9347:13;9343:24;9339:35;9322:52;;9462:13;9449:11;9442:34;9521:4;9508:11;9504:22;9489:37;;9611:1;9597:237;9620:13;9617:1;9614:20;9597:237;;;9696:12;9690:19;9677:11;9670:40;9759:4;9746:11;9742:22;9727:37;;9815:4;9801:12;9797:23;9781:39;;9648:1;9645;9641:9;9636:14;;9597:237;;;9601:12;9928:20;9910:16;9903:46;10004:4;9986:16;9982:27;9962:47;;10151:15;10138:11;10134:33;10116:16;10109:59;10243:9;10227:25;;10288:12;10282:19;10265:36;;10348:4;10334:12;10330:23;10314:39;;10413:4;10406;10391:13;10387:24;10383:35;10366:52;;10493:13;10480:11;10473:34;10552:4;10539:11;10535:22;10520:37;;10628:1;10614:237;10637:13;10634:1;10631:20;10614:237;;;10713:12;10707:19;10694:11;10687:40;10776:4;10763:11;10759:22;10744:37;;10832:4;10818:12;10814:23;10798:39;;10665:1;10662;10658:9;10653:14;;10614:237;;;10618:12;10969:4;10950:17;10946:28;10933:11;10929:46;10910:17;10903:73;11048:11;11042:4;11035:25;4298:6772;;;;;;;;;11087:17;11080:24;;1012:10099;;;;;:::o;8932:332:66:-;9050:26;;:::i;:::-;9079:19;9092:5;9079:12;:19::i;:::-;9050:48;;9137:35;9155:5;9162:9;9137:17;:35::i;:::-;9209:48;9230:5;9237:9;:19;;;9209:20;:48::i;:::-;8932:332;;:::o;17045:513:70:-;17225:30;;:::i;:::-;17285:103;17316:5;17335:20;17369:9;17285:17;:103::i;:::-;17271:117;;17457:20;17419:11;:34;;;:58;17398:125;;;;;;;;;;;;;;;;;;;;;;;;17540:11;17533:18;;17045:513;;;;;:::o;6926:918:52:-;7088:12;7568:17;7151:1;7137:11;:15;7116:78;;;;;;;;;;;;;;;;;;;;;;;;7277:1;7267:6;:11;:29;;;;7295:1;7282:9;:14;7267:29;7263:257;;;7504:5;7497:12;;;;7263:257;7651:11;7588:84;;;;;;;7628:9;7608:6;7588:84;7568:104;;7728:11;7694:31;7702:11;7715:9;7694:7;:31::i;:::-;:45;;;;;;;;7682:57;;7787:26;7795:9;7806:6;7787:7;:26::i;:::-;7759:24;7767:4;7773:9;7759:7;:24::i;:::-;:54;;7749:64;;7830:7;7823:14;;6926:918;;;;;;;:::o;503:208:109:-;589:7;638:1;633;:6;;612:70;;;;;;;;;;;;;;;;;;;;;;;;703:1;699;:5;692:12;;503:208;;;;:::o;8314:448:105:-;8398:13;8459:1;8448;:8;:12;8427:92;;;;;;;;;;;;;;;;;;;;;;;;8567:1;8580;8569;:8;:12;8567:15;;;;;;;;;;;;;;;;;;;;8558:24;;8691:1;8687;8681:8;8677:16;8716:6;8713:1;8706:17;8602:131;8749:6;8742:13;;8314:448;;;:::o;13291:490::-;13412:14;13483:2;13475:5;:10;13463:1;:8;:22;;13442:107;;;;;;;;;;;;;;;;;;;;;;;;13630:2;13621:11;;;;13735:5;13732:1;13728:13;13722:20;13712:30;;13768:6;13761:13;;13291:490;;;;:::o;8413:1482:68:-;8576:12;8604:21;8672:13;8664:39;;;:48;;;;8726:4;8744:9;8628:135;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;8628:135:68;;;;;;;38:4:-1;29:7;25:18;67:10;61:17;96:58;199:8;192:4;186;182:15;179:29;167:10;160:49;0:215;;;8628:135:68;8604:159;;8825:2;8815:8;8811:17;9178:2;9117:7;9070:8;9064:15;9001:7;8937:13;8884:3;8856:380;9257:7;9282:1;9277:422;;;;9717:1;9712:143;;;;9250:605;;9277:422;9367:66;9364:1;9357:77;9462:66;9458:2;9451:78;9557:66;9553:2;9546:78;9652:1;9648:2;9641:13;9681:3;9678:1;9671:14;9712:143;9833:7;9827:14;9816:25;;9250:605;;8782:1083;;9881:7;9874:14;;8413:1482;;;;;;:::o;8957:482:105:-;9044:14;9107:2;9095:1;:8;:14;;9074:99;;;;;;;;;;;;;;;;;;;;;;;;9225:29;9237:1;9251:2;9240:1;:8;:13;9225:11;:29::i;:::-;9216:38;;9367:2;9363:1;9357:8;9353:17;9393:6;9390:1;9383:17;9274:136;9426:6;9419:13;;8957:482;;;:::o;10334:1561:68:-;10534:12;10562:21;10633:13;10622:42;;;:51;;;;10687:4;10705:13;10732:9;10586:165;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;10586:165:68;;;;;;;38:4:-1;29:7;25:18;67:10;61:17;96:58;199:8;192:4;186;182:15;179:29;167:10;160:49;0:215;;;10586:165:68;10562:189;;10813:2;10803:8;10799:17;11174:2;11112:7;11064:8;11058:15;10994:7;10926:16;10872:3;10844:389;11254:7;11279:1;11274:425;;;;11717:1;11712:143;;;;11247:608;;11274:425;11367:66;11364:1;11357:77;11462:66;11458:2;11451:78;11557:66;11553:2;11546:78;11652:1;11648:2;11641:13;11681:3;11678:1;11671:14;11712:143;11833:7;11827:14;11816:25;;11247:608;;10770:1095;;11881:7;11874:14;;10334:1561;;;;;;;:::o;3140:425:52:-;3304:21;3376:1;3362:11;:15;3341:78;;;;;;;;;;;;;;;;;;;;;;;;3446:82;3467:26;3475:9;3486:6;3467:7;:26::i;:::-;3507:11;3446:7;:82::i;:::-;3430:98;;3545:13;3538:20;;3140:425;;;;;:::o;3226:1222:69:-;3390:14;3420:18;3488:16;868:146:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;868:146:75;;;858:157;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;858:157:75;;;;;;;;;;;;;;;;3420:58:69;;3517:4;3507:15;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;3507:15:69;;;;;;;;;;;;;;;;3488:34;;3868:2;3862:9;3900:10;3892:6;3885:26;4028:4;4023:2;4015:6;4011:15;4004:29;4156:42;4141:13;4137:62;4132:2;4124:6;4120:15;4113:87;4255:8;4250:2;4242:6;4238:15;4231:33;4405:3;4397:6;4387:22;4377:32;;3794:625;4435:6;4428:13;;3226:1222;;;;;;;:::o;1835:924:48:-;1929:14;1959:24;1986:18;;1959:45;;2298:2;2292:9;2330:66;2322:6;2315:82;2451:16;2447:1;2439:6;2435:14;2428:40;2570:10;2565:2;2557:6;2553:15;2546:35;2717:2;2709:6;2699:21;2689:31;;2224:506;2746:6;2739:13;;1835:924;;;;:::o;4212:202:53:-;4301:17;4346:35;4364:16;4374:5;4364:9;:16::i;:::-;4346:17;:35::i;:::-;4334:47;;4398:9;4391:16;;4212:202;;;:::o;1029:624:52:-;1197:21;1269:1;1255:11;:15;1234:78;;;;;;;;;;;;;;;;;;;;;;;;1345:114;1383:9;1410:11;1439:6;1345:20;:114::i;:::-;1344:115;1323:176;;;;;;;;;;;;;;;;;;;;;;;;1534:82;1555:26;1563:9;1574:6;1555:7;:26::i;:::-;1595:11;1534:7;:82::i;:::-;1518:98;;1633:13;1626:20;;1029:624;;;;;:::o;1976:889::-;2143:21;2215:1;2201:11;:15;2180:78;;;;;;;;;;;;;;;;;;;;;;;;2291:113;2328:9;2355:11;2384:6;2291:19;:113::i;:::-;2290:114;2269:175;;;;;;;;;;;;;;;;;;;;;;;;2666:162;2687:106;2712:26;2720:9;2731:6;2712:7;:26::i;:::-;2756:23;2764:11;2777:1;2756:7;:23::i;:::-;2687:7;:106::i;:::-;2807:11;2666:7;:162::i;:::-;2650:178;;2845:13;2838:20;;1976:889;;;;;:::o;16774:887:66:-;16925:30;;:::i;:::-;17057:22;17020:11;:34;;:59;;;;;17126:143;17165:22;17201:5;:22;;;17237:5;:22;;;17126:25;:143::i;:::-;17089:11;:34;;:180;;;;;17306:147;17345:11;:34;;;17393:5;:22;;;17429:5;:14;;;17306:25;:147::i;:::-;17279:11;:24;;:174;;;;;17490:135;17529:22;17565:5;:22;;;17601:5;:14;;;17490:25;:135::i;:::-;17463:11;:24;;:162;;;;;17643:11;17636:18;;16774:887;;;;:::o;52:288:109:-;138:7;215:9;170:1;165;:6;161:45;;;194:1;187:8;;;;161:45;231:1;227;:5;215:17;;272:1;267;263;:5;;;;;;;;:10;242:73;;;;;;;;;;;;;;;;;;;;;;;;332:1;325:8;;52:288;;;;;;:::o;717:230::-;803:7;826:9;842:1;838;:5;826:17;;879:1;874;:6;;853:69;;;;;;;;;;;;;;;;;;;;;;;;939:1;932:8;;717:230;;;;;:::o;346:151::-;432:7;455:9;471:1;467;:5;;;;;;;;455:17;;489:1;482:8;;346:151;;;;;:::o;1372:135::-;1457:7;1491:1;1487;:5;:13;;1499:1;1487:13;;;1495:1;1487:13;1480:20;;1372:135;;;;:::o;17971:932:66:-;18150:25;18178:14;18150:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18202:170;18236:5;:20;;;18270:5;:18;;;18302:12;18328:11;:34;;;18202:20;:170::i;:::-;18382;18416:5;:20;;;18450:12;18476:5;:18;;;18508:11;:34;;;18382:20;:170::i;:::-;18562:165;18596:12;18622:5;:18;;;18654:5;:25;;;18693:11;:24;;;18562:20;:165::i;:::-;18737:159;18771:12;18797;18823:5;:25;;;18862:11;:24;;;18737:20;:159::i;:::-;17971:932;;;;:::o;2533:5147:65:-;3082:19;3341:18;2769:1;2760:6;:10;:24;;;;;2782:2;2774:10;;:4;:10;;;;2760:24;2756:4918;;;2892:1;2873:9;:16;:20;2848:109;;;;;;;;;;;;;;;;;;;;;;;;3230:66;3204:2;3193:9;3189:18;3162:46;3158:156;3142:172;;3362:12;:26;3375:12;3362:26;;;;;;;;;;;;;;;;;;;;;;;;;;;3341:47;;3495:1;3473:24;;:10;:24;;;;3448:109;;;;;;;;;;;;;;;;;;;;;;;;4974:2;4968:9;5290:15;5285:2;5273:9;5267:16;5263:25;5259:47;5443:14;5438:3;5434:24;5425:7;5421:38;5727:66;5718:7;5711:83;6211:3;6207:1;6198:7;6194:15;6187:28;6267:42;6261:4;6257:53;6252:2;6243:7;6239:16;6232:79;6361:42;6357:2;6353:51;6348:2;6339:7;6335:16;6328:77;6448:6;6442:3;6433:7;6429:17;6422:33;6614:3;6605:7;6601:17;6696:206;6716:5;6706:8;6703:19;6696:206;;;6771:9;6765:16;6755:8;6748:34;6829:2;6819:8;6815:17;6803:29;;6881:2;6870:9;6866:18;6853:31;;6696:206;;;7468:3;7397:7;7343;7336:5;7332:19;7259:7;7193:1;7118:10;7055:3;7029:512;7568:7;7561:15;7558:2;;;7615:16;7606:7;7599:33;7558:2;4775:2889;;;;;;2533:5147;;;;;;:::o;15687:816:66:-;16343:20;15982;15976:27;;;;;;;;15951:52;;:9;:21;;;:52;;;15930:115;;;;;;;;;;;;;;;;;;;;;;;;16150:1;16119:33;;:5;:19;;;:33;;;;16115:170;;;16216:10;16193:33;;:5;:19;;;:33;;;16168:106;;;;;;;;;;;;;;;;;;;;;;;;16115:170;16366:26;:24;:26::i;:::-;16343:49;;16445:12;16423:34;;:5;:18;;;:34;;;16402:94;;;;;;;;;;;;;;;;;;;;;;;;15687:816;;;:::o;10601:422::-;10772:4;10749:9;:20;10759:9;10749:20;;;;;;;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;10929:9;10814:202;;;10866:5;:25;;;10814:202;;10834:5;:18;;;10814:202;;;10905:10;10952:5;:20;;;10986:5;:20;;;10814:202;;;;;;;;;;;;;;;;;10601:422;;:::o;10269:886:105:-;10390:14;10461:2;10453:5;:10;10441:1;:8;:22;;10420:135;;;;;;;;;;;;;;;;;;;;;;;;10802:2;10793:11;;;;11073:42;11064:5;11061:1;11057:13;11051:20;11047:69;11037:79;;11142:6;11135:13;;10269:886;;;;:::o;4554:1678:53:-;4640:14;4670:18;4725:26;4795;778:457;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;778:457:53;;;768:468;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;768:468:53;;;;;;;;;;;;;;;;4670:45;;4764:5;:20;;;4754:31;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;4754:31:53;;;;;;;;;;;;;;;;4725:60;;4834:5;:20;;;4824:31;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;4824:31:53;;;;;;;;;;;;;;;;4795:60;;5632:2;5625:5;5621:14;5671:3;5664:5;5660:15;5711:3;5704:5;5700:15;5770:4;5764:11;5807:4;5801:11;5844:4;5838:11;5917:10;5911:4;5904:24;5954:18;5948:4;5941:32;5999:18;5993:4;5986:32;6057:3;6051:4;6041:20;6031:30;;6123:5;6117:4;6110:19;6155:5;6149:4;6142:19;6187:5;6181:4;6174:19;5513:690;;;;;;6219:6;6212:13;;4554:1678;;;;;;:::o;723:5376:79:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5:118:-1:-;;72:46;110:6;97:20;72:46;;;63:55;;57:66;;;;;146:693;;268:3;261:4;253:6;249:17;245:27;238:35;235:2;;;286:1;283;276:12;235:2;323:6;310:20;345:85;360:69;422:6;360:69;;;345:85;;;336:94;;447:5;472:6;465:5;458:21;502:4;494:6;490:17;480:27;;524:4;519:3;515:14;508:21;;577:6;610:1;595:238;620:6;617:1;614:13;595:238;;;703:3;690:17;682:6;678:30;727:42;765:3;753:10;727:42;;;722:3;715:55;793:4;788:3;784:14;777:21;;821:4;816:3;812:14;805:21;;652:181;642:1;639;635:9;630:14;;595:238;;;599:14;228:611;;;;;;;;879:735;;1015:3;1008:4;1000:6;996:17;992:27;985:35;982:2;;;1033:1;1030;1023:12;982:2;1070:6;1057:20;1092:99;1107:83;1183:6;1107:83;;;1092:99;;;1083:108;;1208:5;1233:6;1226:5;1219:21;1263:4;1255:6;1251:17;1241:27;;1285:4;1280:3;1276:14;1269:21;;1338:6;1371:1;1356:252;1381:6;1378:1;1375:13;1356:252;;;1464:3;1451:17;1443:6;1439:30;1488:56;1540:3;1528:10;1488:56;;;1483:3;1476:69;1568:4;1563:3;1559:14;1552:21;;1596:4;1591:3;1587:14;1580:21;;1413:195;1403:1;1400;1396:9;1391:14;;1356:252;;;1360:14;975:639;;;;;;;;1640:707;;1757:3;1750:4;1742:6;1738:17;1734:27;1727:35;1724:2;;;1775:1;1772;1765:12;1724:2;1812:6;1799:20;1834:80;1849:64;1906:6;1849:64;;;1834:80;;;1825:89;;1931:5;1956:6;1949:5;1942:21;1986:4;1978:6;1974:17;1964:27;;2008:4;2003:3;1999:14;1992:21;;2061:6;2108:3;2100:4;2092:6;2088:17;2083:3;2079:27;2076:36;2073:2;;;2125:1;2122;2115:12;2073:2;2150:1;2135:206;2160:6;2157:1;2154:13;2135:206;;;2218:3;2240:37;2273:3;2261:10;2240:37;;;2235:3;2228:50;2301:4;2296:3;2292:14;2285:21;;2329:4;2324:3;2320:14;2313:21;;2192:149;2182:1;2179;2175:9;2170:14;;2135:206;;;2139:14;1717:630;;;;;;;;2355:112;;2419:43;2454:6;2441:20;2419:43;;;2410:52;;2404:63;;;;;2474:118;;2541:46;2579:6;2566:20;2541:46;;;2532:55;;2526:66;;;;;2599:116;;2665:45;2702:6;2689:20;2665:45;;;2656:54;;2650:65;;;;;2722:120;;2799:38;2829:6;2823:13;2799:38;;;2790:47;;2784:58;;;;;2863:335;;;2977:3;2970:4;2962:6;2958:17;2954:27;2947:35;2944:2;;;2995:1;2992;2985:12;2944:2;3028:6;3015:20;3005:30;;3055:18;3047:6;3044:30;3041:2;;;3087:1;3084;3077:12;3041:2;3121:4;3113:6;3109:17;3097:29;;3171:3;3164;3156:6;3152:16;3142:8;3138:31;3135:40;3132:2;;;3188:1;3185;3178:12;3132:2;2937:261;;;;;;3207:432;;3304:3;3297:4;3289:6;3285:17;3281:27;3274:35;3271:2;;;3322:1;3319;3312:12;3271:2;3359:6;3346:20;3381:60;3396:44;3433:6;3396:44;;;3381:60;;;3372:69;;3461:6;3454:5;3447:21;3497:4;3489:6;3485:17;3530:4;3523:5;3519:16;3565:3;3556:6;3551:3;3547:16;3544:25;3541:2;;;3582:1;3579;3572:12;3541:2;3592:41;3626:6;3621:3;3616;3592:41;;;3264:375;;;;;;;;3648:440;;3749:3;3742:4;3734:6;3730:17;3726:27;3719:35;3716:2;;;3767:1;3764;3757:12;3716:2;3804:6;3791:20;3826:64;3841:48;3882:6;3841:48;;;3826:64;;;3817:73;;3910:6;3903:5;3896:21;3946:4;3938:6;3934:17;3979:4;3972:5;3968:16;4014:3;4005:6;4000:3;3996:16;3993:25;3990:2;;;4031:1;4028;4021:12;3990:2;4041:41;4075:6;4070:3;4065;4041:41;;;3709:379;;;;;;;;4136:810;;4254:4;4242:9;4237:3;4233:19;4229:30;4226:2;;;4272:1;4269;4262:12;4226:2;4290:20;4305:4;4290:20;;;4281:29;;4378:1;4409:49;4454:3;4445:6;4434:9;4430:22;4409:49;;;4403:3;4396:5;4392:15;4385:74;4320:150;4538:2;4571:49;4616:3;4607:6;4596:9;4592:22;4571:49;;;4564:4;4557:5;4553:16;4546:75;4480:152;4690:2;4723:49;4768:3;4759:6;4748:9;4744:22;4723:49;;;4716:4;4709:5;4705:16;4698:75;4642:142;4842:2;4875:49;4920:3;4911:6;4900:9;4896:22;4875:49;;;4868:4;4861:5;4857:16;4850:75;4794:142;4220:726;;;;;4981:2205;;5089:5;5077:9;5072:3;5068:19;5064:31;5061:2;;;5108:1;5105;5098:12;5061:2;5126:21;5141:5;5126:21;;;5117:30;;5205:1;5236:49;5281:3;5272:6;5261:9;5257:22;5236:49;;;5230:3;5223:5;5219:15;5212:74;5157:140;5355:2;5388:49;5433:3;5424:6;5413:9;5409:22;5388:49;;;5381:4;5374:5;5370:16;5363:75;5307:142;5514:2;5547:49;5592:3;5583:6;5572:9;5568:22;5547:49;;;5540:4;5533:5;5529:16;5522:75;5459:149;5667:2;5700:49;5745:3;5736:6;5725:9;5721:22;5700:49;;;5693:4;5686:5;5682:16;5675:75;5618:143;5823:3;5857:49;5902:3;5893:6;5882:9;5878:22;5857:49;;;5850:4;5843:5;5839:16;5832:75;5771:147;5980:3;6014:49;6059:3;6050:6;6039:9;6035:22;6014:49;;;6007:4;6000:5;5996:16;5989:75;5928:147;6129:3;6163:49;6208:3;6199:6;6188:9;6184:22;6163:49;;;6156:4;6149:5;6145:16;6138:75;6085:139;6278:3;6312:49;6357:3;6348:6;6337:9;6333:22;6312:49;;;6305:4;6298:5;6294:16;6287:75;6234:139;6440:3;6475:49;6520:3;6511:6;6500:9;6496:22;6475:49;;;6467:5;6460;6456:17;6449:76;6383:153;6586:3;6621:49;6666:3;6657:6;6646:9;6642:22;6621:49;;;6613:5;6606;6602:17;6595:76;6546:136;6770:3;6759:9;6755:19;6742:33;6795:18;6787:6;6784:30;6781:2;;;6827:1;6824;6817:12;6781:2;6863:54;6913:3;6904:6;6893:9;6889:22;6863:54;;;6855:5;6848;6844:17;6837:81;6692:237;7017:3;7006:9;7002:19;6989:33;7042:18;7034:6;7031:30;7028:2;;;7074:1;7071;7064:12;7028:2;7110:54;7160:3;7151:6;7140:9;7136:22;7110:54;;;7102:5;7095;7091:17;7084:81;6939:237;5055:2131;;;;;7221:2209;;7333:5;7321:9;7316:3;7312:19;7308:31;7305:2;;;7352:1;7349;7342:12;7305:2;7370:21;7385:5;7370:21;;;7361:30;;7449:1;7480:49;7525:3;7516:6;7505:9;7501:22;7480:49;;;7474:3;7467:5;7463:15;7456:74;7401:140;7599:2;7632:49;7677:3;7668:6;7657:9;7653:22;7632:49;;;7625:4;7618:5;7614:16;7607:75;7551:142;7758:2;7791:49;7836:3;7827:6;7816:9;7812:22;7791:49;;;7784:4;7777:5;7773:16;7766:75;7703:149;7911:2;7944:49;7989:3;7980:6;7969:9;7965:22;7944:49;;;7937:4;7930:5;7926:16;7919:75;7862:143;8067:3;8101:49;8146:3;8137:6;8126:9;8122:22;8101:49;;;8094:4;8087:5;8083:16;8076:75;8015:147;8224:3;8258:49;8303:3;8294:6;8283:9;8279:22;8258:49;;;8251:4;8244:5;8240:16;8233:75;8172:147;8373:3;8407:49;8452:3;8443:6;8432:9;8428:22;8407:49;;;8400:4;8393:5;8389:16;8382:75;8329:139;8522:3;8556:49;8601:3;8592:6;8581:9;8577:22;8556:49;;;8549:4;8542:5;8538:16;8531:75;8478:139;8684:3;8719:49;8764:3;8755:6;8744:9;8740:22;8719:49;;;8711:5;8704;8700:17;8693:76;8627:153;8830:3;8865:49;8910:3;8901:6;8890:9;8886:22;8865:49;;;8857:5;8850;8846:17;8839:76;8790:136;9014:3;9003:9;8999:19;8986:33;9039:18;9031:6;9028:30;9025:2;;;9071:1;9068;9061:12;9025:2;9107:54;9157:3;9148:6;9137:9;9133:22;9107:54;;;9099:5;9092;9088:17;9081:81;8936:237;9261:3;9250:9;9246:19;9233:33;9286:18;9278:6;9275:30;9272:2;;;9318:1;9315;9308:12;9272:2;9354:54;9404:3;9395:6;9384:9;9380:22;9354:54;;;9346:5;9339;9335:17;9328:81;9183:237;7299:2131;;;;;9437:118;;9504:46;9542:6;9529:20;9504:46;;;9495:55;;9489:66;;;;;9562:241;;9666:2;9654:9;9645:7;9641:23;9637:32;9634:2;;;9682:1;9679;9672:12;9634:2;9717:1;9734:53;9779:7;9770:6;9759:9;9755:22;9734:53;;;9724:63;;9696:97;9628:175;;;;;9810:366;;;9931:2;9919:9;9910:7;9906:23;9902:32;9899:2;;;9947:1;9944;9937:12;9899:2;9982:1;9999:53;10044:7;10035:6;10024:9;10020:22;9999:53;;;9989:63;;9961:97;10089:2;10107:53;10152:7;10143:6;10132:9;10128:22;10107:53;;;10097:63;;10068:98;9893:283;;;;;;10183:360;;;10301:2;10289:9;10280:7;10276:23;10272:32;10269:2;;;10317:1;10314;10307:12;10269:2;10352:1;10369:53;10414:7;10405:6;10394:9;10390:22;10369:53;;;10359:63;;10331:97;10459:2;10477:50;10519:7;10510:6;10499:9;10495:22;10477:50;;;10467:60;;10438:95;10263:280;;;;;;10550:415;;10698:2;10686:9;10677:7;10673:23;10669:32;10666:2;;;10714:1;10711;10704:12;10666:2;10777:1;10766:9;10762:17;10749:31;10800:18;10792:6;10789:30;10786:2;;;10832:1;10829;10822:12;10786:2;10852:97;10941:7;10932:6;10921:9;10917:22;10852:97;;;10842:107;;10728:227;10660:305;;;;;10972:947;;;;11209:2;11197:9;11188:7;11184:23;11180:32;11177:2;;;11225:1;11222;11215:12;11177:2;11288:1;11277:9;11273:17;11260:31;11311:18;11303:6;11300:30;11297:2;;;11343:1;11340;11333:12;11297:2;11363:97;11452:7;11443:6;11432:9;11428:22;11363:97;;;11353:107;;11239:227;11525:2;11514:9;11510:18;11497:32;11549:18;11541:6;11538:30;11535:2;;;11581:1;11578;11571:12;11535:2;11601:78;11671:7;11662:6;11651:9;11647:22;11601:78;;;11591:88;;11476:209;11744:2;11733:9;11729:18;11716:32;11768:18;11760:6;11757:30;11754:2;;;11800:1;11797;11790:12;11754:2;11820:83;11895:7;11886:6;11875:9;11871:22;11820:83;;;11810:93;;11695:214;11171:748;;;;;;11926:811;;;;12138:2;12126:9;12117:7;12113:23;12109:32;12106:2;;;12154:1;12151;12144:12;12106:2;12217:1;12206:9;12202:17;12189:31;12240:18;12232:6;12229:30;12226:2;;;12272:1;12269;12262:12;12226:2;12292:97;12381:7;12372:6;12361:9;12357:22;12292:97;;;12282:107;;12168:227;12426:2;12444:53;12489:7;12480:6;12469:9;12465:22;12444:53;;;12434:63;;12405:98;12562:2;12551:9;12547:18;12534:32;12586:18;12578:6;12575:30;12572:2;;;12618:1;12615;12608:12;12572:2;12638:83;12713:7;12704:6;12693:9;12689:22;12638:83;;;12628:93;;12513:214;12100:637;;;;;;12744:241;;12848:2;12836:9;12827:7;12823:23;12819:32;12816:2;;;12864:1;12861;12854:12;12816:2;12899:1;12916:53;12961:7;12952:6;12941:9;12937:22;12916:53;;;12906:63;;12878:97;12810:175;;;;;12992:366;;;13113:2;13101:9;13092:7;13088:23;13084:32;13081:2;;;13129:1;13126;13119:12;13081:2;13164:1;13181:53;13226:7;13217:6;13206:9;13202:22;13181:53;;;13171:63;;13143:97;13271:2;13289:53;13334:7;13325:6;13314:9;13310:22;13289:53;;;13279:63;;13250:98;13075:283;;;;;;13365:615;;;;;13522:2;13510:9;13501:7;13497:23;13493:32;13490:2;;;13538:1;13535;13528:12;13490:2;13573:1;13590:53;13635:7;13626:6;13615:9;13611:22;13590:53;;;13580:63;;13552:97;13680:2;13698:53;13743:7;13734:6;13723:9;13719:22;13698:53;;;13688:63;;13659:98;13816:2;13805:9;13801:18;13788:32;13840:18;13832:6;13829:30;13826:2;;;13872:1;13869;13862:12;13826:2;13900:64;13956:7;13947:6;13936:9;13932:22;13900:64;;;13882:82;;;;13767:203;13484:496;;;;;;;;13987:595;;;;14134:2;14122:9;14113:7;14109:23;14105:32;14102:2;;;14150:1;14147;14140:12;14102:2;14185:1;14202:53;14247:7;14238:6;14227:9;14223:22;14202:53;;;14192:63;;14164:97;14292:2;14310:53;14355:7;14346:6;14335:9;14331:22;14310:53;;;14300:63;;14271:98;14428:2;14417:9;14413:18;14400:32;14452:18;14444:6;14441:30;14438:2;;;14484:1;14481;14474:12;14438:2;14504:62;14558:7;14549:6;14538:9;14534:22;14504:62;;;14494:72;;14379:193;14096:486;;;;;;14589:239;;14692:2;14680:9;14671:7;14667:23;14663:32;14660:2;;;14708:1;14705;14698:12;14660:2;14743:1;14760:52;14804:7;14795:6;14784:9;14780:22;14760:52;;;14750:62;;14722:96;14654:174;;;;;14835:261;;14949:2;14937:9;14928:7;14924:23;14920:32;14917:2;;;14965:1;14962;14955:12;14917:2;15000:1;15017:63;15072:7;15063:6;15052:9;15048:22;15017:63;;;15007:73;;14979:107;14911:185;;;;;15103:484;;;15282:3;15270:9;15261:7;15257:23;15253:33;15250:2;;;15299:1;15296;15289:12;15250:2;15334:1;15351:82;15425:7;15416:6;15405:9;15401:22;15351:82;;;15341:92;;15313:126;15470:3;15489:82;15563:7;15554:6;15543:9;15539:22;15489:82;;;15479:92;;15449:128;15244:343;;;;;;15594:373;;15721:2;15709:9;15700:7;15696:23;15692:32;15689:2;;;15737:1;15734;15727:12;15689:2;15800:1;15789:9;15785:17;15772:31;15823:18;15815:6;15812:30;15809:2;;;15855:1;15852;15845:12;15809:2;15875:76;15943:7;15934:6;15923:9;15919:22;15875:76;;;15865:86;;15751:206;15683:284;;;;;15974:933;;;;;;16198:3;16186:9;16177:7;16173:23;16169:33;16166:2;;;16215:1;16212;16205:12;16166:2;16278:1;16267:9;16263:17;16250:31;16301:18;16293:6;16290:30;16287:2;;;16333:1;16330;16323:12;16287:2;16353:76;16421:7;16412:6;16401:9;16397:22;16353:76;;;16343:86;;16229:206;16466:2;16484:53;16529:7;16520:6;16509:9;16505:22;16484:53;;;16474:63;;16445:98;16574:2;16592:53;16637:7;16628:6;16617:9;16613:22;16592:53;;;16582:63;;16553:98;16682:2;16700:53;16745:7;16736:6;16725:9;16721:22;16700:53;;;16690:63;;16661:98;16790:3;16809:82;16883:7;16874:6;16863:9;16859:22;16809:82;;;16799:92;;16769:128;16160:747;;;;;;;;;16914:1089;;;;;17133:3;17121:9;17112:7;17108:23;17104:33;17101:2;;;17150:1;17147;17140:12;17101:2;17213:1;17202:9;17198:17;17185:31;17236:18;17228:6;17225:30;17222:2;;;17268:1;17265;17258:12;17222:2;17288:76;17356:7;17347:6;17336:9;17332:22;17288:76;;;17278:86;;17164:206;17429:2;17418:9;17414:18;17401:32;17453:18;17445:6;17442:30;17439:2;;;17485:1;17482;17475:12;17439:2;17505:76;17573:7;17564:6;17553:9;17549:22;17505:76;;;17495:86;;17380:207;17646:2;17635:9;17631:18;17618:32;17670:18;17662:6;17659:30;17656:2;;;17702:1;17699;17692:12;17656:2;17722:62;17776:7;17767:6;17756:9;17752:22;17722:62;;;17712:72;;17597:193;17849:2;17838:9;17834:18;17821:32;17873:18;17865:6;17862:30;17859:2;;;17905:1;17902;17895:12;17859:2;17925:62;17979:7;17970:6;17959:9;17955:22;17925:62;;;17915:72;;17800:193;17095:908;;;;;;;;18010:498;;;18154:2;18142:9;18133:7;18129:23;18125:32;18122:2;;;18170:1;18167;18160:12;18122:2;18233:1;18222:9;18218:17;18205:31;18256:18;18248:6;18245:30;18242:2;;;18288:1;18285;18278:12;18242:2;18308:76;18376:7;18367:6;18356:9;18352:22;18308:76;;;18298:86;;18184:206;18421:2;18439:53;18484:7;18475:6;18464:9;18460:22;18439:53;;;18429:63;;18400:98;18116:392;;;;;;18515:727;;;;18685:2;18673:9;18664:7;18660:23;18656:32;18653:2;;;18701:1;18698;18691:12;18653:2;18764:1;18753:9;18749:17;18736:31;18787:18;18779:6;18776:30;18773:2;;;18819:1;18816;18809:12;18773:2;18839:76;18907:7;18898:6;18887:9;18883:22;18839:76;;;18829:86;;18715:206;18952:2;18970:53;19015:7;19006:6;18995:9;18991:22;18970:53;;;18960:63;;18931:98;19088:2;19077:9;19073:18;19060:32;19112:18;19104:6;19101:30;19098:2;;;19144:1;19141;19134:12;19098:2;19164:62;19218:7;19209:6;19198:9;19194:22;19164:62;;;19154:72;;19039:193;18647:595;;;;;;19249:241;;19353:2;19341:9;19332:7;19328:23;19324:32;19321:2;;;19369:1;19366;19359:12;19321:2;19404:1;19421:53;19466:7;19457:6;19446:9;19442:22;19421:53;;;19411:63;;19383:97;19315:175;;;;;19497:865;;;;;;;19690:3;19678:9;19669:7;19665:23;19661:33;19658:2;;;19707:1;19704;19697:12;19658:2;19742:1;19759:53;19804:7;19795:6;19784:9;19780:22;19759:53;;;19749:63;;19721:97;19849:2;19867:53;19912:7;19903:6;19892:9;19888:22;19867:53;;;19857:63;;19828:98;19985:2;19974:9;19970:18;19957:32;20009:18;20001:6;19998:30;19995:2;;;20041:1;20038;20031:12;19995:2;20069:64;20125:7;20116:6;20105:9;20101:22;20069:64;;;20051:82;;;;19936:203;20198:2;20187:9;20183:18;20170:32;20222:18;20214:6;20211:30;20208:2;;;20254:1;20251;20244:12;20208:2;20282:64;20338:7;20329:6;20318:9;20314:22;20282:64;;;20264:82;;;;20149:203;19652:710;;;;;;;;;20369:491;;;;20507:2;20495:9;20486:7;20482:23;20478:32;20475:2;;;20523:1;20520;20513:12;20475:2;20558:1;20575:53;20620:7;20611:6;20600:9;20596:22;20575:53;;;20565:63;;20537:97;20665:2;20683:53;20728:7;20719:6;20708:9;20704:22;20683:53;;;20673:63;;20644:98;20773:2;20791:53;20836:7;20827:6;20816:9;20812:22;20791:53;;;20781:63;;20752:98;20469:391;;;;;;20867:110;20940:31;20965:5;20940:31;;;20935:3;20928:44;20922:55;;;21051:755;;21232:77;21303:5;21232:77;;;21327:6;21322:3;21315:19;21351:4;21346:3;21342:14;21335:21;;21396:79;21469:5;21396:79;;;21496:1;21481:303;21506:6;21503:1;21500:13;21481:303;;;21546:103;21645:3;21636:6;21630:13;21546:103;;;21666:83;21742:6;21666:83;;;21656:93;;21772:4;21767:3;21763:14;21756:21;;21528:1;21525;21521:9;21516:14;;21481:303;;;21485:14;21797:3;21790:10;;21211:595;;;;;;;21814:101;21881:28;21903:5;21881:28;;;21876:3;21869:41;21863:52;;;21922:110;21995:31;22020:5;21995:31;;;21990:3;21983:44;21977:55;;;22039:107;22110:30;22134:5;22110:30;;;22105:3;22098:43;22092:54;;;22153:297;;22253:38;22285:5;22253:38;;;22308:6;22303:3;22296:19;22320:63;22376:6;22369:4;22364:3;22360:14;22353:4;22346:5;22342:16;22320:63;;;22415:29;22437:6;22415:29;;;22408:4;22403:3;22399:14;22395:50;22388:57;;22233:217;;;;;;22457:289;;22553:34;22581:5;22553:34;;;22604:6;22599:3;22592:19;22616:63;22672:6;22665:4;22660:3;22656:14;22649:4;22642:5;22638:16;22616:63;;;22711:29;22733:6;22711:29;;;22704:4;22699:3;22695:14;22691:50;22684:57;;22533:213;;;;;;22753:156;22846:57;22897:5;22846:57;;;22841:3;22834:70;22828:81;;;22916:292;;23014:35;23043:5;23014:35;;;23066:6;23061:3;23054:19;23078:63;23134:6;23127:4;23122:3;23118:14;23111:4;23104:5;23100:16;23078:63;;;23173:29;23195:6;23173:29;;;23166:4;23161:3;23157:14;23153:50;23146:57;;22994:214;;;;;;23216:296;;23371:2;23366:3;23359:15;23408:66;23403:2;23398:3;23394:12;23387:88;23503:2;23498:3;23494:12;23487:19;;23352:160;;;;23521:296;;23676:2;23671:3;23664:15;23713:66;23708:2;23703:3;23699:12;23692:88;23808:2;23803:3;23799:12;23792:19;;23657:160;;;;23826:296;;23981:2;23976:3;23969:15;24018:66;24013:2;24008:3;24004:12;23997:88;24113:2;24108:3;24104:12;24097:19;;23962:160;;;;24131:296;;24286:2;24281:3;24274:15;24323:66;24318:2;24313:3;24309:12;24302:88;24418:2;24413:3;24409:12;24402:19;;24267:160;;;;24436:296;;24591:2;24586:3;24579:15;24628:66;24623:2;24618:3;24614:12;24607:88;24723:2;24718:3;24714:12;24707:19;;24572:160;;;;24741:397;;24896:2;24891:3;24884:15;24933:66;24928:2;24923:3;24919:12;24912:88;25034:66;25029:2;25024:3;25020:12;25013:88;25129:2;25124:3;25120:12;25113:19;;24877:261;;;;25147:296;;25302:2;25297:3;25290:15;25339:66;25334:2;25329:3;25325:12;25318:88;25434:2;25429:3;25425:12;25418:19;;25283:160;;;;25452:296;;25607:2;25602:3;25595:15;25644:66;25639:2;25634:3;25630:12;25623:88;25739:2;25734:3;25730:12;25723:19;;25588:160;;;;25757:296;;25912:2;25907:3;25900:15;25949:66;25944:2;25939:3;25935:12;25928:88;26044:2;26039:3;26035:12;26028:19;;25893:160;;;;26062:296;;26217:2;26212:3;26205:15;26254:66;26249:2;26244:3;26240:12;26233:88;26349:2;26344:3;26340:12;26333:19;;26198:160;;;;26367:296;;26522:2;26517:3;26510:15;26559:66;26554:2;26549:3;26545:12;26538:88;26654:2;26649:3;26645:12;26638:19;;26503:160;;;;26672:296;;26827:2;26822:3;26815:15;26864:66;26859:2;26854:3;26850:12;26843:88;26959:2;26954:3;26950:12;26943:19;;26808:160;;;;26977:296;;27132:2;27127:3;27120:15;27169:66;27164:2;27159:3;27155:12;27148:88;27264:2;27259:3;27255:12;27248:19;;27113:160;;;;27282:296;;27437:2;27432:3;27425:15;27474:66;27469:2;27464:3;27460:12;27453:88;27569:2;27564:3;27560:12;27553:19;;27418:160;;;;27587:296;;27742:2;27737:3;27730:15;27779:66;27774:2;27769:3;27765:12;27758:88;27874:2;27869:3;27865:12;27858:19;;27723:160;;;;27892:296;;28047:2;28042:3;28035:15;28084:66;28079:2;28074:3;28070:12;28063:88;28179:2;28174:3;28170:12;28163:19;;28028:160;;;;28197:296;;28352:2;28347:3;28340:15;28389:66;28384:2;28379:3;28375:12;28368:88;28484:2;28479:3;28475:12;28468:19;;28333:160;;;;28502:296;;28657:2;28652:3;28645:15;28694:66;28689:2;28684:3;28680:12;28673:88;28789:2;28784:3;28780:12;28773:19;;28638:160;;;;28807:397;;28962:2;28957:3;28950:15;28999:66;28994:2;28989:3;28985:12;28978:88;29100:66;29095:2;29090:3;29086:12;29079:88;29195:2;29190:3;29186:12;29179:19;;28943:261;;;;29213:296;;29368:2;29363:3;29356:15;29405:66;29400:2;29395:3;29391:12;29384:88;29500:2;29495:3;29491:12;29484:19;;29349:160;;;;29518:296;;29673:2;29668:3;29661:15;29710:66;29705:2;29700:3;29696:12;29689:88;29805:2;29800:3;29796:12;29789:19;;29654:160;;;;29823:296;;29978:2;29973:3;29966:15;30015:66;30010:2;30005:3;30001:12;29994:88;30110:2;30105:3;30101:12;30094:19;;29959:160;;;;30128:296;;30283:2;30278:3;30271:15;30320:66;30315:2;30310:3;30306:12;30299:88;30415:2;30410:3;30406:12;30399:19;;30264:160;;;;30433:296;;30588:2;30583:3;30576:15;30625:66;30620:2;30615:3;30611:12;30604:88;30720:2;30715:3;30711:12;30704:19;;30569:160;;;;30738:296;;30893:2;30888:3;30881:15;30930:66;30925:2;30920:3;30916:12;30909:88;31025:2;31020:3;31016:12;31009:19;;30874:160;;;;31043:296;;31198:2;31193:3;31186:15;31235:66;31230:2;31225:3;31221:12;31214:88;31330:2;31325:3;31321:12;31314:19;;31179:160;;;;31348:296;;31503:2;31498:3;31491:15;31540:66;31535:2;31530:3;31526:12;31519:88;31635:2;31630:3;31626:12;31619:19;;31484:160;;;;31653:397;;31808:2;31803:3;31796:15;31845:66;31840:2;31835:3;31831:12;31824:88;31946:66;31941:2;31936:3;31932:12;31925:88;32041:2;32036:3;32032:12;32025:19;;31789:261;;;;32059:296;;32214:2;32209:3;32202:15;32251:66;32246:2;32241:3;32237:12;32230:88;32346:2;32341:3;32337:12;32330:19;;32195:160;;;;32364:296;;32519:2;32514:3;32507:15;32556:66;32551:2;32546:3;32542:12;32535:88;32651:2;32646:3;32642:12;32635:19;;32500:160;;;;32669:296;;32824:2;32819:3;32812:15;32861:66;32856:2;32851:3;32847:12;32840:88;32956:2;32951:3;32947:12;32940:19;;32805:160;;;;32974:296;;33129:2;33124:3;33117:15;33166:66;33161:2;33156:3;33152:12;33145:88;33261:2;33256:3;33252:12;33245:19;;33110:160;;;;33279:296;;33434:2;33429:3;33422:15;33471:66;33466:2;33461:3;33457:12;33450:88;33566:2;33561:3;33557:12;33550:19;;33415:160;;;;33660:888;33801:4;33796:3;33792:14;33905:3;33898:5;33894:15;33888:22;33922:61;33978:3;33973;33969:13;33956:11;33922:61;;;33821:174;34089:4;34082:5;34078:16;34072:23;34107:62;34163:4;34158:3;34154:14;34141:11;34107:62;;;34005:176;34265:4;34258:5;34254:16;34248:23;34283:62;34339:4;34334:3;34330:14;34317:11;34283:62;;;34191:166;34441:4;34434:5;34430:16;34424:23;34459:62;34515:4;34510:3;34506:14;34493:11;34459:62;;;34367:166;33774:774;;;;34632:884;34769:4;34764:3;34760:14;34873:3;34866:5;34862:15;34856:22;34890:61;34946:3;34941;34937:13;34924:11;34890:61;;;34789:174;35057:4;35050:5;35046:16;35040:23;35075:62;35131:4;35126:3;35122:14;35109:11;35075:62;;;34973:176;35233:4;35226:5;35222:16;35216:23;35251:62;35307:4;35302:3;35298:14;35285:11;35251:62;;;35159:166;35409:4;35402:5;35398:16;35392:23;35427:62;35483:4;35478:3;35474:14;35461:11;35427:62;;;35335:166;34742:774;;;;35614:815;35769:5;35764:3;35760:15;35856:3;35849:5;35845:15;35839:22;35873:115;35983:3;35978;35974:13;35961:11;35873:115;;;35790:210;36077:4;36070:5;36066:16;36060:23;36095:116;36205:4;36200:3;36196:14;36183:11;36095:116;;;36010:213;36321:4;36314:5;36310:16;36304:23;36339:63;36395:5;36390:3;36386:15;36373:11;36339:63;;;36233:181;35742:687;;;;36497:695;36634:4;36629:3;36625:14;36727:3;36720:5;36716:15;36710:22;36744:57;36796:3;36791;36787:13;36774:11;36744:57;;;36654:159;36894:4;36887:5;36883:16;36877:23;36912:62;36968:4;36963:3;36959:14;36946:11;36912:62;;;36823:163;37085:4;37078:5;37074:16;37068:23;37103:62;37159:4;37154:3;37150:14;37137:11;37103:62;;;36996:181;36607:585;;;;37260:691;37393:4;37388:3;37384:14;37486:3;37479:5;37475:15;37469:22;37503:57;37555:3;37550;37546:13;37533:11;37503:57;;;37413:159;37653:4;37646:5;37642:16;37636:23;37671:62;37727:4;37722:3;37718:14;37705:11;37671:62;;;37582:163;37844:4;37837:5;37833:16;37827:23;37862:62;37918:4;37913:3;37909:14;37896:11;37862:62;;;37755:181;37366:585;;;;37958:110;38031:31;38056:5;38031:31;;;38026:3;38019:44;38013:55;;;38075:104;38144:29;38167:5;38144:29;;;38139:3;38132:42;38126:53;;;38186:193;;38294:2;38283:9;38279:18;38271:26;;38308:61;38366:1;38355:9;38351:17;38342:6;38308:61;;;38265:114;;;;;38386:1057;;38718:3;38707:9;38703:19;38695:27;;38733:61;38791:1;38780:9;38776:17;38767:6;38733:61;;;38805:62;38863:2;38852:9;38848:18;38839:6;38805:62;;;38878;38936:2;38925:9;38921:18;38912:6;38878:62;;;38951;39009:2;38998:9;38994:18;38985:6;38951:62;;;39024:63;39082:3;39071:9;39067:19;39058:6;39024:63;;;39098;39156:3;39145:9;39141:19;39132:6;39098:63;;;39210:9;39204:4;39200:20;39194:3;39183:9;39179:19;39172:49;39235:62;39292:4;39283:6;39235:62;;;39227:70;;39346:9;39340:4;39336:20;39330:3;39319:9;39315:19;39308:49;39371:62;39428:4;39419:6;39371:62;;;39363:70;;38689:754;;;;;;;;;;;;39450:547;;39642:2;39631:9;39627:18;39619:26;;39656:61;39714:1;39703:9;39699:17;39690:6;39656:61;;;39765:9;39759:4;39755:20;39750:2;39739:9;39735:18;39728:48;39790:62;39847:4;39838:6;39790:62;;;39782:70;;39900:9;39894:4;39890:20;39885:2;39874:9;39870:18;39863:48;39925:62;39982:4;39973:6;39925:62;;;39917:70;;39613:384;;;;;;;40004:433;;40208:2;40197:9;40193:18;40185:26;;40258:9;40252:4;40248:20;40244:1;40233:9;40229:17;40222:47;40283:144;40422:4;40413:6;40283:144;;;40275:152;;40179:258;;;;;40444:181;;40546:2;40535:9;40531:18;40523:26;;40560:55;40612:1;40601:9;40597:17;40588:6;40560:55;;;40517:108;;;;;40632:193;;40740:2;40729:9;40725:18;40717:26;;40754:61;40812:1;40801:9;40797:17;40788:6;40754:61;;;40711:114;;;;;40832:479;;41014:2;41003:9;40999:18;40991:26;;41028:61;41086:1;41075:9;41071:17;41062:6;41028:61;;;41100:62;41158:2;41147:9;41143:18;41134:6;41100:62;;;41210:9;41204:4;41200:20;41195:2;41184:9;41180:18;41173:48;41235:66;41296:4;41287:6;41235:66;;;41227:74;;40985:326;;;;;;;41318:378;;41472:2;41461:9;41457:18;41449:26;;41486:61;41544:1;41533:9;41529:17;41520:6;41486:61;;;41595:9;41589:4;41585:20;41580:2;41569:9;41565:18;41558:48;41620:66;41681:4;41672:6;41620:66;;;41612:74;;41443:253;;;;;;41703:489;;41891:3;41880:9;41876:19;41868:27;;41906:61;41964:1;41953:9;41949:17;41940:6;41906:61;;;41978:58;42032:2;42021:9;42017:18;42008:6;41978:58;;;42047:62;42105:2;42094:9;42090:18;42081:6;42047:62;;;42120;42178:2;42167:9;42163:18;42154:6;42120:62;;;41862:330;;;;;;;;42199:290;;42333:2;42322:9;42318:18;42310:26;;42347:59;42403:1;42392:9;42388:17;42379:6;42347:59;;;42417:62;42475:2;42464:9;42460:18;42451:6;42417:62;;;42304:185;;;;;;42496:269;;42618:2;42607:9;42603:18;42595:26;;42668:9;42662:4;42658:20;42654:1;42643:9;42639:17;42632:47;42693:62;42750:4;42741:6;42693:62;;;42685:70;;42589:176;;;;;42772:233;;42900:2;42889:9;42885:18;42877:26;;42914:81;42992:1;42981:9;42977:17;42968:6;42914:81;;;42871:134;;;;;43012:273;;43136:2;43125:9;43121:18;43113:26;;43186:9;43180:4;43176:20;43172:1;43161:9;43157:17;43150:47;43211:64;43270:4;43261:6;43211:64;;;43203:72;;43107:178;;;;;43292:387;;43473:2;43462:9;43458:18;43450:26;;43523:9;43517:4;43513:20;43509:1;43498:9;43494:17;43487:47;43548:121;43664:4;43548:121;;;43540:129;;43444:235;;;;43686:387;;43867:2;43856:9;43852:18;43844:26;;43917:9;43911:4;43907:20;43903:1;43892:9;43888:17;43881:47;43942:121;44058:4;43942:121;;;43934:129;;43838:235;;;;44080:387;;44261:2;44250:9;44246:18;44238:26;;44311:9;44305:4;44301:20;44297:1;44286:9;44282:17;44275:47;44336:121;44452:4;44336:121;;;44328:129;;44232:235;;;;44474:387;;44655:2;44644:9;44640:18;44632:26;;44705:9;44699:4;44695:20;44691:1;44680:9;44676:17;44669:47;44730:121;44846:4;44730:121;;;44722:129;;44626:235;;;;44868:387;;45049:2;45038:9;45034:18;45026:26;;45099:9;45093:4;45089:20;45085:1;45074:9;45070:17;45063:47;45124:121;45240:4;45124:121;;;45116:129;;45020:235;;;;45262:387;;45443:2;45432:9;45428:18;45420:26;;45493:9;45487:4;45483:20;45479:1;45468:9;45464:17;45457:47;45518:121;45634:4;45518:121;;;45510:129;;45414:235;;;;45656:387;;45837:2;45826:9;45822:18;45814:26;;45887:9;45881:4;45877:20;45873:1;45862:9;45858:17;45851:47;45912:121;46028:4;45912:121;;;45904:129;;45808:235;;;;46050:387;;46231:2;46220:9;46216:18;46208:26;;46281:9;46275:4;46271:20;46267:1;46256:9;46252:17;46245:47;46306:121;46422:4;46306:121;;;46298:129;;46202:235;;;;46444:387;;46625:2;46614:9;46610:18;46602:26;;46675:9;46669:4;46665:20;46661:1;46650:9;46646:17;46639:47;46700:121;46816:4;46700:121;;;46692:129;;46596:235;;;;46838:387;;47019:2;47008:9;47004:18;46996:26;;47069:9;47063:4;47059:20;47055:1;47044:9;47040:17;47033:47;47094:121;47210:4;47094:121;;;47086:129;;46990:235;;;;47232:387;;47413:2;47402:9;47398:18;47390:26;;47463:9;47457:4;47453:20;47449:1;47438:9;47434:17;47427:47;47488:121;47604:4;47488:121;;;47480:129;;47384:235;;;;47626:387;;47807:2;47796:9;47792:18;47784:26;;47857:9;47851:4;47847:20;47843:1;47832:9;47828:17;47821:47;47882:121;47998:4;47882:121;;;47874:129;;47778:235;;;;48020:387;;48201:2;48190:9;48186:18;48178:26;;48251:9;48245:4;48241:20;48237:1;48226:9;48222:17;48215:47;48276:121;48392:4;48276:121;;;48268:129;;48172:235;;;;48414:387;;48595:2;48584:9;48580:18;48572:26;;48645:9;48639:4;48635:20;48631:1;48620:9;48616:17;48609:47;48670:121;48786:4;48670:121;;;48662:129;;48566:235;;;;48808:387;;48989:2;48978:9;48974:18;48966:26;;49039:9;49033:4;49029:20;49025:1;49014:9;49010:17;49003:47;49064:121;49180:4;49064:121;;;49056:129;;48960:235;;;;49202:387;;49383:2;49372:9;49368:18;49360:26;;49433:9;49427:4;49423:20;49419:1;49408:9;49404:17;49397:47;49458:121;49574:4;49458:121;;;49450:129;;49354:235;;;;49596:387;;49777:2;49766:9;49762:18;49754:26;;49827:9;49821:4;49817:20;49813:1;49802:9;49798:17;49791:47;49852:121;49968:4;49852:121;;;49844:129;;49748:235;;;;49990:387;;50171:2;50160:9;50156:18;50148:26;;50221:9;50215:4;50211:20;50207:1;50196:9;50192:17;50185:47;50246:121;50362:4;50246:121;;;50238:129;;50142:235;;;;50384:387;;50565:2;50554:9;50550:18;50542:26;;50615:9;50609:4;50605:20;50601:1;50590:9;50586:17;50579:47;50640:121;50756:4;50640:121;;;50632:129;;50536:235;;;;50778:387;;50959:2;50948:9;50944:18;50936:26;;51009:9;51003:4;50999:20;50995:1;50984:9;50980:17;50973:47;51034:121;51150:4;51034:121;;;51026:129;;50930:235;;;;51172:387;;51353:2;51342:9;51338:18;51330:26;;51403:9;51397:4;51393:20;51389:1;51378:9;51374:17;51367:47;51428:121;51544:4;51428:121;;;51420:129;;51324:235;;;;51566:387;;51747:2;51736:9;51732:18;51724:26;;51797:9;51791:4;51787:20;51783:1;51772:9;51768:17;51761:47;51822:121;51938:4;51822:121;;;51814:129;;51718:235;;;;51960:387;;52141:2;52130:9;52126:18;52118:26;;52191:9;52185:4;52181:20;52177:1;52166:9;52162:17;52155:47;52216:121;52332:4;52216:121;;;52208:129;;52112:235;;;;52354:387;;52535:2;52524:9;52520:18;52512:26;;52585:9;52579:4;52575:20;52571:1;52560:9;52556:17;52549:47;52610:121;52726:4;52610:121;;;52602:129;;52506:235;;;;52748:387;;52929:2;52918:9;52914:18;52906:26;;52979:9;52973:4;52969:20;52965:1;52954:9;52950:17;52943:47;53004:121;53120:4;53004:121;;;52996:129;;52900:235;;;;53142:387;;53323:2;53312:9;53308:18;53300:26;;53373:9;53367:4;53363:20;53359:1;53348:9;53344:17;53337:47;53398:121;53514:4;53398:121;;;53390:129;;53294:235;;;;53536:387;;53717:2;53706:9;53702:18;53694:26;;53767:9;53761:4;53757:20;53753:1;53742:9;53738:17;53731:47;53792:121;53908:4;53792:121;;;53784:129;;53688:235;;;;53930:387;;54111:2;54100:9;54096:18;54088:26;;54161:9;54155:4;54151:20;54147:1;54136:9;54132:17;54125:47;54186:121;54302:4;54186:121;;;54178:129;;54082:235;;;;54324:387;;54505:2;54494:9;54490:18;54482:26;;54555:9;54549:4;54545:20;54541:1;54530:9;54526:17;54519:47;54580:121;54696:4;54580:121;;;54572:129;;54476:235;;;;54718:387;;54899:2;54888:9;54884:18;54876:26;;54949:9;54943:4;54939:20;54935:1;54924:9;54920:17;54913:47;54974:121;55090:4;54974:121;;;54966:129;;54870:235;;;;55112:387;;55293:2;55282:9;55278:18;55270:26;;55343:9;55337:4;55333:20;55329:1;55318:9;55314:17;55307:47;55368:121;55484:4;55368:121;;;55360:129;;55264:235;;;;55506:387;;55687:2;55676:9;55672:18;55664:26;;55737:9;55731:4;55727:20;55723:1;55712:9;55708:17;55701:47;55762:121;55878:4;55762:121;;;55754:129;;55658:235;;;;55900:387;;56081:2;56070:9;56066:18;56058:26;;56131:9;56125:4;56121:20;56117:1;56106:9;56102:17;56095:47;56156:121;56272:4;56156:121;;;56148:129;;56052:235;;;;56294:310;;56460:3;56449:9;56445:19;56437:27;;56475:119;56591:1;56580:9;56576:17;56567:6;56475:119;;;56431:173;;;;;56611:338;;56791:3;56780:9;56776:19;56768:27;;56806:133;56936:1;56925:9;56921:17;56912:6;56806:133;;;56762:187;;;;;56956:301;;57118:2;57107:9;57103:18;57095:26;;57132:115;57244:1;57233:9;57229:17;57220:6;57132:115;;;57089:168;;;;;57264:193;;57372:2;57361:9;57357:18;57349:26;;57386:61;57444:1;57433:9;57429:17;57420:6;57386:61;;;57343:114;;;;;57464:256;;57526:2;57520:9;57510:19;;57564:4;57556:6;57552:17;57663:6;57651:10;57648:22;57627:18;57615:10;57612:34;57609:62;57606:2;;;57684:1;57681;57674:12;57606:2;57704:10;57700:2;57693:22;57504:216;;;;;57727:263;;57891:18;57883:6;57880:30;57877:2;;;57923:1;57920;57913:12;57877:2;57952:4;57944:6;57940:17;57932:25;;57980:4;57974;57970:15;57962:23;;57814:176;;;;57997:277;;58175:18;58167:6;58164:30;58161:2;;;58207:1;58204;58197:12;58161:2;58236:4;58228:6;58224:17;58216:25;;58264:4;58258;58254:15;58246:23;;58098:176;;;;58281:258;;58440:18;58432:6;58429:30;58426:2;;;58472:1;58469;58462:12;58426:2;58501:4;58493:6;58489:17;58481:25;;58529:4;58523;58519:15;58511:23;;58363:176;;;;58546:254;;58685:18;58677:6;58674:30;58671:2;;;58717:1;58714;58707:12;58671:2;58761:4;58757:9;58750:4;58742:6;58738:17;58734:33;58726:41;;58790:4;58784;58780:15;58772:23;;58608:192;;;;58807:258;;58950:18;58942:6;58939:30;58936:2;;;58982:1;58979;58972:12;58936:2;59026:4;59022:9;59015:4;59007:6;59003:17;58999:33;58991:41;;59055:4;59049;59045:15;59037:23;;58873:192;;;;59074:144;;59206:4;59198:6;59194:17;59183:28;;59175:43;;;;59227:130;;59346:5;59340:12;59330:22;;59324:33;;;;59364:87;;59440:5;59434:12;59424:22;;59418:33;;;;59458:91;;59538:5;59532:12;59522:22;;59516:33;;;;59556:88;;59633:5;59627:12;59617:22;;59611:33;;;;59652:145;;59786:4;59778:6;59774:17;59763:28;;59756:41;;;;59805:128;;59885:42;59878:5;59874:54;59863:65;;59857:76;;;;59940:92;;60020:5;60013:13;60006:21;59995:32;;59989:43;;;;60039:79;;60108:5;60097:16;;60091:27;;;;60125:151;;60204:66;60197:5;60193:78;60182:89;;60176:100;;;;60283:79;;60352:5;60341:16;;60335:27;;;;60369:88;;60447:4;60440:5;60436:16;60425:27;;60419:38;;;;60464:128;;60544:42;60537:5;60533:54;60522:65;;60516:76;;;;60599:92;;60679:5;60672:13;60665:21;60654:32;;60648:43;;;;60698:79;;60767:5;60756:16;;60750:27;;;;60784:151;;60863:66;60856:5;60852:78;60841:89;;60835:100;;;;60942:79;;61011:5;61000:16;;60994:27;;;;61028:135;;61127:31;61152:5;61127:31;;;61114:44;;61108:55;;;;61171:145;61252:6;61247:3;61242;61229:30;61308:1;61299:6;61294:3;61290:16;61283:27;61222:94;;;;61325:268;61390:1;61397:101;61411:6;61408:1;61405:13;61397:101;;;61487:1;61482:3;61478:11;61472:18;61468:1;61463:3;61459:11;61452:39;61433:2;61430:1;61426:10;61421:15;;61397:101;;;61513:6;61510:1;61507:13;61504:2;;;61578:1;61569:6;61564:3;61560:16;61553:27;61504:2;61374:219;;;;;61601:97;;61689:2;61685:7;61680:2;61673:5;61669:14;61665:28;61655:38;;61649:49;;;",
  "source": "/*\n\n  Copyright 2018 ZeroEx Intl.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n\n*/\n\npragma solidity 0.4.24;\npragma experimental ABIEncoderV2;\n\nimport \"../../protocol/Exchange/Exchange.sol\";\n\n\n// solhint-disable no-empty-blocks\ncontract TestExchangeInternals is\n    Exchange\n{\n    constructor ()\n        public\n        Exchange(\"\")\n    {}\n\n    /// @dev Adds properties of both FillResults instances.\n    ///      Modifies the first FillResults instance specified.\n    ///      Note that this function has been modified from the original\n    //       internal version to return the FillResults.\n    /// @param totalFillResults Fill results instance that will be added onto.\n    /// @param singleFillResults Fill results instance that will be added to totalFillResults.\n    /// @return newTotalFillResults The result of adding singleFillResults to totalFilResults.\n    function publicAddFillResults(FillResults memory totalFillResults, FillResults memory singleFillResults)\n        public\n        pure\n        returns (FillResults memory)\n    {\n        addFillResults(totalFillResults, singleFillResults);\n        return totalFillResults;\n    }\n\n    /// @dev Calculates amounts filled and fees paid by maker and taker.\n    /// @param order to be filled.\n    /// @param takerAssetFilledAmount Amount of takerAsset that will be filled.\n    /// @return fillResults Amounts filled and fees paid by maker and taker.\n    function publicCalculateFillResults(\n        Order memory order,\n        uint256 takerAssetFilledAmount\n    )\n        public\n        pure\n        returns (FillResults memory fillResults)\n    {\n        return calculateFillResults(order, takerAssetFilledAmount);\n    }\n\n    /// @dev Calculates partial value given a numerator and denominator.\n    ///      Reverts if rounding error is >= 0.1%\n    /// @param numerator Numerator.\n    /// @param denominator Denominator.\n    /// @param target Value to calculate partial of.\n    /// @return Partial value of target.\n    function publicSafeGetPartialAmountFloor(\n        uint256 numerator,\n        uint256 denominator,\n        uint256 target\n    )\n        public\n        pure\n        returns (uint256 partialAmount)\n    {\n        return safeGetPartialAmountFloor(numerator, denominator, target);\n    }\n\n    /// @dev Calculates partial value given a numerator and denominator.\n    ///      Reverts if rounding error is >= 0.1%\n    /// @param numerator Numerator.\n    /// @param denominator Denominator.\n    /// @param target Value to calculate partial of.\n    /// @return Partial value of target.\n    function publicSafeGetPartialAmountCeil(\n        uint256 numerator,\n        uint256 denominator,\n        uint256 target\n    )\n        public\n        pure\n        returns (uint256 partialAmount)\n    {\n        return safeGetPartialAmountCeil(numerator, denominator, target);\n    }\n\n    /// @dev Calculates partial value given a numerator and denominator.\n    /// @param numerator Numerator.\n    /// @param denominator Denominator.\n    /// @param target Value to calculate partial of.\n    /// @return Partial value of target.\n    function publicGetPartialAmountFloor(\n        uint256 numerator,\n        uint256 denominator,\n        uint256 target\n    )\n        public\n        pure\n        returns (uint256 partialAmount)\n    {\n        return getPartialAmountFloor(numerator, denominator, target);\n    }\n\n    /// @dev Calculates partial value given a numerator and denominator.\n    /// @param numerator Numerator.\n    /// @param denominator Denominator.\n    /// @param target Value to calculate partial of.\n    /// @return Partial value of target.\n    function publicGetPartialAmountCeil(\n        uint256 numerator,\n        uint256 denominator,\n        uint256 target\n    )\n        public\n        pure\n        returns (uint256 partialAmount)\n    {\n        return getPartialAmountCeil(numerator, denominator, target);\n    }\n\n    /// @dev Checks if rounding error >= 0.1%.\n    /// @param numerator Numerator.\n    /// @param denominator Denominator.\n    /// @param target Value to multiply with numerator/denominator.\n    /// @return Rounding error is present.\n    function publicIsRoundingErrorFloor(\n        uint256 numerator,\n        uint256 denominator,\n        uint256 target\n    )\n        public\n        pure\n        returns (bool isError)\n    {\n        return isRoundingErrorFloor(numerator, denominator, target);\n    }\n\n    /// @dev Checks if rounding error >= 0.1%.\n    /// @param numerator Numerator.\n    /// @param denominator Denominator.\n    /// @param target Value to multiply with numerator/denominator.\n    /// @return Rounding error is present.\n    function publicIsRoundingErrorCeil(\n        uint256 numerator,\n        uint256 denominator,\n        uint256 target\n    )\n        public\n        pure\n        returns (bool isError)\n    {\n        return isRoundingErrorCeil(numerator, denominator, target);\n    }\n \n    /// @dev Updates state with results of a fill order.\n    /// @param order that was filled.\n    /// @param takerAddress Address of taker who filled the order.\n    /// @param orderTakerAssetFilledAmount Amount of order already filled.\n    /// @return fillResults Amounts filled and fees paid by maker and taker.\n    function publicUpdateFilledState(\n        Order memory order,\n        address takerAddress,\n        bytes32 orderHash,\n        uint256 orderTakerAssetFilledAmount,\n        FillResults memory fillResults\n    )\n        public\n    {\n        updateFilledState(\n            order,\n            takerAddress,\n            orderHash,\n            orderTakerAssetFilledAmount,\n            fillResults\n        );\n    }\n}\n",
  "sourcePath": "/Users/lawrenceballou/Desktop/BlockNerds/Clients/AltcoinIo/filter-contract/contracts/protocol/contracts/test/TestExchangeInternals/TestExchangeInternals.sol",
  "ast": {
    "absolutePath": "/Users/lawrenceballou/Desktop/BlockNerds/Clients/AltcoinIo/filter-contract/contracts/protocol/contracts/test/TestExchangeInternals/TestExchangeInternals.sol",
    "exportedSymbols": {
      "TestExchangeInternals": [
        9940
      ]
    },
    "id": 9941,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 9766,
        "literals": [
          "solidity",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "580:23:79"
      },
      {
        "id": 9767,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "604:33:79"
      },
      {
        "absolutePath": "/Users/lawrenceballou/Desktop/BlockNerds/Clients/AltcoinIo/filter-contract/contracts/protocol/contracts/protocol/Exchange/Exchange.sol",
        "file": "../../protocol/Exchange/Exchange.sol",
        "id": 9768,
        "nodeType": "ImportDirective",
        "scope": 9941,
        "sourceUnit": 6739,
        "src": "639:46:79",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 9769,
              "name": "Exchange",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6738,
              "src": "761:8:79",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Exchange_$6738",
                "typeString": "contract Exchange"
              }
            },
            "id": 9770,
            "nodeType": "InheritanceSpecifier",
            "src": "761:8:79"
          }
        ],
        "contractDependencies": [
          3425,
          3481,
          3500,
          3530,
          3544,
          3707,
          3727,
          3862,
          3931,
          4403,
          4678,
          4792,
          6738,
          6859,
          7610,
          8136,
          8554,
          8708,
          9401,
          9424,
          9555,
          9584,
          9631,
          9665,
          9685,
          13475,
          13523,
          13547,
          13716
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 9940,
        "linearizedBaseContracts": [
          9940,
          6738,
          9401,
          9685,
          3707,
          6859,
          8708,
          8554,
          8136,
          7610,
          9665,
          3544,
          9631,
          3530,
          9584,
          3500,
          9555,
          3481,
          3727,
          9424,
          3425,
          4403,
          13523,
          13475,
          4792,
          3931,
          4678,
          13716,
          3862,
          13547
        ],
        "name": "TestExchangeInternals",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 9776,
              "nodeType": "Block",
              "src": "831:2:79",
              "statements": []
            },
            "documentation": null,
            "id": 9777,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "hexValue": "",
                    "id": 9773,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "823:2:79",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                      "typeString": "literal_string \"\""
                    },
                    "value": ""
                  }
                ],
                "id": 9774,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 9772,
                  "name": "Exchange",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 6738,
                  "src": "814:8:79",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Exchange_$6738_$",
                    "typeString": "type(contract Exchange)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "814:12:79"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9771,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "788:2:79"
            },
            "payable": false,
            "returnParameters": {
              "id": 9775,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "831:0:79"
            },
            "scope": 9940,
            "src": "776:57:79",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 9793,
              "nodeType": "Block",
              "src": "1536:101:79",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 9787,
                        "name": "totalFillResults",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9779,
                        "src": "1561:16:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_FillResults_$4343_memory_ptr",
                          "typeString": "struct LibFillResults.FillResults memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 9788,
                        "name": "singleFillResults",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9781,
                        "src": "1579:17:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_FillResults_$4343_memory_ptr",
                          "typeString": "struct LibFillResults.FillResults memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_FillResults_$4343_memory_ptr",
                          "typeString": "struct LibFillResults.FillResults memory"
                        },
                        {
                          "typeIdentifier": "t_struct$_FillResults_$4343_memory_ptr",
                          "typeString": "struct LibFillResults.FillResults memory"
                        }
                      ],
                      "id": 9786,
                      "name": "addFillResults",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4402,
                      "src": "1546:14:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_struct$_FillResults_$4343_memory_ptr_$_t_struct$_FillResults_$4343_memory_ptr_$returns$__$",
                        "typeString": "function (struct LibFillResults.FillResults memory,struct LibFillResults.FillResults memory) pure"
                      }
                    },
                    "id": 9789,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1546:51:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9790,
                  "nodeType": "ExpressionStatement",
                  "src": "1546:51:79"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 9791,
                    "name": "totalFillResults",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 9779,
                    "src": "1614:16:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_FillResults_$4343_memory_ptr",
                      "typeString": "struct LibFillResults.FillResults memory"
                    }
                  },
                  "functionReturnParameters": 9785,
                  "id": 9792,
                  "nodeType": "Return",
                  "src": "1607:23:79"
                }
              ]
            },
            "documentation": "@param totalFillResults Fill results instance that will be added onto.\n @param singleFillResults Fill results instance that will be added to totalFillResults.\n @return newTotalFillResults The result of adding singleFillResults to totalFilResults.",
            "id": 9794,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "publicAddFillResults",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9782,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9779,
                  "name": "totalFillResults",
                  "nodeType": "VariableDeclaration",
                  "scope": 9794,
                  "src": "1392:35:79",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_FillResults_$4343_memory_ptr",
                    "typeString": "struct LibFillResults.FillResults"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 9778,
                    "name": "FillResults",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 4343,
                    "src": "1392:11:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_FillResults_$4343_storage_ptr",
                      "typeString": "struct LibFillResults.FillResults"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9781,
                  "name": "singleFillResults",
                  "nodeType": "VariableDeclaration",
                  "scope": 9794,
                  "src": "1429:36:79",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_FillResults_$4343_memory_ptr",
                    "typeString": "struct LibFillResults.FillResults"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 9780,
                    "name": "FillResults",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 4343,
                    "src": "1429:11:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_FillResults_$4343_storage_ptr",
                      "typeString": "struct LibFillResults.FillResults"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1391:75:79"
            },
            "payable": false,
            "returnParameters": {
              "id": 9785,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9784,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 9794,
                  "src": "1512:11:79",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_FillResults_$4343_memory_ptr",
                    "typeString": "struct LibFillResults.FillResults"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 9783,
                    "name": "FillResults",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 4343,
                    "src": "1512:11:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_FillResults_$4343_storage_ptr",
                      "typeString": "struct LibFillResults.FillResults"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1511:20:79"
            },
            "scope": 9940,
            "src": "1362:275:79",
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 9808,
              "nodeType": "Block",
              "src": "2099:75:79",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 9804,
                        "name": "order",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9796,
                        "src": "2137:5:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Order_$4737_memory_ptr",
                          "typeString": "struct LibOrder.Order memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 9805,
                        "name": "takerAssetFilledAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9798,
                        "src": "2144:22:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Order_$4737_memory_ptr",
                          "typeString": "struct LibOrder.Order memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 9803,
                      "name": "calculateFillResults",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        7556
                      ],
                      "referencedDeclaration": 7556,
                      "src": "2116:20:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_struct$_Order_$4737_memory_ptr_$_t_uint256_$returns$_t_struct$_FillResults_$4343_memory_ptr_$",
                        "typeString": "function (struct LibOrder.Order memory,uint256) pure returns (struct LibFillResults.FillResults memory)"
                      }
                    },
                    "id": 9806,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2116:51:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_FillResults_$4343_memory_ptr",
                      "typeString": "struct LibFillResults.FillResults memory"
                    }
                  },
                  "functionReturnParameters": 9802,
                  "id": 9807,
                  "nodeType": "Return",
                  "src": "2109:58:79"
                }
              ]
            },
            "documentation": "@dev Calculates amounts filled and fees paid by maker and taker.\n @param order to be filled.\n @param takerAssetFilledAmount Amount of takerAsset that will be filled.\n @return fillResults Amounts filled and fees paid by maker and taker.",
            "id": 9809,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "publicCalculateFillResults",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9799,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9796,
                  "name": "order",
                  "nodeType": "VariableDeclaration",
                  "scope": 9809,
                  "src": "1953:18:79",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Order_$4737_memory_ptr",
                    "typeString": "struct LibOrder.Order"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 9795,
                    "name": "Order",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 4737,
                    "src": "1953:5:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Order_$4737_storage_ptr",
                      "typeString": "struct LibOrder.Order"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9798,
                  "name": "takerAssetFilledAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 9809,
                  "src": "1981:30:79",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9797,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1981:7:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1943:74:79"
            },
            "payable": false,
            "returnParameters": {
              "id": 9802,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9801,
                  "name": "fillResults",
                  "nodeType": "VariableDeclaration",
                  "scope": 9809,
                  "src": "2063:30:79",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_FillResults_$4343_memory_ptr",
                    "typeString": "struct LibFillResults.FillResults"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 9800,
                    "name": "FillResults",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 4343,
                    "src": "2063:11:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_FillResults_$4343_storage_ptr",
                      "typeString": "struct LibFillResults.FillResults"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2062:32:79"
            },
            "scope": 9940,
            "src": "1908:266:79",
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 9826,
              "nodeType": "Block",
              "src": "2672:81:79",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 9821,
                        "name": "numerator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9811,
                        "src": "2715:9:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 9822,
                        "name": "denominator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9813,
                        "src": "2726:11:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 9823,
                        "name": "target",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9815,
                        "src": "2739:6:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 9820,
                      "name": "safeGetPartialAmountFloor",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4449,
                      "src": "2689:25:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 9824,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2689:57:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 9819,
                  "id": 9825,
                  "nodeType": "Return",
                  "src": "2682:64:79"
                }
              ]
            },
            "documentation": "@dev Calculates partial value given a numerator and denominator.\n      Reverts if rounding error is >= 0.1%\n @param numerator Numerator.\n @param denominator Denominator.\n @param target Value to calculate partial of.\n @return Partial value of target.",
            "id": 9827,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "publicSafeGetPartialAmountFloor",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9816,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9811,
                  "name": "numerator",
                  "nodeType": "VariableDeclaration",
                  "scope": 9827,
                  "src": "2523:17:79",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9810,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2523:7:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9813,
                  "name": "denominator",
                  "nodeType": "VariableDeclaration",
                  "scope": 9827,
                  "src": "2550:19:79",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9812,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2550:7:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9815,
                  "name": "target",
                  "nodeType": "VariableDeclaration",
                  "scope": 9827,
                  "src": "2579:14:79",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9814,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2579:7:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2513:86:79"
            },
            "payable": false,
            "returnParameters": {
              "id": 9819,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9818,
                  "name": "partialAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 9827,
                  "src": "2645:21:79",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9817,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2645:7:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2644:23:79"
            },
            "scope": 9940,
            "src": "2473:280:79",
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 9844,
              "nodeType": "Block",
              "src": "3250:80:79",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 9839,
                        "name": "numerator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9829,
                        "src": "3292:9:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 9840,
                        "name": "denominator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9831,
                        "src": "3303:11:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 9841,
                        "name": "target",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9833,
                        "src": "3316:6:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 9838,
                      "name": "safeGetPartialAmountCeil",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4496,
                      "src": "3267:24:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 9842,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3267:56:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 9837,
                  "id": 9843,
                  "nodeType": "Return",
                  "src": "3260:63:79"
                }
              ]
            },
            "documentation": "@dev Calculates partial value given a numerator and denominator.\n      Reverts if rounding error is >= 0.1%\n @param numerator Numerator.\n @param denominator Denominator.\n @param target Value to calculate partial of.\n @return Partial value of target.",
            "id": 9845,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "publicSafeGetPartialAmountCeil",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9834,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9829,
                  "name": "numerator",
                  "nodeType": "VariableDeclaration",
                  "scope": 9845,
                  "src": "3101:17:79",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9828,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3101:7:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9831,
                  "name": "denominator",
                  "nodeType": "VariableDeclaration",
                  "scope": 9845,
                  "src": "3128:19:79",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9830,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3128:7:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9833,
                  "name": "target",
                  "nodeType": "VariableDeclaration",
                  "scope": 9845,
                  "src": "3157:14:79",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9832,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3157:7:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3091:86:79"
            },
            "payable": false,
            "returnParameters": {
              "id": 9837,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9836,
                  "name": "partialAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 9845,
                  "src": "3223:21:79",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9835,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3223:7:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3222:23:79"
            },
            "scope": 9940,
            "src": "3052:278:79",
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 9862,
              "nodeType": "Block",
              "src": "3774:77:79",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 9857,
                        "name": "numerator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9847,
                        "src": "3813:9:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 9858,
                        "name": "denominator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9849,
                        "src": "3824:11:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 9859,
                        "name": "target",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9851,
                        "src": "3837:6:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 9856,
                      "name": "getPartialAmountFloor",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4527,
                      "src": "3791:21:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 9860,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3791:53:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 9855,
                  "id": 9861,
                  "nodeType": "Return",
                  "src": "3784:60:79"
                }
              ]
            },
            "documentation": "@dev Calculates partial value given a numerator and denominator.\n @param numerator Numerator.\n @param denominator Denominator.\n @param target Value to calculate partial of.\n @return Partial value of target.",
            "id": 9863,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "publicGetPartialAmountFloor",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9852,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9847,
                  "name": "numerator",
                  "nodeType": "VariableDeclaration",
                  "scope": 9863,
                  "src": "3625:17:79",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9846,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3625:7:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9849,
                  "name": "denominator",
                  "nodeType": "VariableDeclaration",
                  "scope": 9863,
                  "src": "3652:19:79",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9848,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3652:7:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9851,
                  "name": "target",
                  "nodeType": "VariableDeclaration",
                  "scope": 9863,
                  "src": "3681:14:79",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9850,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3681:7:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3615:86:79"
            },
            "payable": false,
            "returnParameters": {
              "id": 9855,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9854,
                  "name": "partialAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 9863,
                  "src": "3747:21:79",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9853,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3747:7:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3746:23:79"
            },
            "scope": 9940,
            "src": "3579:272:79",
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 9880,
              "nodeType": "Block",
              "src": "4294:76:79",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 9875,
                        "name": "numerator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9865,
                        "src": "4332:9:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 9876,
                        "name": "denominator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9867,
                        "src": "4343:11:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 9877,
                        "name": "target",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9869,
                        "src": "4356:6:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 9874,
                      "name": "getPartialAmountCeil",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4564,
                      "src": "4311:20:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 9878,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4311:52:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 9873,
                  "id": 9879,
                  "nodeType": "Return",
                  "src": "4304:59:79"
                }
              ]
            },
            "documentation": "@dev Calculates partial value given a numerator and denominator.\n @param numerator Numerator.\n @param denominator Denominator.\n @param target Value to calculate partial of.\n @return Partial value of target.",
            "id": 9881,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "publicGetPartialAmountCeil",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9870,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9865,
                  "name": "numerator",
                  "nodeType": "VariableDeclaration",
                  "scope": 9881,
                  "src": "4145:17:79",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9864,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4145:7:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9867,
                  "name": "denominator",
                  "nodeType": "VariableDeclaration",
                  "scope": 9881,
                  "src": "4172:19:79",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9866,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4172:7:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9869,
                  "name": "target",
                  "nodeType": "VariableDeclaration",
                  "scope": 9881,
                  "src": "4201:14:79",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9868,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4201:7:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4135:86:79"
            },
            "payable": false,
            "returnParameters": {
              "id": 9873,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9872,
                  "name": "partialAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 9881,
                  "src": "4267:21:79",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9871,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4267:7:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4266:23:79"
            },
            "scope": 9940,
            "src": "4100:270:79",
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 9898,
              "nodeType": "Block",
              "src": "4795:76:79",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 9893,
                        "name": "numerator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9883,
                        "src": "4833:9:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 9894,
                        "name": "denominator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9885,
                        "src": "4844:11:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 9895,
                        "name": "target",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9887,
                        "src": "4857:6:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 9892,
                      "name": "isRoundingErrorFloor",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4616,
                      "src": "4812:20:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (uint256,uint256,uint256) pure returns (bool)"
                      }
                    },
                    "id": 9896,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4812:52:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 9891,
                  "id": 9897,
                  "nodeType": "Return",
                  "src": "4805:59:79"
                }
              ]
            },
            "documentation": "@dev Checks if rounding error >= 0.1%.\n @param numerator Numerator.\n @param denominator Denominator.\n @param target Value to multiply with numerator/denominator.\n @return Rounding error is present.",
            "id": 9899,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "publicIsRoundingErrorFloor",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9888,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9883,
                  "name": "numerator",
                  "nodeType": "VariableDeclaration",
                  "scope": 9899,
                  "src": "4655:17:79",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9882,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4655:7:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9885,
                  "name": "denominator",
                  "nodeType": "VariableDeclaration",
                  "scope": 9899,
                  "src": "4682:19:79",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9884,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4682:7:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9887,
                  "name": "target",
                  "nodeType": "VariableDeclaration",
                  "scope": 9899,
                  "src": "4711:14:79",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9886,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4711:7:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4645:86:79"
            },
            "payable": false,
            "returnParameters": {
              "id": 9891,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9890,
                  "name": "isError",
                  "nodeType": "VariableDeclaration",
                  "scope": 9899,
                  "src": "4777:12:79",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 9889,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4777:4:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4776:14:79"
            },
            "scope": 9940,
            "src": "4610:261:79",
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 9916,
              "nodeType": "Block",
              "src": "5295:75:79",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 9911,
                        "name": "numerator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9901,
                        "src": "5332:9:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 9912,
                        "name": "denominator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9903,
                        "src": "5343:11:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 9913,
                        "name": "target",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9905,
                        "src": "5356:6:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 9910,
                      "name": "isRoundingErrorCeil",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4677,
                      "src": "5312:19:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (uint256,uint256,uint256) pure returns (bool)"
                      }
                    },
                    "id": 9914,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5312:51:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 9909,
                  "id": 9915,
                  "nodeType": "Return",
                  "src": "5305:58:79"
                }
              ]
            },
            "documentation": "@dev Checks if rounding error >= 0.1%.\n @param numerator Numerator.\n @param denominator Denominator.\n @param target Value to multiply with numerator/denominator.\n @return Rounding error is present.",
            "id": 9917,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "publicIsRoundingErrorCeil",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9906,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9901,
                  "name": "numerator",
                  "nodeType": "VariableDeclaration",
                  "scope": 9917,
                  "src": "5155:17:79",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9900,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5155:7:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9903,
                  "name": "denominator",
                  "nodeType": "VariableDeclaration",
                  "scope": 9917,
                  "src": "5182:19:79",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9902,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5182:7:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9905,
                  "name": "target",
                  "nodeType": "VariableDeclaration",
                  "scope": 9917,
                  "src": "5211:14:79",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9904,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5211:7:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5145:86:79"
            },
            "payable": false,
            "returnParameters": {
              "id": 9909,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9908,
                  "name": "isError",
                  "nodeType": "VariableDeclaration",
                  "scope": 9917,
                  "src": "5277:12:79",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 9907,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5277:4:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5276:14:79"
            },
            "scope": 9940,
            "src": "5111:259:79",
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 9938,
              "nodeType": "Block",
              "src": "5919:178:79",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 9931,
                        "name": "order",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9919,
                        "src": "5960:5:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Order_$4737_memory_ptr",
                          "typeString": "struct LibOrder.Order memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 9932,
                        "name": "takerAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9921,
                        "src": "5979:12:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 9933,
                        "name": "orderHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9923,
                        "src": "6005:9:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 9934,
                        "name": "orderTakerAssetFilledAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9925,
                        "src": "6028:27:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 9935,
                        "name": "fillResults",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9927,
                        "src": "6069:11:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_FillResults_$4343_memory_ptr",
                          "typeString": "struct LibFillResults.FillResults memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Order_$4737_memory_ptr",
                          "typeString": "struct LibOrder.Order memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_struct$_FillResults_$4343_memory_ptr",
                          "typeString": "struct LibFillResults.FillResults memory"
                        }
                      ],
                      "id": 9930,
                      "name": "updateFilledState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        7296
                      ],
                      "referencedDeclaration": 7296,
                      "src": "5929:17:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Order_$4737_memory_ptr_$_t_address_$_t_bytes32_$_t_uint256_$_t_struct$_FillResults_$4343_memory_ptr_$returns$__$",
                        "typeString": "function (struct LibOrder.Order memory,address,bytes32,uint256,struct LibFillResults.FillResults memory)"
                      }
                    },
                    "id": 9936,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5929:161:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9937,
                  "nodeType": "ExpressionStatement",
                  "src": "5929:161:79"
                }
              ]
            },
            "documentation": "@dev Updates state with results of a fill order.\n @param order that was filled.\n @param takerAddress Address of taker who filled the order.\n @param orderTakerAssetFilledAmount Amount of order already filled.\n @return fillResults Amounts filled and fees paid by maker and taker.",
            "id": 9939,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "publicUpdateFilledState",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9928,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9919,
                  "name": "order",
                  "nodeType": "VariableDeclaration",
                  "scope": 9939,
                  "src": "5733:18:79",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Order_$4737_memory_ptr",
                    "typeString": "struct LibOrder.Order"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 9918,
                    "name": "Order",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 4737,
                    "src": "5733:5:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Order_$4737_storage_ptr",
                      "typeString": "struct LibOrder.Order"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9921,
                  "name": "takerAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 9939,
                  "src": "5761:20:79",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9920,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5761:7:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9923,
                  "name": "orderHash",
                  "nodeType": "VariableDeclaration",
                  "scope": 9939,
                  "src": "5791:17:79",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 9922,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5791:7:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9925,
                  "name": "orderTakerAssetFilledAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 9939,
                  "src": "5818:35:79",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9924,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5818:7:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9927,
                  "name": "fillResults",
                  "nodeType": "VariableDeclaration",
                  "scope": 9939,
                  "src": "5863:30:79",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_FillResults_$4343_memory_ptr",
                    "typeString": "struct LibFillResults.FillResults"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 9926,
                    "name": "FillResults",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 4343,
                    "src": "5863:11:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_FillResults_$4343_storage_ptr",
                      "typeString": "struct LibFillResults.FillResults"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5723:176:79"
            },
            "payable": false,
            "returnParameters": {
              "id": 9929,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5919:0:79"
            },
            "scope": 9940,
            "src": "5691:406:79",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 9941,
        "src": "723:5376:79"
      }
    ],
    "src": "580:5520:79"
  },
  "legacyAST": {
    "absolutePath": "/Users/lawrenceballou/Desktop/BlockNerds/Clients/AltcoinIo/filter-contract/contracts/protocol/contracts/test/TestExchangeInternals/TestExchangeInternals.sol",
    "exportedSymbols": {
      "TestExchangeInternals": [
        9940
      ]
    },
    "id": 9941,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 9766,
        "literals": [
          "solidity",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "580:23:79"
      },
      {
        "id": 9767,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "604:33:79"
      },
      {
        "absolutePath": "/Users/lawrenceballou/Desktop/BlockNerds/Clients/AltcoinIo/filter-contract/contracts/protocol/contracts/protocol/Exchange/Exchange.sol",
        "file": "../../protocol/Exchange/Exchange.sol",
        "id": 9768,
        "nodeType": "ImportDirective",
        "scope": 9941,
        "sourceUnit": 6739,
        "src": "639:46:79",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 9769,
              "name": "Exchange",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6738,
              "src": "761:8:79",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Exchange_$6738",
                "typeString": "contract Exchange"
              }
            },
            "id": 9770,
            "nodeType": "InheritanceSpecifier",
            "src": "761:8:79"
          }
        ],
        "contractDependencies": [
          3425,
          3481,
          3500,
          3530,
          3544,
          3707,
          3727,
          3862,
          3931,
          4403,
          4678,
          4792,
          6738,
          6859,
          7610,
          8136,
          8554,
          8708,
          9401,
          9424,
          9555,
          9584,
          9631,
          9665,
          9685,
          13475,
          13523,
          13547,
          13716
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 9940,
        "linearizedBaseContracts": [
          9940,
          6738,
          9401,
          9685,
          3707,
          6859,
          8708,
          8554,
          8136,
          7610,
          9665,
          3544,
          9631,
          3530,
          9584,
          3500,
          9555,
          3481,
          3727,
          9424,
          3425,
          4403,
          13523,
          13475,
          4792,
          3931,
          4678,
          13716,
          3862,
          13547
        ],
        "name": "TestExchangeInternals",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 9776,
              "nodeType": "Block",
              "src": "831:2:79",
              "statements": []
            },
            "documentation": null,
            "id": 9777,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "hexValue": "",
                    "id": 9773,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "823:2:79",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                      "typeString": "literal_string \"\""
                    },
                    "value": ""
                  }
                ],
                "id": 9774,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 9772,
                  "name": "Exchange",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 6738,
                  "src": "814:8:79",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Exchange_$6738_$",
                    "typeString": "type(contract Exchange)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "814:12:79"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9771,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "788:2:79"
            },
            "payable": false,
            "returnParameters": {
              "id": 9775,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "831:0:79"
            },
            "scope": 9940,
            "src": "776:57:79",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 9793,
              "nodeType": "Block",
              "src": "1536:101:79",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 9787,
                        "name": "totalFillResults",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9779,
                        "src": "1561:16:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_FillResults_$4343_memory_ptr",
                          "typeString": "struct LibFillResults.FillResults memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 9788,
                        "name": "singleFillResults",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9781,
                        "src": "1579:17:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_FillResults_$4343_memory_ptr",
                          "typeString": "struct LibFillResults.FillResults memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_FillResults_$4343_memory_ptr",
                          "typeString": "struct LibFillResults.FillResults memory"
                        },
                        {
                          "typeIdentifier": "t_struct$_FillResults_$4343_memory_ptr",
                          "typeString": "struct LibFillResults.FillResults memory"
                        }
                      ],
                      "id": 9786,
                      "name": "addFillResults",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4402,
                      "src": "1546:14:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_struct$_FillResults_$4343_memory_ptr_$_t_struct$_FillResults_$4343_memory_ptr_$returns$__$",
                        "typeString": "function (struct LibFillResults.FillResults memory,struct LibFillResults.FillResults memory) pure"
                      }
                    },
                    "id": 9789,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1546:51:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9790,
                  "nodeType": "ExpressionStatement",
                  "src": "1546:51:79"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 9791,
                    "name": "totalFillResults",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 9779,
                    "src": "1614:16:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_FillResults_$4343_memory_ptr",
                      "typeString": "struct LibFillResults.FillResults memory"
                    }
                  },
                  "functionReturnParameters": 9785,
                  "id": 9792,
                  "nodeType": "Return",
                  "src": "1607:23:79"
                }
              ]
            },
            "documentation": "@param totalFillResults Fill results instance that will be added onto.\n @param singleFillResults Fill results instance that will be added to totalFillResults.\n @return newTotalFillResults The result of adding singleFillResults to totalFilResults.",
            "id": 9794,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "publicAddFillResults",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9782,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9779,
                  "name": "totalFillResults",
                  "nodeType": "VariableDeclaration",
                  "scope": 9794,
                  "src": "1392:35:79",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_FillResults_$4343_memory_ptr",
                    "typeString": "struct LibFillResults.FillResults"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 9778,
                    "name": "FillResults",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 4343,
                    "src": "1392:11:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_FillResults_$4343_storage_ptr",
                      "typeString": "struct LibFillResults.FillResults"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9781,
                  "name": "singleFillResults",
                  "nodeType": "VariableDeclaration",
                  "scope": 9794,
                  "src": "1429:36:79",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_FillResults_$4343_memory_ptr",
                    "typeString": "struct LibFillResults.FillResults"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 9780,
                    "name": "FillResults",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 4343,
                    "src": "1429:11:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_FillResults_$4343_storage_ptr",
                      "typeString": "struct LibFillResults.FillResults"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1391:75:79"
            },
            "payable": false,
            "returnParameters": {
              "id": 9785,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9784,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 9794,
                  "src": "1512:11:79",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_FillResults_$4343_memory_ptr",
                    "typeString": "struct LibFillResults.FillResults"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 9783,
                    "name": "FillResults",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 4343,
                    "src": "1512:11:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_FillResults_$4343_storage_ptr",
                      "typeString": "struct LibFillResults.FillResults"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1511:20:79"
            },
            "scope": 9940,
            "src": "1362:275:79",
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 9808,
              "nodeType": "Block",
              "src": "2099:75:79",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 9804,
                        "name": "order",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9796,
                        "src": "2137:5:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Order_$4737_memory_ptr",
                          "typeString": "struct LibOrder.Order memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 9805,
                        "name": "takerAssetFilledAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9798,
                        "src": "2144:22:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Order_$4737_memory_ptr",
                          "typeString": "struct LibOrder.Order memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 9803,
                      "name": "calculateFillResults",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        7556
                      ],
                      "referencedDeclaration": 7556,
                      "src": "2116:20:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_struct$_Order_$4737_memory_ptr_$_t_uint256_$returns$_t_struct$_FillResults_$4343_memory_ptr_$",
                        "typeString": "function (struct LibOrder.Order memory,uint256) pure returns (struct LibFillResults.FillResults memory)"
                      }
                    },
                    "id": 9806,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2116:51:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_FillResults_$4343_memory_ptr",
                      "typeString": "struct LibFillResults.FillResults memory"
                    }
                  },
                  "functionReturnParameters": 9802,
                  "id": 9807,
                  "nodeType": "Return",
                  "src": "2109:58:79"
                }
              ]
            },
            "documentation": "@dev Calculates amounts filled and fees paid by maker and taker.\n @param order to be filled.\n @param takerAssetFilledAmount Amount of takerAsset that will be filled.\n @return fillResults Amounts filled and fees paid by maker and taker.",
            "id": 9809,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "publicCalculateFillResults",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9799,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9796,
                  "name": "order",
                  "nodeType": "VariableDeclaration",
                  "scope": 9809,
                  "src": "1953:18:79",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Order_$4737_memory_ptr",
                    "typeString": "struct LibOrder.Order"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 9795,
                    "name": "Order",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 4737,
                    "src": "1953:5:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Order_$4737_storage_ptr",
                      "typeString": "struct LibOrder.Order"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9798,
                  "name": "takerAssetFilledAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 9809,
                  "src": "1981:30:79",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9797,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1981:7:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1943:74:79"
            },
            "payable": false,
            "returnParameters": {
              "id": 9802,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9801,
                  "name": "fillResults",
                  "nodeType": "VariableDeclaration",
                  "scope": 9809,
                  "src": "2063:30:79",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_FillResults_$4343_memory_ptr",
                    "typeString": "struct LibFillResults.FillResults"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 9800,
                    "name": "FillResults",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 4343,
                    "src": "2063:11:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_FillResults_$4343_storage_ptr",
                      "typeString": "struct LibFillResults.FillResults"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2062:32:79"
            },
            "scope": 9940,
            "src": "1908:266:79",
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 9826,
              "nodeType": "Block",
              "src": "2672:81:79",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 9821,
                        "name": "numerator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9811,
                        "src": "2715:9:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 9822,
                        "name": "denominator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9813,
                        "src": "2726:11:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 9823,
                        "name": "target",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9815,
                        "src": "2739:6:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 9820,
                      "name": "safeGetPartialAmountFloor",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4449,
                      "src": "2689:25:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 9824,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2689:57:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 9819,
                  "id": 9825,
                  "nodeType": "Return",
                  "src": "2682:64:79"
                }
              ]
            },
            "documentation": "@dev Calculates partial value given a numerator and denominator.\n      Reverts if rounding error is >= 0.1%\n @param numerator Numerator.\n @param denominator Denominator.\n @param target Value to calculate partial of.\n @return Partial value of target.",
            "id": 9827,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "publicSafeGetPartialAmountFloor",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9816,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9811,
                  "name": "numerator",
                  "nodeType": "VariableDeclaration",
                  "scope": 9827,
                  "src": "2523:17:79",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9810,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2523:7:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9813,
                  "name": "denominator",
                  "nodeType": "VariableDeclaration",
                  "scope": 9827,
                  "src": "2550:19:79",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9812,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2550:7:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9815,
                  "name": "target",
                  "nodeType": "VariableDeclaration",
                  "scope": 9827,
                  "src": "2579:14:79",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9814,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2579:7:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2513:86:79"
            },
            "payable": false,
            "returnParameters": {
              "id": 9819,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9818,
                  "name": "partialAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 9827,
                  "src": "2645:21:79",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9817,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2645:7:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2644:23:79"
            },
            "scope": 9940,
            "src": "2473:280:79",
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 9844,
              "nodeType": "Block",
              "src": "3250:80:79",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 9839,
                        "name": "numerator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9829,
                        "src": "3292:9:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 9840,
                        "name": "denominator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9831,
                        "src": "3303:11:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 9841,
                        "name": "target",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9833,
                        "src": "3316:6:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 9838,
                      "name": "safeGetPartialAmountCeil",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4496,
                      "src": "3267:24:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 9842,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3267:56:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 9837,
                  "id": 9843,
                  "nodeType": "Return",
                  "src": "3260:63:79"
                }
              ]
            },
            "documentation": "@dev Calculates partial value given a numerator and denominator.\n      Reverts if rounding error is >= 0.1%\n @param numerator Numerator.\n @param denominator Denominator.\n @param target Value to calculate partial of.\n @return Partial value of target.",
            "id": 9845,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "publicSafeGetPartialAmountCeil",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9834,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9829,
                  "name": "numerator",
                  "nodeType": "VariableDeclaration",
                  "scope": 9845,
                  "src": "3101:17:79",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9828,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3101:7:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9831,
                  "name": "denominator",
                  "nodeType": "VariableDeclaration",
                  "scope": 9845,
                  "src": "3128:19:79",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9830,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3128:7:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9833,
                  "name": "target",
                  "nodeType": "VariableDeclaration",
                  "scope": 9845,
                  "src": "3157:14:79",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9832,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3157:7:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3091:86:79"
            },
            "payable": false,
            "returnParameters": {
              "id": 9837,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9836,
                  "name": "partialAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 9845,
                  "src": "3223:21:79",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9835,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3223:7:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3222:23:79"
            },
            "scope": 9940,
            "src": "3052:278:79",
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 9862,
              "nodeType": "Block",
              "src": "3774:77:79",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 9857,
                        "name": "numerator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9847,
                        "src": "3813:9:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 9858,
                        "name": "denominator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9849,
                        "src": "3824:11:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 9859,
                        "name": "target",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9851,
                        "src": "3837:6:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 9856,
                      "name": "getPartialAmountFloor",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4527,
                      "src": "3791:21:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 9860,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3791:53:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 9855,
                  "id": 9861,
                  "nodeType": "Return",
                  "src": "3784:60:79"
                }
              ]
            },
            "documentation": "@dev Calculates partial value given a numerator and denominator.\n @param numerator Numerator.\n @param denominator Denominator.\n @param target Value to calculate partial of.\n @return Partial value of target.",
            "id": 9863,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "publicGetPartialAmountFloor",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9852,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9847,
                  "name": "numerator",
                  "nodeType": "VariableDeclaration",
                  "scope": 9863,
                  "src": "3625:17:79",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9846,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3625:7:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9849,
                  "name": "denominator",
                  "nodeType": "VariableDeclaration",
                  "scope": 9863,
                  "src": "3652:19:79",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9848,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3652:7:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9851,
                  "name": "target",
                  "nodeType": "VariableDeclaration",
                  "scope": 9863,
                  "src": "3681:14:79",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9850,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3681:7:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3615:86:79"
            },
            "payable": false,
            "returnParameters": {
              "id": 9855,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9854,
                  "name": "partialAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 9863,
                  "src": "3747:21:79",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9853,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3747:7:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3746:23:79"
            },
            "scope": 9940,
            "src": "3579:272:79",
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 9880,
              "nodeType": "Block",
              "src": "4294:76:79",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 9875,
                        "name": "numerator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9865,
                        "src": "4332:9:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 9876,
                        "name": "denominator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9867,
                        "src": "4343:11:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 9877,
                        "name": "target",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9869,
                        "src": "4356:6:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 9874,
                      "name": "getPartialAmountCeil",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4564,
                      "src": "4311:20:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 9878,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4311:52:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 9873,
                  "id": 9879,
                  "nodeType": "Return",
                  "src": "4304:59:79"
                }
              ]
            },
            "documentation": "@dev Calculates partial value given a numerator and denominator.\n @param numerator Numerator.\n @param denominator Denominator.\n @param target Value to calculate partial of.\n @return Partial value of target.",
            "id": 9881,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "publicGetPartialAmountCeil",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9870,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9865,
                  "name": "numerator",
                  "nodeType": "VariableDeclaration",
                  "scope": 9881,
                  "src": "4145:17:79",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9864,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4145:7:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9867,
                  "name": "denominator",
                  "nodeType": "VariableDeclaration",
                  "scope": 9881,
                  "src": "4172:19:79",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9866,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4172:7:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9869,
                  "name": "target",
                  "nodeType": "VariableDeclaration",
                  "scope": 9881,
                  "src": "4201:14:79",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9868,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4201:7:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4135:86:79"
            },
            "payable": false,
            "returnParameters": {
              "id": 9873,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9872,
                  "name": "partialAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 9881,
                  "src": "4267:21:79",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9871,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4267:7:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4266:23:79"
            },
            "scope": 9940,
            "src": "4100:270:79",
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 9898,
              "nodeType": "Block",
              "src": "4795:76:79",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 9893,
                        "name": "numerator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9883,
                        "src": "4833:9:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 9894,
                        "name": "denominator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9885,
                        "src": "4844:11:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 9895,
                        "name": "target",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9887,
                        "src": "4857:6:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 9892,
                      "name": "isRoundingErrorFloor",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4616,
                      "src": "4812:20:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (uint256,uint256,uint256) pure returns (bool)"
                      }
                    },
                    "id": 9896,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4812:52:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 9891,
                  "id": 9897,
                  "nodeType": "Return",
                  "src": "4805:59:79"
                }
              ]
            },
            "documentation": "@dev Checks if rounding error >= 0.1%.\n @param numerator Numerator.\n @param denominator Denominator.\n @param target Value to multiply with numerator/denominator.\n @return Rounding error is present.",
            "id": 9899,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "publicIsRoundingErrorFloor",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9888,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9883,
                  "name": "numerator",
                  "nodeType": "VariableDeclaration",
                  "scope": 9899,
                  "src": "4655:17:79",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9882,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4655:7:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9885,
                  "name": "denominator",
                  "nodeType": "VariableDeclaration",
                  "scope": 9899,
                  "src": "4682:19:79",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9884,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4682:7:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9887,
                  "name": "target",
                  "nodeType": "VariableDeclaration",
                  "scope": 9899,
                  "src": "4711:14:79",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9886,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4711:7:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4645:86:79"
            },
            "payable": false,
            "returnParameters": {
              "id": 9891,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9890,
                  "name": "isError",
                  "nodeType": "VariableDeclaration",
                  "scope": 9899,
                  "src": "4777:12:79",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 9889,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4777:4:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4776:14:79"
            },
            "scope": 9940,
            "src": "4610:261:79",
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 9916,
              "nodeType": "Block",
              "src": "5295:75:79",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 9911,
                        "name": "numerator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9901,
                        "src": "5332:9:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 9912,
                        "name": "denominator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9903,
                        "src": "5343:11:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 9913,
                        "name": "target",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9905,
                        "src": "5356:6:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 9910,
                      "name": "isRoundingErrorCeil",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4677,
                      "src": "5312:19:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (uint256,uint256,uint256) pure returns (bool)"
                      }
                    },
                    "id": 9914,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5312:51:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 9909,
                  "id": 9915,
                  "nodeType": "Return",
                  "src": "5305:58:79"
                }
              ]
            },
            "documentation": "@dev Checks if rounding error >= 0.1%.\n @param numerator Numerator.\n @param denominator Denominator.\n @param target Value to multiply with numerator/denominator.\n @return Rounding error is present.",
            "id": 9917,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "publicIsRoundingErrorCeil",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9906,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9901,
                  "name": "numerator",
                  "nodeType": "VariableDeclaration",
                  "scope": 9917,
                  "src": "5155:17:79",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9900,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5155:7:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9903,
                  "name": "denominator",
                  "nodeType": "VariableDeclaration",
                  "scope": 9917,
                  "src": "5182:19:79",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9902,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5182:7:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9905,
                  "name": "target",
                  "nodeType": "VariableDeclaration",
                  "scope": 9917,
                  "src": "5211:14:79",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9904,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5211:7:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5145:86:79"
            },
            "payable": false,
            "returnParameters": {
              "id": 9909,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9908,
                  "name": "isError",
                  "nodeType": "VariableDeclaration",
                  "scope": 9917,
                  "src": "5277:12:79",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 9907,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5277:4:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5276:14:79"
            },
            "scope": 9940,
            "src": "5111:259:79",
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 9938,
              "nodeType": "Block",
              "src": "5919:178:79",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 9931,
                        "name": "order",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9919,
                        "src": "5960:5:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Order_$4737_memory_ptr",
                          "typeString": "struct LibOrder.Order memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 9932,
                        "name": "takerAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9921,
                        "src": "5979:12:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 9933,
                        "name": "orderHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9923,
                        "src": "6005:9:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 9934,
                        "name": "orderTakerAssetFilledAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9925,
                        "src": "6028:27:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 9935,
                        "name": "fillResults",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9927,
                        "src": "6069:11:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_FillResults_$4343_memory_ptr",
                          "typeString": "struct LibFillResults.FillResults memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Order_$4737_memory_ptr",
                          "typeString": "struct LibOrder.Order memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_struct$_FillResults_$4343_memory_ptr",
                          "typeString": "struct LibFillResults.FillResults memory"
                        }
                      ],
                      "id": 9930,
                      "name": "updateFilledState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        7296
                      ],
                      "referencedDeclaration": 7296,
                      "src": "5929:17:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Order_$4737_memory_ptr_$_t_address_$_t_bytes32_$_t_uint256_$_t_struct$_FillResults_$4343_memory_ptr_$returns$__$",
                        "typeString": "function (struct LibOrder.Order memory,address,bytes32,uint256,struct LibFillResults.FillResults memory)"
                      }
                    },
                    "id": 9936,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5929:161:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9937,
                  "nodeType": "ExpressionStatement",
                  "src": "5929:161:79"
                }
              ]
            },
            "documentation": "@dev Updates state with results of a fill order.\n @param order that was filled.\n @param takerAddress Address of taker who filled the order.\n @param orderTakerAssetFilledAmount Amount of order already filled.\n @return fillResults Amounts filled and fees paid by maker and taker.",
            "id": 9939,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "publicUpdateFilledState",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9928,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9919,
                  "name": "order",
                  "nodeType": "VariableDeclaration",
                  "scope": 9939,
                  "src": "5733:18:79",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Order_$4737_memory_ptr",
                    "typeString": "struct LibOrder.Order"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 9918,
                    "name": "Order",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 4737,
                    "src": "5733:5:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Order_$4737_storage_ptr",
                      "typeString": "struct LibOrder.Order"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9921,
                  "name": "takerAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 9939,
                  "src": "5761:20:79",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9920,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5761:7:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9923,
                  "name": "orderHash",
                  "nodeType": "VariableDeclaration",
                  "scope": 9939,
                  "src": "5791:17:79",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 9922,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5791:7:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9925,
                  "name": "orderTakerAssetFilledAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 9939,
                  "src": "5818:35:79",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9924,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5818:7:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9927,
                  "name": "fillResults",
                  "nodeType": "VariableDeclaration",
                  "scope": 9939,
                  "src": "5863:30:79",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_FillResults_$4343_memory_ptr",
                    "typeString": "struct LibFillResults.FillResults"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 9926,
                    "name": "FillResults",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 4343,
                    "src": "5863:11:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_FillResults_$4343_storage_ptr",
                      "typeString": "struct LibFillResults.FillResults"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5723:176:79"
            },
            "payable": false,
            "returnParameters": {
              "id": 9929,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5919:0:79"
            },
            "scope": 9940,
            "src": "5691:406:79",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 9941,
        "src": "723:5376:79"
      }
    ],
    "src": "580:5520:79"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.24+commit.e67f0147.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.0",
  "updatedAt": "2018-12-28T17:39:10.983Z",
  "devdoc": {
    "methods": {
      "batchCancelOrders((address,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[])": {
        "details": "Synchronously cancels multiple orders in a single transaction.",
        "params": {
          "orders": "Array of order specifications."
        }
      },
      "batchFillOrKillOrders((address,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[],uint256[],bytes[])": {
        "details": "Synchronously executes multiple calls of fillOrKill.",
        "params": {
          "orders": "Array of order specifications.",
          "signatures": "Proofs that orders have been created by makers.",
          "takerAssetFillAmounts": "Array of desired amounts of takerAsset to sell in orders."
        },
        "return": "Amounts filled and fees paid by makers and taker.         NOTE: makerAssetFilledAmount and takerAssetFilledAmount may include amounts filled of different assets."
      },
      "batchFillOrders((address,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[],uint256[],bytes[])": {
        "details": "Synchronously executes multiple calls of fillOrder.",
        "params": {
          "orders": "Array of order specifications.",
          "signatures": "Proofs that orders have been created by makers.",
          "takerAssetFillAmounts": "Array of desired amounts of takerAsset to sell in orders."
        },
        "return": "Amounts filled and fees paid by makers and taker.         NOTE: makerAssetFilledAmount and takerAssetFilledAmount may include amounts filled of different assets."
      },
      "batchFillOrdersNoThrow((address,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[],uint256[],bytes[])": {
        "details": "Fills an order with specified parameters and ECDSA signature.      Returns false if the transaction would otherwise revert.",
        "params": {
          "orders": "Array of order specifications.",
          "signatures": "Proofs that orders have been created by makers.",
          "takerAssetFillAmounts": "Array of desired amounts of takerAsset to sell in orders."
        },
        "return": "Amounts filled and fees paid by makers and taker.         NOTE: makerAssetFilledAmount and takerAssetFilledAmount may include amounts filled of different assets."
      },
      "cancelOrder((address,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,bytes,bytes))": {
        "details": "After calling, the order can not be filled anymore.      Throws if order is invalid or sender does not have permission to cancel.",
        "params": {
          "order": "Order to cancel. Order must be OrderStatus.FILLABLE."
        }
      },
      "cancelOrdersUpTo(uint256)": {
        "details": "Cancels all orders created by makerAddress with a salt less than or equal to the targetOrderEpoch      and senderAddress equal to msg.sender (or null address if msg.sender == makerAddress).",
        "params": {
          "targetOrderEpoch": "Orders created with a salt less or equal to this value will be cancelled."
        }
      },
      "executeTransaction(uint256,address,bytes,bytes)": {
        "details": "Executes an exchange method call in the context of signer.",
        "params": {
          "data": "AbiV2 encoded calldata.",
          "salt": "Arbitrary number to ensure uniqueness of transaction hash.",
          "signature": "Proof of signer transaction by signer.",
          "signerAddress": "Address of transaction signer."
        }
      },
      "fillOrKillOrder((address,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,bytes,bytes),uint256,bytes)": {
        "details": "Fills the input order. Reverts if exact takerAssetFillAmount not filled.",
        "params": {
          "order": "Order struct containing order specifications.",
          "signature": "Proof that order has been created by maker.",
          "takerAssetFillAmount": "Desired amount of takerAsset to sell."
        }
      },
      "fillOrder((address,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,bytes,bytes),uint256,bytes)": {
        "details": "Fills the input order.",
        "params": {
          "order": "Order struct containing order specifications.",
          "signature": "Proof that order has been created by maker.",
          "takerAssetFillAmount": "Desired amount of takerAsset to sell."
        },
        "return": "Amounts filled and fees paid by maker and taker."
      },
      "fillOrderNoThrow((address,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,bytes,bytes),uint256,bytes)": {
        "details": "Fills the input order.      Returns false if the transaction would otherwise revert.",
        "params": {
          "order": "Order struct containing order specifications.",
          "signature": "Proof that order has been created by maker.",
          "takerAssetFillAmount": "Desired amount of takerAsset to sell."
        },
        "return": "Amounts filled and fees paid by maker and taker."
      },
      "getAssetProxy(bytes4)": {
        "details": "Gets an asset proxy.",
        "params": {
          "assetProxyId": "Id of the asset proxy."
        },
        "return": "The asset proxy registered to assetProxyId. Returns 0x0 if no proxy is registered."
      },
      "getOrderInfo((address,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,bytes,bytes))": {
        "details": "Gets information about an order: status, hash, and amount filled.",
        "params": {
          "order": "Order to gather information on."
        },
        "return": "OrderInfo Information about the order and its state.         See LibOrder.OrderInfo for a complete description."
      },
      "getOrdersInfo((address,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[])": {
        "details": "Fetches information for all passed in orders.",
        "params": {
          "orders": "Array of order specifications."
        },
        "return": "Array of OrderInfo instances that correspond to each order."
      },
      "isValidSignature(bytes32,address,bytes)": {
        "details": "Verifies that a hash has been signed by the given signer.",
        "params": {
          "hash": "Any 32 byte hash.",
          "signature": "Proof that the hash has been signed by signer.",
          "signerAddress": "Address that should have signed the given hash."
        },
        "return": "True if the address recovered from the provided signature matches the input signer address."
      },
      "marketBuyOrders((address,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[],uint256,bytes[])": {
        "details": "Synchronously executes multiple calls of fillOrder until total amount of makerAsset is bought by taker.",
        "params": {
          "makerAssetFillAmount": "Desired amount of makerAsset to buy.",
          "orders": "Array of order specifications.",
          "signatures": "Proofs that orders have been signed by makers."
        },
        "return": "Amounts filled and fees paid by makers and taker."
      },
      "marketBuyOrdersNoThrow((address,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[],uint256,bytes[])": {
        "details": "Synchronously executes multiple fill orders in a single transaction until total amount is bought by taker.      Returns false if the transaction would otherwise revert.",
        "params": {
          "makerAssetFillAmount": "Desired amount of makerAsset to buy.",
          "orders": "Array of order specifications.",
          "signatures": "Proofs that orders have been signed by makers."
        },
        "return": "Amounts filled and fees paid by makers and taker."
      },
      "marketSellOrders((address,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[],uint256,bytes[])": {
        "details": "Synchronously executes multiple calls of fillOrder until total amount of takerAsset is sold by taker.",
        "params": {
          "orders": "Array of order specifications.",
          "signatures": "Proofs that orders have been created by makers.",
          "takerAssetFillAmount": "Desired amount of takerAsset to sell."
        },
        "return": "Amounts filled and fees paid by makers and taker."
      },
      "marketSellOrdersNoThrow((address,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[],uint256,bytes[])": {
        "details": "Synchronously executes multiple calls of fillOrder until total amount of takerAsset is sold by taker.      Returns false if the transaction would otherwise revert.",
        "params": {
          "orders": "Array of order specifications.",
          "signatures": "Proofs that orders have been signed by makers.",
          "takerAssetFillAmount": "Desired amount of takerAsset to sell."
        },
        "return": "Amounts filled and fees paid by makers and taker."
      },
      "matchOrders((address,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,bytes,bytes),(address,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes,bytes)": {
        "details": "Match two complementary orders that have a profitable spread.      Each order is filled at their respective price point. However, the calculations are      carried out as though the orders are both being filled at the right order's price point.      The profit made by the left order goes to the taker (who matched the two orders).",
        "params": {
          "leftOrder": "First order to match.",
          "leftSignature": "Proof that order was created by the left maker.",
          "rightOrder": "Second order to match.",
          "rightSignature": "Proof that order was created by the right maker."
        },
        "return": "matchedFillResults Amounts filled and fees paid by maker and taker of matched orders."
      },
      "preSign(bytes32,address,bytes)": {
        "details": "Approves a hash on-chain using any valid signature type.      After presigning a hash, the preSign signature type will become valid for that hash and signer.",
        "params": {
          "signature": "Proof that the hash has been signed by signer.",
          "signerAddress": "Address that should have signed the given hash."
        }
      },
      "publicAddFillResults((uint256,uint256,uint256,uint256),(uint256,uint256,uint256,uint256))": {
        "params": {
          "singleFillResults": "Fill results instance that will be added to totalFillResults.",
          "totalFillResults": "Fill results instance that will be added onto."
        },
        "return": "newTotalFillResults The result of adding singleFillResults to totalFilResults."
      },
      "publicCalculateFillResults((address,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,bytes,bytes),uint256)": {
        "details": "Calculates amounts filled and fees paid by maker and taker.",
        "params": {
          "order": "to be filled.",
          "takerAssetFilledAmount": "Amount of takerAsset that will be filled."
        },
        "return": "fillResults Amounts filled and fees paid by maker and taker."
      },
      "publicGetPartialAmountCeil(uint256,uint256,uint256)": {
        "details": "Calculates partial value given a numerator and denominator.",
        "params": {
          "denominator": "Denominator.",
          "numerator": "Numerator.",
          "target": "Value to calculate partial of."
        },
        "return": "Partial value of target."
      },
      "publicGetPartialAmountFloor(uint256,uint256,uint256)": {
        "details": "Calculates partial value given a numerator and denominator.",
        "params": {
          "denominator": "Denominator.",
          "numerator": "Numerator.",
          "target": "Value to calculate partial of."
        },
        "return": "Partial value of target."
      },
      "publicIsRoundingErrorCeil(uint256,uint256,uint256)": {
        "details": "Checks if rounding error >= 0.1%.",
        "params": {
          "denominator": "Denominator.",
          "numerator": "Numerator.",
          "target": "Value to multiply with numerator/denominator."
        },
        "return": "Rounding error is present."
      },
      "publicIsRoundingErrorFloor(uint256,uint256,uint256)": {
        "details": "Checks if rounding error >= 0.1%.",
        "params": {
          "denominator": "Denominator.",
          "numerator": "Numerator.",
          "target": "Value to multiply with numerator/denominator."
        },
        "return": "Rounding error is present."
      },
      "publicSafeGetPartialAmountCeil(uint256,uint256,uint256)": {
        "details": "Calculates partial value given a numerator and denominator.      Reverts if rounding error is >= 0.1%",
        "params": {
          "denominator": "Denominator.",
          "numerator": "Numerator.",
          "target": "Value to calculate partial of."
        },
        "return": "Partial value of target."
      },
      "publicSafeGetPartialAmountFloor(uint256,uint256,uint256)": {
        "details": "Calculates partial value given a numerator and denominator.      Reverts if rounding error is >= 0.1%",
        "params": {
          "denominator": "Denominator.",
          "numerator": "Numerator.",
          "target": "Value to calculate partial of."
        },
        "return": "Partial value of target."
      },
      "publicUpdateFilledState((address,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,bytes,bytes),address,bytes32,uint256,(uint256,uint256,uint256,uint256))": {
        "details": "Updates state with results of a fill order.",
        "params": {
          "order": "that was filled.",
          "orderTakerAssetFilledAmount": "Amount of order already filled.",
          "takerAddress": "Address of taker who filled the order."
        },
        "return": "fillResults Amounts filled and fees paid by maker and taker."
      },
      "registerAssetProxy(address)": {
        "details": "Registers an asset proxy to its asset proxy id.      Once an asset proxy is registered, it cannot be unregistered.",
        "params": {
          "assetProxy": "Address of new asset proxy to register."
        }
      },
      "setSignatureValidatorApproval(address,bool)": {
        "details": "Approves/unnapproves a Validator contract to verify signatures on signer's behalf.",
        "params": {
          "approval": "Approval or disapproval of  Validator contract.",
          "validatorAddress": "Address of Validator contract."
        }
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}