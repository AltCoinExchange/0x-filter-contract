{
  "contractName": "TestStaticCallReceiver",
  "abi": [
    {
      "constant": false,
      "inputs": [
        {
          "name": "hash",
          "type": "bytes32"
        },
        {
          "name": "signature",
          "type": "bytes"
        }
      ],
      "name": "isValidSignature",
      "outputs": [
        {
          "name": "isValid",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "hash",
          "type": "bytes32"
        },
        {
          "name": "signerAddress",
          "type": "address"
        },
        {
          "name": "signature",
          "type": "bytes"
        }
      ],
      "name": "isValidSignature",
      "outputs": [
        {
          "name": "isValid",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "token",
          "type": "address"
        },
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "approveERC20",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "0x6080604052600160005534801561001557600080fd5b506102f9806100256000396000f300608060405260043610610057576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680631626ba7e1461005c57806393634702146100bd578063a8e5e4aa1461013e575b600080fd5b34801561006857600080fd5b506100a360048036038101908080356000191690602001909291908035906020019082018035906020019190919293919293905050506101ab565b604051808215151515815260200191505060405180910390f35b3480156100c957600080fd5b506101246004803603810190808035600019169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019082018035906020019190919293919293905050506101c0565b604051808215151515815260200191505060405180910390f35b34801561014a57600080fd5b506101a9600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506101d6565b005b60006101b56102ba565b600190509392505050565b60006101ca6102ba565b60019050949350505050565b8273ffffffffffffffffffffffffffffffffffffffff1663095ea7b383836040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b15801561027957600080fd5b505af115801561028d573d6000803e3d6000fd5b505050506040513d60208110156102a357600080fd5b810190808051906020019092919050505050505050565b60008081548092919060010191905055505600a165627a7a7230582074a36b93b64af5660561c11d7f89bf608a0c3faf0282f1de306747c4fd394b400029",
  "deployedBytecode": "0x608060405260043610610057576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680631626ba7e1461005c57806393634702146100bd578063a8e5e4aa1461013e575b600080fd5b34801561006857600080fd5b506100a360048036038101908080356000191690602001909291908035906020019082018035906020019190919293919293905050506101ab565b604051808215151515815260200191505060405180910390f35b3480156100c957600080fd5b506101246004803603810190808035600019169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019082018035906020019190919293919293905050506101c0565b604051808215151515815260200191505060405180910390f35b34801561014a57600080fd5b506101a9600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506101d6565b005b60006101b56102ba565b600190509392505050565b60006101ca6102ba565b60019050949350505050565b8273ffffffffffffffffffffffffffffffffffffffff1663095ea7b383836040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b15801561027957600080fd5b505af115801561028d573d6000803e3d6000fd5b505050506040513d60208110156102a357600080fd5b810190808051906020019092919050505050505050565b60008081548092919060010191905055505600a165627a7a7230582074a36b93b64af5660561c11d7f89bf608a0c3faf0282f1de306747c4fd394b400029",
  "sourceMap": "714:1558:81:-;;;778:1;753:26;;714:1558;8:9:-1;5:2;;;30:1;27;20:12;5:2;714:1558:81;;;;;;;",
  "deployedSourceMap": "714:1558:81:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1549:182;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1549:182:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1098:213;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1098:213:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1977:179;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1977:179:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1549:182;1662:12;1690:13;:11;:13::i;:::-;1720:4;1713:11;;1549:182;;;;;:::o;1098:213::-;1242:12;1270:13;:11;:13::i;:::-;1300:4;1293:11;;1098:213;;;;;;:::o;1977:179::-;2119:5;2107:26;;;2134:7;2143:5;2107:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2107:42:81;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2107:42:81;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2107:42:81;;;;;;;;;;;;;;;;;1977:179;;;:::o;2202:68::-;2256:5;;:7;;;;;;;;;;;;;2202:68::o",
  "source": "/*\n\n  Copyright 2018 ZeroEx Intl.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n\n*/\n\npragma solidity 0.4.24;\n\nimport \"../../../../tokens/contracts/tokens/ERC20Token/IERC20Token.sol\";\n\n\n// solhint-disable no-unused-vars\ncontract TestStaticCallReceiver {\n\n    uint256 internal state = 1;\n\n    /// @dev Updates state and returns true. Intended to be used with `Validator` signature type.\n    /// @param hash Message hash that is signed.\n    /// @param signerAddress Address that should have signed the given hash.\n    /// @param signature Proof of signing.\n    /// @return Validity of order signature.\n    function isValidSignature(\n        bytes32 hash,\n        address signerAddress,\n        bytes signature\n    )\n        external\n        returns (bool isValid)\n    {\n        updateState();\n        return true;\n    }\n\n    /// @dev Updates state and returns true. Intended to be used with `Wallet` signature type.\n    /// @param hash Message hash that is signed.\n    /// @param signature Proof of signing.\n    /// @return Validity of order signature.\n    function isValidSignature(\n        bytes32 hash,\n        bytes signature\n    )\n        external\n        returns (bool isValid)\n    {\n        updateState();\n        return true;\n    }\n\n    /// @dev Approves an ERC20 token to spend tokens from this address.\n    /// @param token Address of ERC20 token.\n    /// @param spender Address that will spend tokens.\n    /// @param value Amount of tokens spender is approved to spend.\n    function approveERC20(\n        address token,\n        address spender,\n        uint256 value\n    )\n        external\n    {\n        IERC20Token(token).approve(spender, value);\n    }\n\n    /// @dev Increments state variable.\n    function updateState()\n        internal\n    {\n        state++;\n    }\n}\n",
  "sourcePath": "/Users/lawrenceballou/Desktop/BlockNerds/Clients/AltcoinIo/filter-contract/contracts/protocol/contracts/test/TestStaticCallReceiver/TestStaticCallReceiver.sol",
  "ast": {
    "absolutePath": "/Users/lawrenceballou/Desktop/BlockNerds/Clients/AltcoinIo/filter-contract/contracts/protocol/contracts/test/TestStaticCallReceiver/TestStaticCallReceiver.sol",
    "exportedSymbols": {
      "TestStaticCallReceiver": [
        10035
      ]
    },
    "id": 10036,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 9973,
        "literals": [
          "solidity",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "580:23:81"
      },
      {
        "absolutePath": "/Users/lawrenceballou/Desktop/BlockNerds/Clients/AltcoinIo/filter-contract/contracts/tokens/contracts/tokens/ERC20Token/IERC20Token.sol",
        "file": "../../../../tokens/contracts/tokens/ERC20Token/IERC20Token.sol",
        "id": 9974,
        "nodeType": "ImportDirective",
        "scope": 10036,
        "sourceUnit": 11124,
        "src": "605:72:81",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 10035,
        "linearizedBaseContracts": [
          10035
        ],
        "name": "TestStaticCallReceiver",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 9977,
            "name": "state",
            "nodeType": "VariableDeclaration",
            "scope": 10035,
            "src": "753:26:81",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 9975,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "753:7:81",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "31",
              "id": 9976,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "778:1:81",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1_by_1",
                "typeString": "int_const 1"
              },
              "value": "1"
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 9993,
              "nodeType": "Block",
              "src": "1260:51:81",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 9988,
                      "name": "updateState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10034,
                      "src": "1270:11:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 9989,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1270:13:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9990,
                  "nodeType": "ExpressionStatement",
                  "src": "1270:13:81"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 9991,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1300:4:81",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 9987,
                  "id": 9992,
                  "nodeType": "Return",
                  "src": "1293:11:81"
                }
              ]
            },
            "documentation": "@dev Updates state and returns true. Intended to be used with `Validator` signature type.\n @param hash Message hash that is signed.\n @param signerAddress Address that should have signed the given hash.\n @param signature Proof of signing.\n @return Validity of order signature.",
            "id": 9994,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "isValidSignature",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9984,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9979,
                  "name": "hash",
                  "nodeType": "VariableDeclaration",
                  "scope": 9994,
                  "src": "1133:12:81",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 9978,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1133:7:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9981,
                  "name": "signerAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 9994,
                  "src": "1155:21:81",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9980,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1155:7:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9983,
                  "name": "signature",
                  "nodeType": "VariableDeclaration",
                  "scope": 9994,
                  "src": "1186:15:81",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 9982,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1186:5:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1123:84:81"
            },
            "payable": false,
            "returnParameters": {
              "id": 9987,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9986,
                  "name": "isValid",
                  "nodeType": "VariableDeclaration",
                  "scope": 9994,
                  "src": "1242:12:81",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 9985,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1242:4:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1241:14:81"
            },
            "scope": 10035,
            "src": "1098:213:81",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 10008,
              "nodeType": "Block",
              "src": "1680:51:81",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 10003,
                      "name": "updateState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10034,
                      "src": "1690:11:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 10004,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1690:13:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10005,
                  "nodeType": "ExpressionStatement",
                  "src": "1690:13:81"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 10006,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1720:4:81",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 10002,
                  "id": 10007,
                  "nodeType": "Return",
                  "src": "1713:11:81"
                }
              ]
            },
            "documentation": "@dev Updates state and returns true. Intended to be used with `Wallet` signature type.\n @param hash Message hash that is signed.\n @param signature Proof of signing.\n @return Validity of order signature.",
            "id": 10009,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "isValidSignature",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9999,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9996,
                  "name": "hash",
                  "nodeType": "VariableDeclaration",
                  "scope": 10009,
                  "src": "1584:12:81",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 9995,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1584:7:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9998,
                  "name": "signature",
                  "nodeType": "VariableDeclaration",
                  "scope": 10009,
                  "src": "1606:15:81",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 9997,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1606:5:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1574:53:81"
            },
            "payable": false,
            "returnParameters": {
              "id": 10002,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10001,
                  "name": "isValid",
                  "nodeType": "VariableDeclaration",
                  "scope": 10009,
                  "src": "1662:12:81",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 10000,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1662:4:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1661:14:81"
            },
            "scope": 10035,
            "src": "1549:182:81",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 10026,
              "nodeType": "Block",
              "src": "2097:59:81",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 10022,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10013,
                        "src": "2134:7:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 10023,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10015,
                        "src": "2143:5:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 10019,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10011,
                            "src": "2119:5:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 10018,
                          "name": "IERC20Token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11123,
                          "src": "2107:11:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20Token_$11123_$",
                            "typeString": "type(contract IERC20Token)"
                          }
                        },
                        "id": 10020,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2107:18:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Token_$11123",
                          "typeString": "contract IERC20Token"
                        }
                      },
                      "id": 10021,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11101,
                      "src": "2107:26:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 10024,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2107:42:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 10025,
                  "nodeType": "ExpressionStatement",
                  "src": "2107:42:81"
                }
              ]
            },
            "documentation": "@dev Approves an ERC20 token to spend tokens from this address.\n @param token Address of ERC20 token.\n @param spender Address that will spend tokens.\n @param value Amount of tokens spender is approved to spend.",
            "id": 10027,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "approveERC20",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10016,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10011,
                  "name": "token",
                  "nodeType": "VariableDeclaration",
                  "scope": 10027,
                  "src": "2008:13:81",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10010,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2008:7:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10013,
                  "name": "spender",
                  "nodeType": "VariableDeclaration",
                  "scope": 10027,
                  "src": "2031:15:81",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10012,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2031:7:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10015,
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 10027,
                  "src": "2056:13:81",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10014,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2056:7:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1998:77:81"
            },
            "payable": false,
            "returnParameters": {
              "id": 10017,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2097:0:81"
            },
            "scope": 10035,
            "src": "1977:179:81",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 10033,
              "nodeType": "Block",
              "src": "2246:24:81",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 10031,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "2256:7:81",
                    "subExpression": {
                      "argumentTypes": null,
                      "id": 10030,
                      "name": "state",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9977,
                      "src": "2256:5:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 10032,
                  "nodeType": "ExpressionStatement",
                  "src": "2256:7:81"
                }
              ]
            },
            "documentation": "@dev Increments state variable.",
            "id": 10034,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "updateState",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10028,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2222:2:81"
            },
            "payable": false,
            "returnParameters": {
              "id": 10029,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2246:0:81"
            },
            "scope": 10035,
            "src": "2202:68:81",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          }
        ],
        "scope": 10036,
        "src": "714:1558:81"
      }
    ],
    "src": "580:1693:81"
  },
  "legacyAST": {
    "absolutePath": "/Users/lawrenceballou/Desktop/BlockNerds/Clients/AltcoinIo/filter-contract/contracts/protocol/contracts/test/TestStaticCallReceiver/TestStaticCallReceiver.sol",
    "exportedSymbols": {
      "TestStaticCallReceiver": [
        10035
      ]
    },
    "id": 10036,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 9973,
        "literals": [
          "solidity",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "580:23:81"
      },
      {
        "absolutePath": "/Users/lawrenceballou/Desktop/BlockNerds/Clients/AltcoinIo/filter-contract/contracts/tokens/contracts/tokens/ERC20Token/IERC20Token.sol",
        "file": "../../../../tokens/contracts/tokens/ERC20Token/IERC20Token.sol",
        "id": 9974,
        "nodeType": "ImportDirective",
        "scope": 10036,
        "sourceUnit": 11124,
        "src": "605:72:81",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 10035,
        "linearizedBaseContracts": [
          10035
        ],
        "name": "TestStaticCallReceiver",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 9977,
            "name": "state",
            "nodeType": "VariableDeclaration",
            "scope": 10035,
            "src": "753:26:81",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 9975,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "753:7:81",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "31",
              "id": 9976,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "778:1:81",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1_by_1",
                "typeString": "int_const 1"
              },
              "value": "1"
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 9993,
              "nodeType": "Block",
              "src": "1260:51:81",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 9988,
                      "name": "updateState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10034,
                      "src": "1270:11:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 9989,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1270:13:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9990,
                  "nodeType": "ExpressionStatement",
                  "src": "1270:13:81"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 9991,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1300:4:81",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 9987,
                  "id": 9992,
                  "nodeType": "Return",
                  "src": "1293:11:81"
                }
              ]
            },
            "documentation": "@dev Updates state and returns true. Intended to be used with `Validator` signature type.\n @param hash Message hash that is signed.\n @param signerAddress Address that should have signed the given hash.\n @param signature Proof of signing.\n @return Validity of order signature.",
            "id": 9994,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "isValidSignature",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9984,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9979,
                  "name": "hash",
                  "nodeType": "VariableDeclaration",
                  "scope": 9994,
                  "src": "1133:12:81",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 9978,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1133:7:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9981,
                  "name": "signerAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 9994,
                  "src": "1155:21:81",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9980,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1155:7:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9983,
                  "name": "signature",
                  "nodeType": "VariableDeclaration",
                  "scope": 9994,
                  "src": "1186:15:81",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 9982,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1186:5:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1123:84:81"
            },
            "payable": false,
            "returnParameters": {
              "id": 9987,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9986,
                  "name": "isValid",
                  "nodeType": "VariableDeclaration",
                  "scope": 9994,
                  "src": "1242:12:81",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 9985,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1242:4:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1241:14:81"
            },
            "scope": 10035,
            "src": "1098:213:81",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 10008,
              "nodeType": "Block",
              "src": "1680:51:81",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 10003,
                      "name": "updateState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10034,
                      "src": "1690:11:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 10004,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1690:13:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10005,
                  "nodeType": "ExpressionStatement",
                  "src": "1690:13:81"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 10006,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1720:4:81",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 10002,
                  "id": 10007,
                  "nodeType": "Return",
                  "src": "1713:11:81"
                }
              ]
            },
            "documentation": "@dev Updates state and returns true. Intended to be used with `Wallet` signature type.\n @param hash Message hash that is signed.\n @param signature Proof of signing.\n @return Validity of order signature.",
            "id": 10009,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "isValidSignature",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9999,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9996,
                  "name": "hash",
                  "nodeType": "VariableDeclaration",
                  "scope": 10009,
                  "src": "1584:12:81",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 9995,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1584:7:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9998,
                  "name": "signature",
                  "nodeType": "VariableDeclaration",
                  "scope": 10009,
                  "src": "1606:15:81",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 9997,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1606:5:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1574:53:81"
            },
            "payable": false,
            "returnParameters": {
              "id": 10002,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10001,
                  "name": "isValid",
                  "nodeType": "VariableDeclaration",
                  "scope": 10009,
                  "src": "1662:12:81",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 10000,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1662:4:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1661:14:81"
            },
            "scope": 10035,
            "src": "1549:182:81",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 10026,
              "nodeType": "Block",
              "src": "2097:59:81",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 10022,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10013,
                        "src": "2134:7:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 10023,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10015,
                        "src": "2143:5:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 10019,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10011,
                            "src": "2119:5:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 10018,
                          "name": "IERC20Token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11123,
                          "src": "2107:11:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20Token_$11123_$",
                            "typeString": "type(contract IERC20Token)"
                          }
                        },
                        "id": 10020,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2107:18:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Token_$11123",
                          "typeString": "contract IERC20Token"
                        }
                      },
                      "id": 10021,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11101,
                      "src": "2107:26:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 10024,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2107:42:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 10025,
                  "nodeType": "ExpressionStatement",
                  "src": "2107:42:81"
                }
              ]
            },
            "documentation": "@dev Approves an ERC20 token to spend tokens from this address.\n @param token Address of ERC20 token.\n @param spender Address that will spend tokens.\n @param value Amount of tokens spender is approved to spend.",
            "id": 10027,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "approveERC20",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10016,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10011,
                  "name": "token",
                  "nodeType": "VariableDeclaration",
                  "scope": 10027,
                  "src": "2008:13:81",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10010,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2008:7:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10013,
                  "name": "spender",
                  "nodeType": "VariableDeclaration",
                  "scope": 10027,
                  "src": "2031:15:81",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10012,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2031:7:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10015,
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 10027,
                  "src": "2056:13:81",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10014,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2056:7:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1998:77:81"
            },
            "payable": false,
            "returnParameters": {
              "id": 10017,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2097:0:81"
            },
            "scope": 10035,
            "src": "1977:179:81",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 10033,
              "nodeType": "Block",
              "src": "2246:24:81",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 10031,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "2256:7:81",
                    "subExpression": {
                      "argumentTypes": null,
                      "id": 10030,
                      "name": "state",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9977,
                      "src": "2256:5:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 10032,
                  "nodeType": "ExpressionStatement",
                  "src": "2256:7:81"
                }
              ]
            },
            "documentation": "@dev Increments state variable.",
            "id": 10034,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "updateState",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10028,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2222:2:81"
            },
            "payable": false,
            "returnParameters": {
              "id": 10029,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2246:0:81"
            },
            "scope": 10035,
            "src": "2202:68:81",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          }
        ],
        "scope": 10036,
        "src": "714:1558:81"
      }
    ],
    "src": "580:1693:81"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.24+commit.e67f0147.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.0",
  "updatedAt": "2018-12-28T17:39:10.985Z",
  "devdoc": {
    "methods": {
      "approveERC20(address,address,uint256)": {
        "details": "Approves an ERC20 token to spend tokens from this address.",
        "params": {
          "spender": "Address that will spend tokens.",
          "token": "Address of ERC20 token.",
          "value": "Amount of tokens spender is approved to spend."
        }
      },
      "isValidSignature(bytes32,address,bytes)": {
        "details": "Updates state and returns true. Intended to be used with `Validator` signature type.",
        "params": {
          "hash": "Message hash that is signed.",
          "signature": "Proof of signing.",
          "signerAddress": "Address that should have signed the given hash."
        },
        "return": "Validity of order signature."
      },
      "isValidSignature(bytes32,bytes)": {
        "details": "Updates state and returns true. Intended to be used with `Wallet` signature type.",
        "params": {
          "hash": "Message hash that is signed.",
          "signature": "Proof of signing."
        },
        "return": "Validity of order signature."
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}