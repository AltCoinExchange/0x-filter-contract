{
  "contractName": "Whitelist",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "isWhitelisted",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x3af32abf"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x8da5cb5b"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0xf2fde38b"
    },
    {
      "inputs": [
        {
          "name": "_exchange",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor",
      "signature": "constructor"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "target",
          "type": "address"
        },
        {
          "name": "isApproved",
          "type": "bool"
        }
      ],
      "name": "updateWhitelistStatus",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0xc07732a3"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "hash",
          "type": "bytes32"
        },
        {
          "name": "signerAddress",
          "type": "address"
        },
        {
          "name": "signature",
          "type": "bytes"
        }
      ],
      "name": "isValidSignature",
      "outputs": [
        {
          "name": "isValid",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x93634702"
    },
    {
      "constant": false,
      "inputs": [
        {
          "components": [
            {
              "name": "makerAddress",
              "type": "address"
            },
            {
              "name": "takerAddress",
              "type": "address"
            },
            {
              "name": "feeRecipientAddress",
              "type": "address"
            },
            {
              "name": "senderAddress",
              "type": "address"
            },
            {
              "name": "makerAssetAmount",
              "type": "uint256"
            },
            {
              "name": "takerAssetAmount",
              "type": "uint256"
            },
            {
              "name": "makerFee",
              "type": "uint256"
            },
            {
              "name": "takerFee",
              "type": "uint256"
            },
            {
              "name": "expirationTimeSeconds",
              "type": "uint256"
            },
            {
              "name": "salt",
              "type": "uint256"
            },
            {
              "name": "makerAssetData",
              "type": "bytes"
            },
            {
              "name": "takerAssetData",
              "type": "bytes"
            }
          ],
          "name": "order",
          "type": "tuple"
        },
        {
          "name": "takerAssetFillAmount",
          "type": "uint256"
        },
        {
          "name": "salt",
          "type": "uint256"
        },
        {
          "name": "orderSignature",
          "type": "bytes"
        }
      ],
      "name": "fillOrderIfWhitelisted",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x141da876"
    }
  ],
  "bytecode": "0x60806040523480156200001157600080fd5b50604051602080620013ef83398101806040526200003391908101906200025f565b336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550307f0500000000000000000000000000000000000000000000000000000000000000604051602001808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c01000000000000000000000000028152601401827effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681526001019250505060405160208183030381529060405260039080519060200190620001929291906200019a565b5050620002ab565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620001dd57805160ff19168380011785556200020e565b828001600101855582156200020e579182015b828111156200020d578251825591602001919060010190620001f0565b5b5090506200021d919062000221565b5090565b6200024691905b808211156200024257600081600090555060010162000228565b5090565b90565b60006200025782516200028b565b905092915050565b6000602082840312156200027257600080fd5b6000620002828482850162000249565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b61113480620002bb6000396000f300608060405260043610610078576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063141da8761461007d5780633af32abf146100a65780638da5cb5b146100e3578063936347021461010e578063c07732a31461014b578063f2fde38b14610174575b600080fd5b34801561008957600080fd5b506100a4600480360361009f9190810190610a9d565b61019d565b005b3480156100b257600080fd5b506100cd60048036036100c891908101906109cc565b6104bf565b6040516100da9190610e51565b60405180910390f35b3480156100ef57600080fd5b506100f86104df565b6040516101059190610e36565b60405180910390f35b34801561011a57600080fd5b5061013560048036036101309190810190610a31565b610504565b6040516101429190610e51565b60405180910390f35b34801561015757600080fd5b50610172600480360361016d91908101906109f5565b61053f565b005b34801561018057600080fd5b5061019b600480360361019691908101906109cc565b61062b565b005b600060603391503273ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141515610214576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161020b90610ecc565b60405180910390fd5b60016000876000015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615156102a6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161029d90610eac565b60405180910390fd5b600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515610334576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161032b90610e6c565b60405180910390fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b4be83d590507c0100000000000000000000000000000000000000000000000000000000028686856040516024016103a893929190610eec565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050509050600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663bfc8bfce85848460036040518563ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016104859493929190610f31565b600060405180830381600087803b15801561049f57600080fd5b505af11580156104b3573d6000803e3d6000fd5b50505050505050505050565b60016020528060005260406000206000915054906101000a900460ff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60003273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16149050949350505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156105d0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105c790610e8c565b60405180910390fd5b80600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156106bc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106b390610e8c565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151561073357806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b60006107428235611067565b905092915050565b60006107568235611087565b905092915050565b600061076a8235611093565b905092915050565b60008083601f840112151561078657600080fd5b8235905067ffffffffffffffff81111561079f57600080fd5b6020830191508360018202830111156107b757600080fd5b9250929050565b600082601f83011215156107d157600080fd5b81356107e46107df82610fb1565b610f84565b9150808252602083016020830185838301111561080057600080fd5b61080b8382846110a7565b50505092915050565b600082601f830112151561082757600080fd5b813561083a61083582610fdd565b610f84565b9150808252602083016020830185838301111561085657600080fd5b6108618382846110a7565b50505092915050565b6000610180828403121561087d57600080fd5b610888610180610f84565b9050600061089884828501610736565b60008301525060206108ac84828501610736565b60208301525060406108c084828501610736565b60408301525060606108d484828501610736565b60608301525060806108e8848285016109b8565b60808301525060a06108fc848285016109b8565b60a08301525060c0610910848285016109b8565b60c08301525060e0610924848285016109b8565b60e083015250610100610939848285016109b8565b6101008301525061012061094f848285016109b8565b6101208301525061014082013567ffffffffffffffff81111561097157600080fd5b61097d848285016107be565b6101408301525061016082013567ffffffffffffffff81111561099f57600080fd5b6109ab848285016107be565b6101608301525092915050565b60006109c4823561109d565b905092915050565b6000602082840312156109de57600080fd5b60006109ec84828501610736565b91505092915050565b60008060408385031215610a0857600080fd5b6000610a1685828601610736565b9250506020610a278582860161074a565b9150509250929050565b60008060008060608587031215610a4757600080fd5b6000610a558782880161075e565b9450506020610a6687828801610736565b935050604085013567ffffffffffffffff811115610a8357600080fd5b610a8f87828801610772565b925092505092959194509250565b60008060008060808587031215610ab357600080fd5b600085013567ffffffffffffffff811115610acd57600080fd5b610ad98782880161086a565b9450506020610aea878288016109b8565b9350506040610afb878288016109b8565b925050606085013567ffffffffffffffff811115610b1857600080fd5b610b2487828801610814565b91505092959194509250565b610b3981611031565b82525050565b610b4881611051565b82525050565b6000610b5982611026565b808452610b6d8160208601602086016110b6565b610b76816110e9565b602085010191505092915050565b6000610b8f8261101b565b808452610ba38160208601602086016110b6565b610bac816110e9565b602085010191505092915050565b600081546001811660008114610bd75760018114610bf757610c38565b607f600283041680865260ff198316602087015260408601935050610c38565b60028204808652602086019550610c0d85611009565b60005b82811015610c2f57815481890152600182019150602081019050610c10565b80880195505050505b505092915050565b6000601582527f54414b45525f4e4f545f57484954454c495354454400000000000000000000006020830152604082019050919050565b6000601382527f4f4e4c595f434f4e54524143545f4f574e4552000000000000000000000000006020830152604082019050919050565b6000601582527f4d414b45525f4e4f545f57484954454c495354454400000000000000000000006020830152604082019050919050565b6000600e82527f494e56414c49445f53454e4445520000000000000000000000000000000000006020830152604082019050919050565b600061018083016000830151610d356000860182610b30565b506020830151610d486020860182610b30565b506040830151610d5b6040860182610b30565b506060830151610d6e6060860182610b30565b506080830151610d816080860182610e27565b5060a0830151610d9460a0860182610e27565b5060c0830151610da760c0860182610e27565b5060e0830151610dba60e0860182610e27565b50610100830151610dcf610100860182610e27565b50610120830151610de4610120860182610e27565b50610140830151848203610140860152610dfe8282610b84565b915050610160830151848203610160860152610e1a8282610b84565b9150508091505092915050565b610e308161105d565b82525050565b6000602082019050610e4b6000830184610b30565b92915050565b6000602082019050610e666000830184610b3f565b92915050565b60006020820190508181036000830152610e8581610c40565b9050919050565b60006020820190508181036000830152610ea581610c77565b9050919050565b60006020820190508181036000830152610ec581610cae565b9050919050565b60006020820190508181036000830152610ee581610ce5565b9050919050565b60006060820190508181036000830152610f068186610d1c565b9050610f156020830185610e27565b8181036040830152610f278184610b4e565b9050949350505050565b6000608082019050610f466000830187610e27565b610f536020830186610b30565b8181036040830152610f658185610b4e565b90508181036060830152610f798184610bba565b905095945050505050565b6000604051905081810181811067ffffffffffffffff82111715610fa757600080fd5b8060405250919050565b600067ffffffffffffffff821115610fc857600080fd5b601f19601f8301169050602081019050919050565b600067ffffffffffffffff821115610ff457600080fd5b601f19601f8301169050602081019050919050565b60008160005260206000209050919050565b600081519050919050565b600081519050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60008115159050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60008115159050919050565b6000819050919050565b6000819050919050565b82818337600083830152505050565b60005b838110156110d45780820151818401526020810190506110b9565b838111156110e3576000848401525b50505050565b6000601f19601f83011690509190505600a265627a7a7230582031154fd37fe38f55fdf8da3a5ac39113b715620b4d114fb38a6583b804a961706c6578706572696d656e74616cf50037",
  "deployedBytecode": "0x608060405260043610610078576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063141da8761461007d5780633af32abf146100a65780638da5cb5b146100e3578063936347021461010e578063c07732a31461014b578063f2fde38b14610174575b600080fd5b34801561008957600080fd5b506100a4600480360361009f9190810190610a9d565b61019d565b005b3480156100b257600080fd5b506100cd60048036036100c891908101906109cc565b6104bf565b6040516100da9190610e51565b60405180910390f35b3480156100ef57600080fd5b506100f86104df565b6040516101059190610e36565b60405180910390f35b34801561011a57600080fd5b5061013560048036036101309190810190610a31565b610504565b6040516101429190610e51565b60405180910390f35b34801561015757600080fd5b50610172600480360361016d91908101906109f5565b61053f565b005b34801561018057600080fd5b5061019b600480360361019691908101906109cc565b61062b565b005b600060603391503273ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141515610214576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161020b90610ecc565b60405180910390fd5b60016000876000015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615156102a6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161029d90610eac565b60405180910390fd5b600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515610334576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161032b90610e6c565b60405180910390fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b4be83d590507c0100000000000000000000000000000000000000000000000000000000028686856040516024016103a893929190610eec565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050509050600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663bfc8bfce85848460036040518563ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016104859493929190610f31565b600060405180830381600087803b15801561049f57600080fd5b505af11580156104b3573d6000803e3d6000fd5b50505050505050505050565b60016020528060005260406000206000915054906101000a900460ff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60003273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16149050949350505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156105d0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105c790610e8c565b60405180910390fd5b80600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156106bc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106b390610e8c565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151561073357806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b60006107428235611067565b905092915050565b60006107568235611087565b905092915050565b600061076a8235611093565b905092915050565b60008083601f840112151561078657600080fd5b8235905067ffffffffffffffff81111561079f57600080fd5b6020830191508360018202830111156107b757600080fd5b9250929050565b600082601f83011215156107d157600080fd5b81356107e46107df82610fb1565b610f84565b9150808252602083016020830185838301111561080057600080fd5b61080b8382846110a7565b50505092915050565b600082601f830112151561082757600080fd5b813561083a61083582610fdd565b610f84565b9150808252602083016020830185838301111561085657600080fd5b6108618382846110a7565b50505092915050565b6000610180828403121561087d57600080fd5b610888610180610f84565b9050600061089884828501610736565b60008301525060206108ac84828501610736565b60208301525060406108c084828501610736565b60408301525060606108d484828501610736565b60608301525060806108e8848285016109b8565b60808301525060a06108fc848285016109b8565b60a08301525060c0610910848285016109b8565b60c08301525060e0610924848285016109b8565b60e083015250610100610939848285016109b8565b6101008301525061012061094f848285016109b8565b6101208301525061014082013567ffffffffffffffff81111561097157600080fd5b61097d848285016107be565b6101408301525061016082013567ffffffffffffffff81111561099f57600080fd5b6109ab848285016107be565b6101608301525092915050565b60006109c4823561109d565b905092915050565b6000602082840312156109de57600080fd5b60006109ec84828501610736565b91505092915050565b60008060408385031215610a0857600080fd5b6000610a1685828601610736565b9250506020610a278582860161074a565b9150509250929050565b60008060008060608587031215610a4757600080fd5b6000610a558782880161075e565b9450506020610a6687828801610736565b935050604085013567ffffffffffffffff811115610a8357600080fd5b610a8f87828801610772565b925092505092959194509250565b60008060008060808587031215610ab357600080fd5b600085013567ffffffffffffffff811115610acd57600080fd5b610ad98782880161086a565b9450506020610aea878288016109b8565b9350506040610afb878288016109b8565b925050606085013567ffffffffffffffff811115610b1857600080fd5b610b2487828801610814565b91505092959194509250565b610b3981611031565b82525050565b610b4881611051565b82525050565b6000610b5982611026565b808452610b6d8160208601602086016110b6565b610b76816110e9565b602085010191505092915050565b6000610b8f8261101b565b808452610ba38160208601602086016110b6565b610bac816110e9565b602085010191505092915050565b600081546001811660008114610bd75760018114610bf757610c38565b607f600283041680865260ff198316602087015260408601935050610c38565b60028204808652602086019550610c0d85611009565b60005b82811015610c2f57815481890152600182019150602081019050610c10565b80880195505050505b505092915050565b6000601582527f54414b45525f4e4f545f57484954454c495354454400000000000000000000006020830152604082019050919050565b6000601382527f4f4e4c595f434f4e54524143545f4f574e4552000000000000000000000000006020830152604082019050919050565b6000601582527f4d414b45525f4e4f545f57484954454c495354454400000000000000000000006020830152604082019050919050565b6000600e82527f494e56414c49445f53454e4445520000000000000000000000000000000000006020830152604082019050919050565b600061018083016000830151610d356000860182610b30565b506020830151610d486020860182610b30565b506040830151610d5b6040860182610b30565b506060830151610d6e6060860182610b30565b506080830151610d816080860182610e27565b5060a0830151610d9460a0860182610e27565b5060c0830151610da760c0860182610e27565b5060e0830151610dba60e0860182610e27565b50610100830151610dcf610100860182610e27565b50610120830151610de4610120860182610e27565b50610140830151848203610140860152610dfe8282610b84565b915050610160830151848203610160860152610e1a8282610b84565b9150508091505092915050565b610e308161105d565b82525050565b6000602082019050610e4b6000830184610b30565b92915050565b6000602082019050610e666000830184610b3f565b92915050565b60006020820190508181036000830152610e8581610c40565b9050919050565b60006020820190508181036000830152610ea581610c77565b9050919050565b60006020820190508181036000830152610ec581610cae565b9050919050565b60006020820190508181036000830152610ee581610ce5565b9050919050565b60006060820190508181036000830152610f068186610d1c565b9050610f156020830185610e27565b8181036040830152610f278184610b4e565b9050949350505050565b6000608082019050610f466000830187610e27565b610f536020830186610b30565b8181036040830152610f658185610b4e565b90508181036060830152610f798184610bba565b905095945050505050565b6000604051905081810181811067ffffffffffffffff82111715610fa757600080fd5b8060405250919050565b600067ffffffffffffffff821115610fc857600080fd5b601f19601f8301169050602081019050919050565b600067ffffffffffffffff821115610ff457600080fd5b601f19601f8301169050602081019050919050565b60008160005260206000209050919050565b600081519050919050565b600081519050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60008115159050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60008115159050919050565b6000819050919050565b6000819050919050565b82818337600083830152505050565b60005b838110156110d45780820151818401526020810190506110b9565b838111156110e3576000848401525b50505050565b6000601f19601f83011690509190505600a265627a7a7230582031154fd37fe38f55fdf8da3a5ac39113b715620b4d114fb38a6583b804a961706c6578706572696d656e74616cf50037",
  "sourceMap": "808:3556:1:-;;;1195:188;8:9:-1;5:2;;;30:1;27;20:12;5:2;1195:188:1;;;;;;;;;;;;;;;;;;;;;;171:10:107;163:5;;:18;;;;;;;;;;;;;;;;;;1277:9:1;1256:8;;:31;;;;;;;;;;;;;;;;;;1344:4;1351:24;1319:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1319:57:1;;;1297:19;:79;;;;;;;;;;;;:::i;:::-;;1195:188;808:3556;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5:122:-1:-;;83:39;114:6;108:13;83:39;;;74:48;;68:59;;;;;134:263;;249:2;237:9;228:7;224:23;220:32;217:2;;;265:1;262;255:12;217:2;300:1;317:64;373:7;364:6;353:9;349:22;317:64;;;307:74;;279:108;211:186;;;;;404:128;;484:42;477:5;473:54;462:65;;456:76;;;;808:3556:1;;;;;;;",
  "deployedSourceMap": "808:3556:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3158:1204;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3158:1204:1;;;;;;;;;;;;;;;;;;;896:46;;8:9:-1;5:2;;;30:1;27;20:12;5:2;896:46:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;92:20:107;;8:9:-1;5:2;;;30:1;27;20:12;5:2;92:20:107;;;;;;;;;;;;;;;;;;;;2231:278:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2231:278:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1577:176;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1577:176:1;;;;;;;;;;;;;;;;;;;334:167:107;;8:9:-1;5:2;;;30:1;27;20:12;5:2;334:167:107;;;;;;;;;;;;;;;;;;;3158:1204:1;3359:20;3984:17;3382:10;3359:33;;3567:9;3551:25;;:12;:25;;;3473:143;;;;;;;;;;;;;;;;;;;;;;;;3695:13;:33;3709:5;:18;;;3695:33;;;;;;;;;;;;;;;;;;;;;;;;;3674:101;;;;;;;;;;;;;;;;;;;;;;;;3854:13;:27;3868:12;3854:27;;;;;;;;;;;;;;;;;;;;;;;;;3833:95;;;;;;;;;;;;;;;;;;;;;;;;4040:8;;;;;;;;;;;:18;;;:27;;;;4081:5;4100:20;4134:14;4004:154;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;4004:154:1;;;;;;;38:4:-1;29:7;25:18;67:10;61:17;96:58;199:8;192:4;186;182:15;179:29;167:10;160:49;0:215;;;4004:154:1;3984:174;;4223:8;;;;;;;;;;;:27;;;4264:4;4282:12;4308:4;4326:19;4223:132;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4223:132:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4223:132:1;;;;3158:1204;;;;;;:::o;896:46::-;;;;;;;;;;;;;;;;;;;;;;:::o;92:20:107:-;;;;;;;;;;;;;:::o;2231:278:1:-;2388:12;2493:9;2476:26;;:13;:26;;;2469:33;;2231:278;;;;;;:::o;1577:176::-;260:5:107;;;;;;;;;;;246:19;;:10;:19;;;225:85;;;;;;;;;;;;;;;;;;;;;;;;1736:10:1;1712:13;:21;1726:6;1712:21;;;;;;;;;;;;;;;;:34;;;;;;;;;;;;;;;;;;1577:176;;:::o;334:167:107:-;260:5;;;;;;;;;;;246:19;;:10;:19;;;225:85;;;;;;;;;;;;;;;;;;;;;;;;450:1;430:22;;:8;:22;;;;426:69;;;476:8;468:5;;:16;;;;;;;;;;;;;;;;;;426:69;334:167;:::o;5:118:-1:-;;72:46;110:6;97:20;72:46;;;63:55;;57:66;;;;;130:112;;194:43;229:6;216:20;194:43;;;185:52;;179:63;;;;;249:118;;316:46;354:6;341:20;316:46;;;307:55;;301:66;;;;;388:335;;;502:3;495:4;487:6;483:17;479:27;472:35;469:2;;;520:1;517;510:12;469:2;553:6;540:20;530:30;;580:18;572:6;569:30;566:2;;;612:1;609;602:12;566:2;646:4;638:6;634:17;622:29;;696:3;689;681:6;677:16;667:8;663:31;660:40;657:2;;;713:1;710;703:12;657:2;462:261;;;;;;732:432;;829:3;822:4;814:6;810:17;806:27;799:35;796:2;;;847:1;844;837:12;796:2;884:6;871:20;906:60;921:44;958:6;921:44;;;906:60;;;897:69;;986:6;979:5;972:21;1022:4;1014:6;1010:17;1055:4;1048:5;1044:16;1090:3;1081:6;1076:3;1072:16;1069:25;1066:2;;;1107:1;1104;1097:12;1066:2;1117:41;1151:6;1146:3;1141;1117:41;;;789:375;;;;;;;;1173:440;;1274:3;1267:4;1259:6;1255:17;1251:27;1244:35;1241:2;;;1292:1;1289;1282:12;1241:2;1329:6;1316:20;1351:64;1366:48;1407:6;1366:48;;;1351:64;;;1342:73;;1435:6;1428:5;1421:21;1471:4;1463:6;1459:17;1504:4;1497:5;1493:16;1539:3;1530:6;1525:3;1521:16;1518:25;1515:2;;;1556:1;1553;1546:12;1515:2;1566:41;1600:6;1595:3;1590;1566:41;;;1234:379;;;;;;;;1649:2209;;1761:5;1749:9;1744:3;1740:19;1736:31;1733:2;;;1780:1;1777;1770:12;1733:2;1798:21;1813:5;1798:21;;;1789:30;;1877:1;1908:49;1953:3;1944:6;1933:9;1929:22;1908:49;;;1902:3;1895:5;1891:15;1884:74;1829:140;2027:2;2060:49;2105:3;2096:6;2085:9;2081:22;2060:49;;;2053:4;2046:5;2042:16;2035:75;1979:142;2186:2;2219:49;2264:3;2255:6;2244:9;2240:22;2219:49;;;2212:4;2205:5;2201:16;2194:75;2131:149;2339:2;2372:49;2417:3;2408:6;2397:9;2393:22;2372:49;;;2365:4;2358:5;2354:16;2347:75;2290:143;2495:3;2529:49;2574:3;2565:6;2554:9;2550:22;2529:49;;;2522:4;2515:5;2511:16;2504:75;2443:147;2652:3;2686:49;2731:3;2722:6;2711:9;2707:22;2686:49;;;2679:4;2672:5;2668:16;2661:75;2600:147;2801:3;2835:49;2880:3;2871:6;2860:9;2856:22;2835:49;;;2828:4;2821:5;2817:16;2810:75;2757:139;2950:3;2984:49;3029:3;3020:6;3009:9;3005:22;2984:49;;;2977:4;2970:5;2966:16;2959:75;2906:139;3112:3;3147:49;3192:3;3183:6;3172:9;3168:22;3147:49;;;3139:5;3132;3128:17;3121:76;3055:153;3258:3;3293:49;3338:3;3329:6;3318:9;3314:22;3293:49;;;3285:5;3278;3274:17;3267:76;3218:136;3442:3;3431:9;3427:19;3414:33;3467:18;3459:6;3456:30;3453:2;;;3499:1;3496;3489:12;3453:2;3535:54;3585:3;3576:6;3565:9;3561:22;3535:54;;;3527:5;3520;3516:17;3509:81;3364:237;3689:3;3678:9;3674:19;3661:33;3714:18;3706:6;3703:30;3700:2;;;3746:1;3743;3736:12;3700:2;3782:54;3832:3;3823:6;3812:9;3808:22;3782:54;;;3774:5;3767;3763:17;3756:81;3611:237;1727:2131;;;;;3865:118;;3932:46;3970:6;3957:20;3932:46;;;3923:55;;3917:66;;;;;3990:241;;4094:2;4082:9;4073:7;4069:23;4065:32;4062:2;;;4110:1;4107;4100:12;4062:2;4145:1;4162:53;4207:7;4198:6;4187:9;4183:22;4162:53;;;4152:63;;4124:97;4056:175;;;;;4238:360;;;4356:2;4344:9;4335:7;4331:23;4327:32;4324:2;;;4372:1;4369;4362:12;4324:2;4407:1;4424:53;4469:7;4460:6;4449:9;4445:22;4424:53;;;4414:63;;4386:97;4514:2;4532:50;4574:7;4565:6;4554:9;4550:22;4532:50;;;4522:60;;4493:95;4318:280;;;;;;4605:615;;;;;4762:2;4750:9;4741:7;4737:23;4733:32;4730:2;;;4778:1;4775;4768:12;4730:2;4813:1;4830:53;4875:7;4866:6;4855:9;4851:22;4830:53;;;4820:63;;4792:97;4920:2;4938:53;4983:7;4974:6;4963:9;4959:22;4938:53;;;4928:63;;4899:98;5056:2;5045:9;5041:18;5028:32;5080:18;5072:6;5069:30;5066:2;;;5112:1;5109;5102:12;5066:2;5140:64;5196:7;5187:6;5176:9;5172:22;5140:64;;;5122:82;;;;5007:203;4724:496;;;;;;;;5227:853;;;;;5414:3;5402:9;5393:7;5389:23;5385:33;5382:2;;;5431:1;5428;5421:12;5382:2;5494:1;5483:9;5479:17;5466:31;5517:18;5509:6;5506:30;5503:2;;;5549:1;5546;5539:12;5503:2;5569:76;5637:7;5628:6;5617:9;5613:22;5569:76;;;5559:86;;5445:206;5682:2;5700:53;5745:7;5736:6;5725:9;5721:22;5700:53;;;5690:63;;5661:98;5790:2;5808:53;5853:7;5844:6;5833:9;5829:22;5808:53;;;5798:63;;5769:98;5926:2;5915:9;5911:18;5898:32;5950:18;5942:6;5939:30;5936:2;;;5982:1;5979;5972:12;5936:2;6002:62;6056:7;6047:6;6036:9;6032:22;6002:62;;;5992:72;;5877:193;5376:704;;;;;;;;6087:110;6160:31;6185:5;6160:31;;;6155:3;6148:44;6142:55;;;6204:101;6271:28;6293:5;6271:28;;;6266:3;6259:41;6253:52;;;6312:297;;6412:38;6444:5;6412:38;;;6467:6;6462:3;6455:19;6479:63;6535:6;6528:4;6523:3;6519:14;6512:4;6505:5;6501:16;6479:63;;;6574:29;6596:6;6574:29;;;6567:4;6562:3;6558:14;6554:50;6547:57;;6392:217;;;;;;6616:289;;6712:34;6740:5;6712:34;;;6763:6;6758:3;6751:19;6775:63;6831:6;6824:4;6819:3;6815:14;6808:4;6801:5;6797:16;6775:63;;;6870:29;6892:6;6870:29;;;6863:4;6858:3;6854:14;6850:50;6843:57;;6692:213;;;;;;6935:731;;7042:5;7036:12;7076:1;7065:9;7061:17;7089:1;7084:200;;;;7295:1;7290:370;;;;7054:606;;7084:200;7162:4;7158:1;7147:9;7143:17;7139:28;7186:6;7181:3;7174:19;7242:4;7238:9;7227;7223:25;7216:4;7211:3;7207:14;7200:49;7272:4;7267:3;7263:14;7256:21;;7091:193;7084:200;;7290:370;7359:1;7348:9;7344:17;7380:6;7375:3;7368:19;7410:4;7405:3;7401:14;7394:21;;7437:37;7468:5;7437:37;;;7490:1;7498:130;7512:6;7509:1;7506:13;7498:130;;;7577:7;7571:14;7567:1;7562:3;7558:11;7551:35;7618:1;7609:7;7605:15;7594:26;;7534:4;7531:1;7527:12;7522:17;;7498:130;;;7651:1;7646:3;7642:11;7635:18;;7297:363;;;7054:606;;7012:654;;;;;;7675:296;;7830:2;7825:3;7818:15;7867:66;7862:2;7857:3;7853:12;7846:88;7962:2;7957:3;7953:12;7946:19;;7811:160;;;;7980:296;;8135:2;8130:3;8123:15;8172:66;8167:2;8162:3;8158:12;8151:88;8267:2;8262:3;8258:12;8251:19;;8116:160;;;;8285:296;;8440:2;8435:3;8428:15;8477:66;8472:2;8467:3;8463:12;8456:88;8572:2;8567:3;8563:12;8556:19;;8421:160;;;;8590:296;;8745:2;8740:3;8733:15;8782:66;8777:2;8772:3;8768:12;8761:88;8877:2;8872:3;8868:12;8861:19;;8726:160;;;;8947:2419;;9084:5;9079:3;9075:15;9179:3;9172:5;9168:15;9162:22;9196:61;9252:3;9247;9243:13;9230:11;9196:61;;;9105:164;9353:4;9346:5;9342:16;9336:23;9371:62;9427:4;9422:3;9418:14;9405:11;9371:62;;;9279:166;9536:4;9529:5;9525:16;9519:23;9554:62;9610:4;9605:3;9601:14;9588:11;9554:62;;;9455:173;9713:4;9706:5;9702:16;9696:23;9731:62;9787:4;9782:3;9778:14;9765:11;9731:62;;;9638:167;9893:4;9886:5;9882:16;9876:23;9911:62;9967:4;9962:3;9958:14;9945:11;9911:62;;;9815:170;10073:4;10066:5;10062:16;10056:23;10091:62;10147:4;10142:3;10138:14;10125:11;10091:62;;;9995:170;10245:4;10238:5;10234:16;10228:23;10263:62;10319:4;10314:3;10310:14;10297:11;10263:62;;;10175:162;10417:4;10410:5;10406:16;10400:23;10435:62;10491:4;10486:3;10482:14;10469:11;10435:62;;;10347:162;10602:5;10595;10591:17;10585:24;10621:63;10677:5;10672:3;10668:15;10655:11;10621:63;;;10519:177;10772:5;10765;10761:17;10755:24;10791:63;10847:5;10842:3;10838:15;10825:11;10791:63;;;10706:160;10952:5;10945;10941:17;10935:24;11005:3;10999:4;10995:14;10987:5;10982:3;10978:15;10971:39;11025:66;11086:4;11073:11;11025:66;;;11017:74;;10876:227;11189:5;11182;11178:17;11172:24;11242:3;11236:4;11232:14;11224:5;11219:3;11215:15;11208:39;11262:66;11323:4;11310:11;11262:66;;;11254:74;;11113:227;11357:4;11350:11;;9057:2309;;;;;;11373:110;11446:31;11471:5;11446:31;;;11441:3;11434:44;11428:55;;;11490:193;;11598:2;11587:9;11583:18;11575:26;;11612:61;11670:1;11659:9;11655:17;11646:6;11612:61;;;11569:114;;;;;11690:181;;11792:2;11781:9;11777:18;11769:26;;11806:55;11858:1;11847:9;11843:17;11834:6;11806:55;;;11763:108;;;;;11878:387;;12059:2;12048:9;12044:18;12036:26;;12109:9;12103:4;12099:20;12095:1;12084:9;12080:17;12073:47;12134:121;12250:4;12134:121;;;12126:129;;12030:235;;;;12272:387;;12453:2;12442:9;12438:18;12430:26;;12503:9;12497:4;12493:20;12489:1;12478:9;12474:17;12467:47;12528:121;12644:4;12528:121;;;12520:129;;12424:235;;;;12666:387;;12847:2;12836:9;12832:18;12824:26;;12897:9;12891:4;12887:20;12883:1;12872:9;12868:17;12861:47;12922:121;13038:4;12922:121;;;12914:129;;12818:235;;;;13060:387;;13241:2;13230:9;13226:18;13218:26;;13291:9;13285:4;13281:20;13277:1;13266:9;13262:17;13255:47;13316:121;13432:4;13316:121;;;13308:129;;13212:235;;;;13454:619;;13682:2;13671:9;13667:18;13659:26;;13732:9;13726:4;13722:20;13718:1;13707:9;13703:17;13696:47;13757:94;13846:4;13837:6;13757:94;;;13749:102;;13862:62;13920:2;13909:9;13905:18;13896:6;13862:62;;;13972:9;13966:4;13962:20;13957:2;13946:9;13942:18;13935:48;13997:66;14058:4;14049:6;13997:66;;;13989:74;;13653:420;;;;;;;14080:659;;14305:3;14294:9;14290:19;14282:27;;14320:61;14378:1;14367:9;14363:17;14354:6;14320:61;;;14392:62;14450:2;14439:9;14435:18;14426:6;14392:62;;;14502:9;14496:4;14492:20;14487:2;14476:9;14472:18;14465:48;14527:66;14588:4;14579:6;14527:66;;;14519:74;;14641:9;14635:4;14631:20;14626:2;14615:9;14611:18;14604:48;14666:63;14724:4;14715:6;14666:63;;;14658:71;;14276:463;;;;;;;;14746:256;;14808:2;14802:9;14792:19;;14846:4;14838:6;14834:17;14945:6;14933:10;14930:22;14909:18;14897:10;14894:34;14891:62;14888:2;;;14966:1;14963;14956:12;14888:2;14986:10;14982:2;14975:22;14786:216;;;;;15009:254;;15148:18;15140:6;15137:30;15134:2;;;15180:1;15177;15170:12;15134:2;15224:4;15220:9;15213:4;15205:6;15201:17;15197:33;15189:41;;15253:4;15247;15243:15;15235:23;;15071:192;;;;15270:258;;15413:18;15405:6;15402:30;15399:2;;;15445:1;15442;15435:12;15399:2;15489:4;15485:9;15478:4;15470:6;15466:17;15462:33;15454:41;;15518:4;15512;15508:15;15500:23;;15336:192;;;;15537:125;;15613:4;15610:1;15603:15;15650:4;15647:1;15637:18;15625:30;;15595:67;;;;15671:87;;15747:5;15741:12;15731:22;;15725:33;;;;15765:91;;15845:5;15839:12;15829:22;;15823:33;;;;15863:128;;15943:42;15936:5;15932:54;15921:65;;15915:76;;;;15998:92;;16078:5;16071:13;16064:21;16053:32;;16047:43;;;;16097:79;;16166:5;16155:16;;16149:27;;;;16183:128;;16263:42;16256:5;16252:54;16241:65;;16235:76;;;;16318:92;;16398:5;16391:13;16384:21;16373:32;;16367:43;;;;16417:79;;16486:5;16475:16;;16469:27;;;;16503:79;;16572:5;16561:16;;16555:27;;;;16590:145;16671:6;16666:3;16661;16648:30;16727:1;16718:6;16713:3;16709:16;16702:27;16641:94;;;;16744:268;16809:1;16816:101;16830:6;16827:1;16824:13;16816:101;;;16906:1;16901:3;16897:11;16891:18;16887:1;16882:3;16878:11;16871:39;16852:2;16849:1;16845:10;16840:15;;16816:101;;;16932:6;16929:1;16926:13;16923:2;;;16997:1;16988:6;16983:3;16979:16;16972:27;16923:2;16793:219;;;;;17020:97;;17108:2;17104:7;17099:2;17092:5;17088:14;17084:28;17074:38;;17068:49;;;",
  "source": "/*\n\n  Copyright 2018 ZeroEx Intl.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n\n*/\n\npragma solidity 0.4.24;\npragma experimental ABIEncoderV2;\n\nimport \"../interfaces/contracts/protocol/Exchange/IExchange.sol\";\nimport \"../libs/contracts/libs/LibOrder.sol\";\nimport \"../utils/contracts/utils/Ownable/Ownable.sol\";\n\n\ncontract Whitelist is\n    Ownable\n{\n\n    // Mapping of address => whitelist status.\n    mapping (address => bool) public isWhitelisted;\n\n    // Exchange contract.\n    // solhint-disable var-name-mixedcase\n    IExchange internal EXCHANGE;\n    bytes internal TX_ORIGIN_SIGNATURE;\n    // solhint-enable var-name-mixedcase\n\n    byte constant internal VALIDATOR_SIGNATURE_BYTE = \"\\x05\";\n\n    constructor (address _exchange)\n        public\n    {\n        EXCHANGE = IExchange(_exchange);\n        TX_ORIGIN_SIGNATURE = abi.encodePacked(address(this), VALIDATOR_SIGNATURE_BYTE);\n    }\n\n    /// @dev Adds or removes an address from the whitelist.\n    /// @param target Address to add or remove from whitelist.\n    /// @param isApproved Whitelist status to assign to address.\n    function updateWhitelistStatus(\n        address target,\n        bool isApproved\n    )\n        external\n        onlyOwner\n    {\n        isWhitelisted[target] = isApproved;\n    }\n\n    /// @dev Verifies signer is same as signer of current Ethereum transaction.\n    ///      NOTE: This function can currently be used to validate signatures coming from outside of this contract.\n    ///      Extra safety checks can be added for a production contract.\n    /// @param signerAddress Address that should have signed the given hash.\n    /// @param signature Proof of signing.\n    /// @return Validity of order signature.\n    // solhint-disable no-unused-vars\n    function isValidSignature(\n        bytes32 hash,\n        address signerAddress,\n        bytes signature\n    )\n        external\n        view\n        returns (bool isValid)\n    {\n        // solhint-disable-next-line avoid-tx-origin\n        return signerAddress == tx.origin;\n    }\n    // solhint-enable no-unused-vars\n\n    /// @dev Fills an order using `msg.sender` as the taker.\n    ///      The transaction will revert if both the maker and taker are not whitelisted.\n    ///      Orders should specify this contract as the `senderAddress` in order to gaurantee\n    ///      that both maker and taker have been whitelisted.\n    /// @param order Order struct containing order specifications.\n    /// @param takerAssetFillAmount Desired amount of takerAsset to sell.\n    /// @param salt Arbitrary value to gaurantee uniqueness of 0x transaction hash.\n    /// @param orderSignature Proof that order has been created by maker.\n    function fillOrderIfWhitelisted(\n        LibOrder.Order memory order,\n        uint256 takerAssetFillAmount,\n        uint256 salt,\n        bytes memory orderSignature\n    )\n        public\n    {\n        address takerAddress = msg.sender;\n\n        // This contract must be the entry point for the transaction.\n        require(\n            // solhint-disable-next-line avoid-tx-origin\n            takerAddress == tx.origin,\n            \"INVALID_SENDER\"\n        );\n\n        // Check if maker is on the whitelist.\n        require(\n            isWhitelisted[order.makerAddress],\n            \"MAKER_NOT_WHITELISTED\"\n        );\n\n        // Check if taker is on the whitelist.\n        require(\n            isWhitelisted[takerAddress],\n            \"TAKER_NOT_WHITELISTED\"\n        );\n\n        // Encode arguments into byte array.\n        bytes memory data = abi.encodeWithSelector(\n            EXCHANGE.fillOrder.selector,\n            order,\n            takerAssetFillAmount,\n            orderSignature\n        );\n\n        // Call `fillOrder` via `executeTransaction`.\n        EXCHANGE.executeTransaction(\n            salt,\n            takerAddress,\n            data,\n            TX_ORIGIN_SIGNATURE\n        );\n    }\n}\n",
  "sourcePath": "/Users/lawrenceballou/Desktop/BlockNerds/Clients/AltcoinIo/filter-contract/contracts/examples/Whitelist.sol",
  "ast": {
    "absolutePath": "/Users/lawrenceballou/Desktop/BlockNerds/Clients/AltcoinIo/filter-contract/contracts/examples/Whitelist.sol",
    "exportedSymbols": {
      "Whitelist": [
        192
      ]
    },
    "id": 193,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 58,
        "literals": [
          "solidity",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "580:23:1"
      },
      {
        "id": 59,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "604:33:1"
      },
      {
        "absolutePath": "/Users/lawrenceballou/Desktop/BlockNerds/Clients/AltcoinIo/filter-contract/contracts/interfaces/contracts/protocol/Exchange/IExchange.sol",
        "file": "../interfaces/contracts/protocol/Exchange/IExchange.sol",
        "id": 60,
        "nodeType": "ImportDirective",
        "scope": 193,
        "sourceUnit": 3448,
        "src": "639:65:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/lawrenceballou/Desktop/BlockNerds/Clients/AltcoinIo/filter-contract/contracts/libs/contracts/libs/LibOrder.sol",
        "file": "../libs/contracts/libs/LibOrder.sol",
        "id": 61,
        "nodeType": "ImportDirective",
        "scope": 193,
        "sourceUnit": 4793,
        "src": "705:45:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/lawrenceballou/Desktop/BlockNerds/Clients/AltcoinIo/filter-contract/contracts/utils/contracts/utils/Ownable/Ownable.sol",
        "file": "../utils/contracts/utils/Ownable/Ownable.sol",
        "id": 62,
        "nodeType": "ImportDirective",
        "scope": 193,
        "sourceUnit": 13524,
        "src": "751:54:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 63,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 13523,
              "src": "834:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$13523",
                "typeString": "contract Ownable"
              }
            },
            "id": 64,
            "nodeType": "InheritanceSpecifier",
            "src": "834:7:1"
          }
        ],
        "contractDependencies": [
          13475,
          13523
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 192,
        "linearizedBaseContracts": [
          192,
          13523,
          13475
        ],
        "name": "Whitelist",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 68,
            "name": "isWhitelisted",
            "nodeType": "VariableDeclaration",
            "scope": 192,
            "src": "896:46:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 67,
              "keyType": {
                "id": 65,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "905:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "896:25:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 66,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "916:4:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 70,
            "name": "EXCHANGE",
            "nodeType": "VariableDeclaration",
            "scope": 192,
            "src": "1017:27:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IExchange_$3447",
              "typeString": "contract IExchange"
            },
            "typeName": {
              "contractScope": null,
              "id": 69,
              "name": "IExchange",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3447,
              "src": "1017:9:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IExchange_$3447",
                "typeString": "contract IExchange"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 72,
            "name": "TX_ORIGIN_SIGNATURE",
            "nodeType": "VariableDeclaration",
            "scope": 192,
            "src": "1050:34:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes_storage",
              "typeString": "bytes"
            },
            "typeName": {
              "id": 71,
              "name": "bytes",
              "nodeType": "ElementaryTypeName",
              "src": "1050:5:1",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes_storage_ptr",
                "typeString": "bytes"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": true,
            "id": 75,
            "name": "VALIDATOR_SIGNATURE_BYTE",
            "nodeType": "VariableDeclaration",
            "scope": 192,
            "src": "1132:56:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes1",
              "typeString": "bytes1"
            },
            "typeName": {
              "id": 73,
              "name": "byte",
              "nodeType": "ElementaryTypeName",
              "src": "1132:4:1",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes1",
                "typeString": "bytes1"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "05",
              "id": 74,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1182:6:1",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_dbb8d0f4c497851a5043c6363657698cb1387682cac2f786c731f8936109d795",
                "typeString": "literal_string \"\u0005\""
              },
              "value": "\u0005"
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 96,
              "nodeType": "Block",
              "src": "1246:137:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 84,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 80,
                      "name": "EXCHANGE",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 70,
                      "src": "1256:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IExchange_$3447",
                        "typeString": "contract IExchange"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 82,
                          "name": "_exchange",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 77,
                          "src": "1277:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 81,
                        "name": "IExchange",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3447,
                        "src": "1267:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IExchange_$3447_$",
                          "typeString": "type(contract IExchange)"
                        }
                      },
                      "id": 83,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1267:20:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IExchange_$3447",
                        "typeString": "contract IExchange"
                      }
                    },
                    "src": "1256:31:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IExchange_$3447",
                      "typeString": "contract IExchange"
                    }
                  },
                  "id": 85,
                  "nodeType": "ExpressionStatement",
                  "src": "1256:31:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 94,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 86,
                      "name": "TX_ORIGIN_SIGNATURE",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 72,
                      "src": "1297:19:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage",
                        "typeString": "bytes storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 90,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 13772,
                              "src": "1344:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Whitelist_$192",
                                "typeString": "contract Whitelist"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Whitelist_$192",
                                "typeString": "contract Whitelist"
                              }
                            ],
                            "id": 89,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1336:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 91,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1336:13:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 92,
                          "name": "VALIDATOR_SIGNATURE_BYTE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 75,
                          "src": "1351:24:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes1",
                            "typeString": "bytes1"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_bytes1",
                            "typeString": "bytes1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 87,
                          "name": "abi",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13718,
                          "src": "1319:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_abi",
                            "typeString": "abi"
                          }
                        },
                        "id": 88,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "encodePacked",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1319:16:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                          "typeString": "function () pure returns (bytes memory)"
                        }
                      },
                      "id": 93,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1319:57:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "src": "1297:79:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage",
                      "typeString": "bytes storage ref"
                    }
                  },
                  "id": 95,
                  "nodeType": "ExpressionStatement",
                  "src": "1297:79:1"
                }
              ]
            },
            "documentation": null,
            "id": 97,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 78,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 77,
                  "name": "_exchange",
                  "nodeType": "VariableDeclaration",
                  "scope": 97,
                  "src": "1208:17:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 76,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1208:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1207:19:1"
            },
            "payable": false,
            "returnParameters": {
              "id": 79,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1246:0:1"
            },
            "scope": 192,
            "src": "1195:188:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 112,
              "nodeType": "Block",
              "src": "1702:51:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 110,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 106,
                        "name": "isWhitelisted",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68,
                        "src": "1712:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 108,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 107,
                        "name": "target",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99,
                        "src": "1726:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1712:21:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 109,
                      "name": "isApproved",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 101,
                      "src": "1736:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "1712:34:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 111,
                  "nodeType": "ExpressionStatement",
                  "src": "1712:34:1"
                }
              ]
            },
            "documentation": "@dev Adds or removes an address from the whitelist.\n @param target Address to add or remove from whitelist.\n @param isApproved Whitelist status to assign to address.",
            "id": 113,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 104,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 103,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 13503,
                  "src": "1688:9:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1688:9:1"
              }
            ],
            "name": "updateWhitelistStatus",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 102,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 99,
                  "name": "target",
                  "nodeType": "VariableDeclaration",
                  "scope": 113,
                  "src": "1617:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 98,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1617:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 101,
                  "name": "isApproved",
                  "nodeType": "VariableDeclaration",
                  "scope": 113,
                  "src": "1641:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 100,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1641:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1607:55:1"
            },
            "payable": false,
            "returnParameters": {
              "id": 105,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1702:0:1"
            },
            "scope": 192,
            "src": "1577:176:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 129,
              "nodeType": "Block",
              "src": "2406:103:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 127,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 124,
                      "name": "signerAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 117,
                      "src": "2476:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 125,
                        "name": "tx",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13743,
                        "src": "2493:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_transaction",
                          "typeString": "tx"
                        }
                      },
                      "id": 126,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "origin",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2493:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2476:26:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 123,
                  "id": 128,
                  "nodeType": "Return",
                  "src": "2469:33:1"
                }
              ]
            },
            "documentation": "@dev Verifies signer is same as signer of current Ethereum transaction.\n      NOTE: This function can currently be used to validate signatures coming from outside of this contract.\n      Extra safety checks can be added for a production contract.\n @param signerAddress Address that should have signed the given hash.\n @param signature Proof of signing.\n @return Validity of order signature.",
            "id": 130,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "isValidSignature",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 120,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 115,
                  "name": "hash",
                  "nodeType": "VariableDeclaration",
                  "scope": 130,
                  "src": "2266:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 114,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2266:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 117,
                  "name": "signerAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 130,
                  "src": "2288:21:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 116,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2288:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 119,
                  "name": "signature",
                  "nodeType": "VariableDeclaration",
                  "scope": 130,
                  "src": "2319:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 118,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2319:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2256:84:1"
            },
            "payable": false,
            "returnParameters": {
              "id": 123,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 122,
                  "name": "isValid",
                  "nodeType": "VariableDeclaration",
                  "scope": 130,
                  "src": "2388:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 121,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2388:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2387:14:1"
            },
            "scope": 192,
            "src": "2231:278:1",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 190,
              "nodeType": "Block",
              "src": "3349:1013:1",
              "statements": [
                {
                  "assignments": [
                    142
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 142,
                      "name": "takerAddress",
                      "nodeType": "VariableDeclaration",
                      "scope": 191,
                      "src": "3359:20:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 141,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3359:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 145,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 143,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13731,
                      "src": "3382:3:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 144,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "3382:10:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3359:33:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 150,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 147,
                          "name": "takerAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 142,
                          "src": "3551:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 148,
                            "name": "tx",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13743,
                            "src": "3567:2:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_transaction",
                              "typeString": "tx"
                            }
                          },
                          "id": 149,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "origin",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3567:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3551:25:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "494e56414c49445f53454e444552",
                        "id": 151,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3590:16:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_db738cfea6a49ef4e8f6a59c278add0dfddfdb2462adac18e44f8df0bef7fd64",
                          "typeString": "literal_string \"INVALID_SENDER\""
                        },
                        "value": "INVALID_SENDER"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_db738cfea6a49ef4e8f6a59c278add0dfddfdb2462adac18e44f8df0bef7fd64",
                          "typeString": "literal_string \"INVALID_SENDER\""
                        }
                      ],
                      "id": 146,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        13734,
                        13735
                      ],
                      "referencedDeclaration": 13735,
                      "src": "3473:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 152,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3473:143:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 153,
                  "nodeType": "ExpressionStatement",
                  "src": "3473:143:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 155,
                          "name": "isWhitelisted",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 68,
                          "src": "3695:13:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 158,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 156,
                            "name": "order",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 132,
                            "src": "3709:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Order_$4737_memory_ptr",
                              "typeString": "struct LibOrder.Order memory"
                            }
                          },
                          "id": 157,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "makerAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4714,
                          "src": "3709:18:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3695:33:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4d414b45525f4e4f545f57484954454c4953544544",
                        "id": 159,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3742:23:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_cc67f401fb3a00b1861b75ee8b8e8253069a92db113d75c1e882562da60c320f",
                          "typeString": "literal_string \"MAKER_NOT_WHITELISTED\""
                        },
                        "value": "MAKER_NOT_WHITELISTED"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_cc67f401fb3a00b1861b75ee8b8e8253069a92db113d75c1e882562da60c320f",
                          "typeString": "literal_string \"MAKER_NOT_WHITELISTED\""
                        }
                      ],
                      "id": 154,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        13734,
                        13735
                      ],
                      "referencedDeclaration": 13735,
                      "src": "3674:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 160,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3674:101:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 161,
                  "nodeType": "ExpressionStatement",
                  "src": "3674:101:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 163,
                          "name": "isWhitelisted",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 68,
                          "src": "3854:13:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 165,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 164,
                          "name": "takerAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 142,
                          "src": "3868:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3854:27:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "54414b45525f4e4f545f57484954454c4953544544",
                        "id": 166,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3895:23:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3a6bdeefb5ffbf08bc3b31532993bd6096f9d4b7010a96f46cc14f3151941958",
                          "typeString": "literal_string \"TAKER_NOT_WHITELISTED\""
                        },
                        "value": "TAKER_NOT_WHITELISTED"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3a6bdeefb5ffbf08bc3b31532993bd6096f9d4b7010a96f46cc14f3151941958",
                          "typeString": "literal_string \"TAKER_NOT_WHITELISTED\""
                        }
                      ],
                      "id": 162,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        13734,
                        13735
                      ],
                      "referencedDeclaration": 13735,
                      "src": "3833:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 167,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3833:95:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 168,
                  "nodeType": "ExpressionStatement",
                  "src": "3833:95:1"
                },
                {
                  "assignments": [
                    170
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 170,
                      "name": "data",
                      "nodeType": "VariableDeclaration",
                      "scope": 191,
                      "src": "3984:17:1",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 169,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "3984:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 180,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 173,
                            "name": "EXCHANGE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 70,
                            "src": "4040:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IExchange_$3447",
                              "typeString": "contract IExchange"
                            }
                          },
                          "id": 174,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "fillOrder",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3468,
                          "src": "4040:18:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_struct$_Order_$4737_memory_ptr_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_struct$_FillResults_$4343_memory_ptr_$",
                            "typeString": "function (struct LibOrder.Order memory,uint256,bytes memory) external returns (struct LibFillResults.FillResults memory)"
                          }
                        },
                        "id": 175,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "selector",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "4040:27:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 176,
                        "name": "order",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 132,
                        "src": "4081:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Order_$4737_memory_ptr",
                          "typeString": "struct LibOrder.Order memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 177,
                        "name": "takerAssetFillAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 134,
                        "src": "4100:20:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 178,
                        "name": "orderSignature",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 138,
                        "src": "4134:14:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        {
                          "typeIdentifier": "t_struct$_Order_$4737_memory_ptr",
                          "typeString": "struct LibOrder.Order memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 171,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13718,
                        "src": "4004:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 172,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "encodeWithSelector",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "4004:22:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes4) pure returns (bytes memory)"
                      }
                    },
                    "id": 179,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4004:154:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3984:174:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 184,
                        "name": "salt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 136,
                        "src": "4264:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 185,
                        "name": "takerAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 142,
                        "src": "4282:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 186,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 170,
                        "src": "4308:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 187,
                        "name": "TX_ORIGIN_SIGNATURE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 72,
                        "src": "4326:19:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 181,
                        "name": "EXCHANGE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 70,
                        "src": "4223:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IExchange_$3447",
                          "typeString": "contract IExchange"
                        }
                      },
                      "id": 183,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "executeTransaction",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3543,
                      "src": "4223:27:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_address_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,address,bytes memory,bytes memory) external"
                      }
                    },
                    "id": 188,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4223:132:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 189,
                  "nodeType": "ExpressionStatement",
                  "src": "4223:132:1"
                }
              ]
            },
            "documentation": "@dev Fills an order using `msg.sender` as the taker.\n      The transaction will revert if both the maker and taker are not whitelisted.\n      Orders should specify this contract as the `senderAddress` in order to gaurantee\n      that both maker and taker have been whitelisted.\n @param order Order struct containing order specifications.\n @param takerAssetFillAmount Desired amount of takerAsset to sell.\n @param salt Arbitrary value to gaurantee uniqueness of 0x transaction hash.\n @param orderSignature Proof that order has been created by maker.",
            "id": 191,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "fillOrderIfWhitelisted",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 139,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 132,
                  "name": "order",
                  "nodeType": "VariableDeclaration",
                  "scope": 191,
                  "src": "3199:27:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Order_$4737_memory_ptr",
                    "typeString": "struct LibOrder.Order"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 131,
                    "name": "LibOrder.Order",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 4737,
                    "src": "3199:14:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Order_$4737_storage_ptr",
                      "typeString": "struct LibOrder.Order"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 134,
                  "name": "takerAssetFillAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 191,
                  "src": "3236:28:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 133,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3236:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 136,
                  "name": "salt",
                  "nodeType": "VariableDeclaration",
                  "scope": 191,
                  "src": "3274:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 135,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3274:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 138,
                  "name": "orderSignature",
                  "nodeType": "VariableDeclaration",
                  "scope": 191,
                  "src": "3296:27:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 137,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3296:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3189:140:1"
            },
            "payable": false,
            "returnParameters": {
              "id": 140,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3349:0:1"
            },
            "scope": 192,
            "src": "3158:1204:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 193,
        "src": "808:3556:1"
      }
    ],
    "src": "580:3785:1"
  },
  "legacyAST": {
    "absolutePath": "/Users/lawrenceballou/Desktop/BlockNerds/Clients/AltcoinIo/filter-contract/contracts/examples/Whitelist.sol",
    "exportedSymbols": {
      "Whitelist": [
        192
      ]
    },
    "id": 193,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 58,
        "literals": [
          "solidity",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "580:23:1"
      },
      {
        "id": 59,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "604:33:1"
      },
      {
        "absolutePath": "/Users/lawrenceballou/Desktop/BlockNerds/Clients/AltcoinIo/filter-contract/contracts/interfaces/contracts/protocol/Exchange/IExchange.sol",
        "file": "../interfaces/contracts/protocol/Exchange/IExchange.sol",
        "id": 60,
        "nodeType": "ImportDirective",
        "scope": 193,
        "sourceUnit": 3448,
        "src": "639:65:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/lawrenceballou/Desktop/BlockNerds/Clients/AltcoinIo/filter-contract/contracts/libs/contracts/libs/LibOrder.sol",
        "file": "../libs/contracts/libs/LibOrder.sol",
        "id": 61,
        "nodeType": "ImportDirective",
        "scope": 193,
        "sourceUnit": 4793,
        "src": "705:45:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/lawrenceballou/Desktop/BlockNerds/Clients/AltcoinIo/filter-contract/contracts/utils/contracts/utils/Ownable/Ownable.sol",
        "file": "../utils/contracts/utils/Ownable/Ownable.sol",
        "id": 62,
        "nodeType": "ImportDirective",
        "scope": 193,
        "sourceUnit": 13524,
        "src": "751:54:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 63,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 13523,
              "src": "834:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$13523",
                "typeString": "contract Ownable"
              }
            },
            "id": 64,
            "nodeType": "InheritanceSpecifier",
            "src": "834:7:1"
          }
        ],
        "contractDependencies": [
          13475,
          13523
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 192,
        "linearizedBaseContracts": [
          192,
          13523,
          13475
        ],
        "name": "Whitelist",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 68,
            "name": "isWhitelisted",
            "nodeType": "VariableDeclaration",
            "scope": 192,
            "src": "896:46:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 67,
              "keyType": {
                "id": 65,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "905:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "896:25:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 66,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "916:4:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 70,
            "name": "EXCHANGE",
            "nodeType": "VariableDeclaration",
            "scope": 192,
            "src": "1017:27:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IExchange_$3447",
              "typeString": "contract IExchange"
            },
            "typeName": {
              "contractScope": null,
              "id": 69,
              "name": "IExchange",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3447,
              "src": "1017:9:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IExchange_$3447",
                "typeString": "contract IExchange"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 72,
            "name": "TX_ORIGIN_SIGNATURE",
            "nodeType": "VariableDeclaration",
            "scope": 192,
            "src": "1050:34:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes_storage",
              "typeString": "bytes"
            },
            "typeName": {
              "id": 71,
              "name": "bytes",
              "nodeType": "ElementaryTypeName",
              "src": "1050:5:1",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes_storage_ptr",
                "typeString": "bytes"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": true,
            "id": 75,
            "name": "VALIDATOR_SIGNATURE_BYTE",
            "nodeType": "VariableDeclaration",
            "scope": 192,
            "src": "1132:56:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes1",
              "typeString": "bytes1"
            },
            "typeName": {
              "id": 73,
              "name": "byte",
              "nodeType": "ElementaryTypeName",
              "src": "1132:4:1",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes1",
                "typeString": "bytes1"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "05",
              "id": 74,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1182:6:1",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_dbb8d0f4c497851a5043c6363657698cb1387682cac2f786c731f8936109d795",
                "typeString": "literal_string \"\u0005\""
              },
              "value": "\u0005"
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 96,
              "nodeType": "Block",
              "src": "1246:137:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 84,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 80,
                      "name": "EXCHANGE",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 70,
                      "src": "1256:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IExchange_$3447",
                        "typeString": "contract IExchange"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 82,
                          "name": "_exchange",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 77,
                          "src": "1277:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 81,
                        "name": "IExchange",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3447,
                        "src": "1267:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IExchange_$3447_$",
                          "typeString": "type(contract IExchange)"
                        }
                      },
                      "id": 83,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1267:20:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IExchange_$3447",
                        "typeString": "contract IExchange"
                      }
                    },
                    "src": "1256:31:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IExchange_$3447",
                      "typeString": "contract IExchange"
                    }
                  },
                  "id": 85,
                  "nodeType": "ExpressionStatement",
                  "src": "1256:31:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 94,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 86,
                      "name": "TX_ORIGIN_SIGNATURE",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 72,
                      "src": "1297:19:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage",
                        "typeString": "bytes storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 90,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 13772,
                              "src": "1344:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Whitelist_$192",
                                "typeString": "contract Whitelist"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Whitelist_$192",
                                "typeString": "contract Whitelist"
                              }
                            ],
                            "id": 89,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1336:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 91,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1336:13:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 92,
                          "name": "VALIDATOR_SIGNATURE_BYTE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 75,
                          "src": "1351:24:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes1",
                            "typeString": "bytes1"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_bytes1",
                            "typeString": "bytes1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 87,
                          "name": "abi",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13718,
                          "src": "1319:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_abi",
                            "typeString": "abi"
                          }
                        },
                        "id": 88,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "encodePacked",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1319:16:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                          "typeString": "function () pure returns (bytes memory)"
                        }
                      },
                      "id": 93,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1319:57:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "src": "1297:79:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage",
                      "typeString": "bytes storage ref"
                    }
                  },
                  "id": 95,
                  "nodeType": "ExpressionStatement",
                  "src": "1297:79:1"
                }
              ]
            },
            "documentation": null,
            "id": 97,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 78,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 77,
                  "name": "_exchange",
                  "nodeType": "VariableDeclaration",
                  "scope": 97,
                  "src": "1208:17:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 76,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1208:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1207:19:1"
            },
            "payable": false,
            "returnParameters": {
              "id": 79,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1246:0:1"
            },
            "scope": 192,
            "src": "1195:188:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 112,
              "nodeType": "Block",
              "src": "1702:51:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 110,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 106,
                        "name": "isWhitelisted",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68,
                        "src": "1712:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 108,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 107,
                        "name": "target",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99,
                        "src": "1726:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1712:21:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 109,
                      "name": "isApproved",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 101,
                      "src": "1736:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "1712:34:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 111,
                  "nodeType": "ExpressionStatement",
                  "src": "1712:34:1"
                }
              ]
            },
            "documentation": "@dev Adds or removes an address from the whitelist.\n @param target Address to add or remove from whitelist.\n @param isApproved Whitelist status to assign to address.",
            "id": 113,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 104,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 103,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 13503,
                  "src": "1688:9:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1688:9:1"
              }
            ],
            "name": "updateWhitelistStatus",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 102,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 99,
                  "name": "target",
                  "nodeType": "VariableDeclaration",
                  "scope": 113,
                  "src": "1617:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 98,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1617:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 101,
                  "name": "isApproved",
                  "nodeType": "VariableDeclaration",
                  "scope": 113,
                  "src": "1641:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 100,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1641:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1607:55:1"
            },
            "payable": false,
            "returnParameters": {
              "id": 105,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1702:0:1"
            },
            "scope": 192,
            "src": "1577:176:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 129,
              "nodeType": "Block",
              "src": "2406:103:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 127,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 124,
                      "name": "signerAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 117,
                      "src": "2476:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 125,
                        "name": "tx",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13743,
                        "src": "2493:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_transaction",
                          "typeString": "tx"
                        }
                      },
                      "id": 126,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "origin",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2493:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2476:26:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 123,
                  "id": 128,
                  "nodeType": "Return",
                  "src": "2469:33:1"
                }
              ]
            },
            "documentation": "@dev Verifies signer is same as signer of current Ethereum transaction.\n      NOTE: This function can currently be used to validate signatures coming from outside of this contract.\n      Extra safety checks can be added for a production contract.\n @param signerAddress Address that should have signed the given hash.\n @param signature Proof of signing.\n @return Validity of order signature.",
            "id": 130,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "isValidSignature",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 120,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 115,
                  "name": "hash",
                  "nodeType": "VariableDeclaration",
                  "scope": 130,
                  "src": "2266:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 114,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2266:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 117,
                  "name": "signerAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 130,
                  "src": "2288:21:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 116,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2288:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 119,
                  "name": "signature",
                  "nodeType": "VariableDeclaration",
                  "scope": 130,
                  "src": "2319:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 118,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2319:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2256:84:1"
            },
            "payable": false,
            "returnParameters": {
              "id": 123,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 122,
                  "name": "isValid",
                  "nodeType": "VariableDeclaration",
                  "scope": 130,
                  "src": "2388:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 121,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2388:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2387:14:1"
            },
            "scope": 192,
            "src": "2231:278:1",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 190,
              "nodeType": "Block",
              "src": "3349:1013:1",
              "statements": [
                {
                  "assignments": [
                    142
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 142,
                      "name": "takerAddress",
                      "nodeType": "VariableDeclaration",
                      "scope": 191,
                      "src": "3359:20:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 141,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3359:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 145,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 143,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13731,
                      "src": "3382:3:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 144,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "3382:10:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3359:33:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 150,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 147,
                          "name": "takerAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 142,
                          "src": "3551:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 148,
                            "name": "tx",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13743,
                            "src": "3567:2:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_transaction",
                              "typeString": "tx"
                            }
                          },
                          "id": 149,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "origin",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3567:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3551:25:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "494e56414c49445f53454e444552",
                        "id": 151,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3590:16:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_db738cfea6a49ef4e8f6a59c278add0dfddfdb2462adac18e44f8df0bef7fd64",
                          "typeString": "literal_string \"INVALID_SENDER\""
                        },
                        "value": "INVALID_SENDER"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_db738cfea6a49ef4e8f6a59c278add0dfddfdb2462adac18e44f8df0bef7fd64",
                          "typeString": "literal_string \"INVALID_SENDER\""
                        }
                      ],
                      "id": 146,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        13734,
                        13735
                      ],
                      "referencedDeclaration": 13735,
                      "src": "3473:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 152,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3473:143:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 153,
                  "nodeType": "ExpressionStatement",
                  "src": "3473:143:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 155,
                          "name": "isWhitelisted",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 68,
                          "src": "3695:13:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 158,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 156,
                            "name": "order",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 132,
                            "src": "3709:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Order_$4737_memory_ptr",
                              "typeString": "struct LibOrder.Order memory"
                            }
                          },
                          "id": 157,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "makerAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4714,
                          "src": "3709:18:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3695:33:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4d414b45525f4e4f545f57484954454c4953544544",
                        "id": 159,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3742:23:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_cc67f401fb3a00b1861b75ee8b8e8253069a92db113d75c1e882562da60c320f",
                          "typeString": "literal_string \"MAKER_NOT_WHITELISTED\""
                        },
                        "value": "MAKER_NOT_WHITELISTED"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_cc67f401fb3a00b1861b75ee8b8e8253069a92db113d75c1e882562da60c320f",
                          "typeString": "literal_string \"MAKER_NOT_WHITELISTED\""
                        }
                      ],
                      "id": 154,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        13734,
                        13735
                      ],
                      "referencedDeclaration": 13735,
                      "src": "3674:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 160,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3674:101:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 161,
                  "nodeType": "ExpressionStatement",
                  "src": "3674:101:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 163,
                          "name": "isWhitelisted",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 68,
                          "src": "3854:13:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 165,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 164,
                          "name": "takerAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 142,
                          "src": "3868:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3854:27:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "54414b45525f4e4f545f57484954454c4953544544",
                        "id": 166,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3895:23:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3a6bdeefb5ffbf08bc3b31532993bd6096f9d4b7010a96f46cc14f3151941958",
                          "typeString": "literal_string \"TAKER_NOT_WHITELISTED\""
                        },
                        "value": "TAKER_NOT_WHITELISTED"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3a6bdeefb5ffbf08bc3b31532993bd6096f9d4b7010a96f46cc14f3151941958",
                          "typeString": "literal_string \"TAKER_NOT_WHITELISTED\""
                        }
                      ],
                      "id": 162,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        13734,
                        13735
                      ],
                      "referencedDeclaration": 13735,
                      "src": "3833:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 167,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3833:95:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 168,
                  "nodeType": "ExpressionStatement",
                  "src": "3833:95:1"
                },
                {
                  "assignments": [
                    170
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 170,
                      "name": "data",
                      "nodeType": "VariableDeclaration",
                      "scope": 191,
                      "src": "3984:17:1",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 169,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "3984:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 180,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 173,
                            "name": "EXCHANGE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 70,
                            "src": "4040:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IExchange_$3447",
                              "typeString": "contract IExchange"
                            }
                          },
                          "id": 174,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "fillOrder",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3468,
                          "src": "4040:18:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_struct$_Order_$4737_memory_ptr_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_struct$_FillResults_$4343_memory_ptr_$",
                            "typeString": "function (struct LibOrder.Order memory,uint256,bytes memory) external returns (struct LibFillResults.FillResults memory)"
                          }
                        },
                        "id": 175,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "selector",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "4040:27:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 176,
                        "name": "order",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 132,
                        "src": "4081:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Order_$4737_memory_ptr",
                          "typeString": "struct LibOrder.Order memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 177,
                        "name": "takerAssetFillAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 134,
                        "src": "4100:20:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 178,
                        "name": "orderSignature",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 138,
                        "src": "4134:14:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        {
                          "typeIdentifier": "t_struct$_Order_$4737_memory_ptr",
                          "typeString": "struct LibOrder.Order memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 171,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13718,
                        "src": "4004:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 172,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "encodeWithSelector",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "4004:22:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes4) pure returns (bytes memory)"
                      }
                    },
                    "id": 179,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4004:154:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3984:174:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 184,
                        "name": "salt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 136,
                        "src": "4264:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 185,
                        "name": "takerAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 142,
                        "src": "4282:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 186,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 170,
                        "src": "4308:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 187,
                        "name": "TX_ORIGIN_SIGNATURE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 72,
                        "src": "4326:19:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 181,
                        "name": "EXCHANGE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 70,
                        "src": "4223:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IExchange_$3447",
                          "typeString": "contract IExchange"
                        }
                      },
                      "id": 183,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "executeTransaction",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3543,
                      "src": "4223:27:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_address_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,address,bytes memory,bytes memory) external"
                      }
                    },
                    "id": 188,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4223:132:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 189,
                  "nodeType": "ExpressionStatement",
                  "src": "4223:132:1"
                }
              ]
            },
            "documentation": "@dev Fills an order using `msg.sender` as the taker.\n      The transaction will revert if both the maker and taker are not whitelisted.\n      Orders should specify this contract as the `senderAddress` in order to gaurantee\n      that both maker and taker have been whitelisted.\n @param order Order struct containing order specifications.\n @param takerAssetFillAmount Desired amount of takerAsset to sell.\n @param salt Arbitrary value to gaurantee uniqueness of 0x transaction hash.\n @param orderSignature Proof that order has been created by maker.",
            "id": 191,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "fillOrderIfWhitelisted",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 139,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 132,
                  "name": "order",
                  "nodeType": "VariableDeclaration",
                  "scope": 191,
                  "src": "3199:27:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Order_$4737_memory_ptr",
                    "typeString": "struct LibOrder.Order"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 131,
                    "name": "LibOrder.Order",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 4737,
                    "src": "3199:14:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Order_$4737_storage_ptr",
                      "typeString": "struct LibOrder.Order"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 134,
                  "name": "takerAssetFillAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 191,
                  "src": "3236:28:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 133,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3236:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 136,
                  "name": "salt",
                  "nodeType": "VariableDeclaration",
                  "scope": 191,
                  "src": "3274:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 135,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3274:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 138,
                  "name": "orderSignature",
                  "nodeType": "VariableDeclaration",
                  "scope": 191,
                  "src": "3296:27:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 137,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3296:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3189:140:1"
            },
            "payable": false,
            "returnParameters": {
              "id": 140,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3349:0:1"
            },
            "scope": 192,
            "src": "3158:1204:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 193,
        "src": "808:3556:1"
      }
    ],
    "src": "580:3785:1"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.24+commit.e67f0147.Emscripten.clang"
  },
  "networks": {
    "42": {
      "events": {},
      "links": {},
      "address": "0x2d1942C7E980d5FFE5058cBF316B636A04168dB8",
      "transactionHash": "0xcb93da255df7e89c345597ee96ed23042753361e85574e4ed8b1500ab9190bda"
    }
  },
  "schemaVersion": "3.0.0",
  "updatedAt": "2018-12-28T17:41:05.361Z",
  "devdoc": {
    "methods": {
      "fillOrderIfWhitelisted((address,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,bytes,bytes),uint256,uint256,bytes)": {
        "details": "Fills an order using `msg.sender` as the taker.      The transaction will revert if both the maker and taker are not whitelisted.      Orders should specify this contract as the `senderAddress` in order to gaurantee      that both maker and taker have been whitelisted.",
        "params": {
          "order": "Order struct containing order specifications.",
          "orderSignature": "Proof that order has been created by maker.",
          "salt": "Arbitrary value to gaurantee uniqueness of 0x transaction hash.",
          "takerAssetFillAmount": "Desired amount of takerAsset to sell."
        }
      },
      "isValidSignature(bytes32,address,bytes)": {
        "details": "Verifies signer is same as signer of current Ethereum transaction.      NOTE: This function can currently be used to validate signatures coming from outside of this contract.      Extra safety checks can be added for a production contract.",
        "params": {
          "signature": "Proof of signing.",
          "signerAddress": "Address that should have signed the given hash."
        },
        "return": "Validity of order signature."
      },
      "updateWhitelistStatus(address,bool)": {
        "details": "Adds or removes an address from the whitelist.",
        "params": {
          "isApproved": "Whitelist status to assign to address.",
          "target": "Address to add or remove from whitelist."
        }
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}